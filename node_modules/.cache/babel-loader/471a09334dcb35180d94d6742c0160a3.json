{"ast":null,"code":"var _jsxFileName = \"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Authenticator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./login.css\";\nimport { isOtp } from \"./redux/helpers/form-validator.functions\";\nimport { NotificationManager } from \"react-notifications\";\nimport { Link } from \"react-router-dom\";\nimport { N_verifyOTPMobileLogin } from \"./redux/helpers/api_functions_new\";\nimport { user_Login } from \"./redux/actions/authActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Authenticator(props) {\n  _s();\n\n  const {\n    otp_send,\n    user\n  } = useSelector(state => state.AuthReducer);\n  const dispatch = useDispatch();\n  const [otp, setOTP] = useState();\n  const [loading, setLoading] = useState(false);\n  if (!otp_send) props.history.push(\"/login\");\n\n  const submit = e => {\n    e.preventDefault();\n\n    if (isOtp(otp)) {\n      setLoading(true);\n\n      if (user.authenticator === 1) {\n        N_verifyOTPMobileLogin(user.email, otp).then(d => {\n          setLoading(false);\n\n          if ((d === null || d === void 0 ? void 0 : d.status) == 200) {\n            dispatch(user_Login(user.email, user.password, () => {\n              setLoading(false);\n              props.history.replace(\"/exchange/btc-inr\");\n            }, () => setLoading(false)));\n          } else {\n            NotificationManager.error(d.msg);\n          }\n        });\n      } else if (user.authenticator === 2) {\n        var speakeasy = require(\"speakeasy-latest\");\n\n        try {\n          const {\n            base32: secret\n          } = user.authenticator_key;\n          var tokenValidates = speakeasy.totp.verify({\n            secret: secret,\n            encoding: \"base32\",\n            token: otp,\n            window: 6\n          });\n\n          if (tokenValidates) {\n            dispatch(user_Login(user.email, user.password, () => {\n              setLoading(false);\n              props.history.replace(\"/exchange/btc-inr\");\n            }, () => setLoading(false)));\n          } else {\n            console.log(tokenValidates, otp, secret);\n            NotificationManager.error(\"Somthing Wrong!!\");\n            setLoading(false);\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    } else {\n      NotificationManager.error(\"OTP is Not Correct\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signupContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-md-12 col-sm-12\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"signupform mdfthemetxt\",\n              method: \"post\",\n              onSubmit: submit,\n              id: \"loginForm\",\n              autoComplete: \"off\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"text-dark\",\n                  children: [\"Verify Your\", \" \", user.authenticator === 1 ? \"Mobile Authentication\" : \"Google Authentication\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `signupform-control`,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"user_otp\",\n                  children: \"OTP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"user_otp\",\n                  id: \"user_otp\",\n                  maxLength: 6,\n                  value: otp,\n                  onChange: e => setOTP(e.target.value.replace(/[^0-9.]/g, \"\").replace(/(\\..*?)\\..*/g, \"$1\")),\n                  required: \"\",\n                  placeholder: \"Enter 6 digit otp\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-check-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-exclamation-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"reg_btn\",\n                children: [loading ? /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"loading-icon fas fa-spinner fa-spin mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n                  id: \"reg\",\n                  children: \"Verify OTP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                className: \"signupform-login\",\n                to: \"/login\",\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Authenticator, \"m37a24hp7OdVbK2H4ZVllB/2+dA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Authenticator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authenticator\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","isOtp","NotificationManager","Link","N_verifyOTPMobileLogin","user_Login","Authenticator","props","otp_send","user","state","AuthReducer","dispatch","otp","setOTP","loading","setLoading","history","push","submit","e","preventDefault","authenticator","email","then","d","status","password","replace","error","msg","speakeasy","require","base32","secret","authenticator_key","tokenValidates","totp","verify","encoding","token","window","console","log","target","value"],"sources":["/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Authenticator.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./login.css\";\nimport { isOtp } from \"./redux/helpers/form-validator.functions\";\nimport { NotificationManager } from \"react-notifications\";\nimport { Link } from \"react-router-dom\";\nimport { N_verifyOTPMobileLogin } from \"./redux/helpers/api_functions_new\";\nimport { user_Login } from \"./redux/actions/authActions\";\nexport default function Authenticator(props) {\n  const { otp_send, user } = useSelector((state) => state.AuthReducer);\n  const dispatch = useDispatch();\n  const [otp, setOTP] = useState();\n  const [loading, setLoading] = useState(false);\n  if (!otp_send) props.history.push(\"/login\");\n  const submit = (e) => {\n    e.preventDefault();\n    if (isOtp(otp)) {\n      setLoading(true);\n      if (user.authenticator === 1) {\n        N_verifyOTPMobileLogin(user.email, otp).then((d) => {\n          setLoading(false);\n          if (d?.status == 200) {\n            dispatch(\n              user_Login(\n                user.email,\n                user.password,\n                () => {\n                  setLoading(false);\n                  props.history.replace(\"/exchange/btc-inr\");\n                },\n                () => setLoading(false)\n              )\n            );\n          } else {\n            NotificationManager.error(d.msg);\n          }\n        });\n      } else if (user.authenticator === 2) {\n        var speakeasy = require(\"speakeasy-latest\");\n        try {\n          const { base32: secret } = user.authenticator_key;\n          var tokenValidates = speakeasy.totp.verify({\n            secret: secret,\n            encoding: \"base32\",\n            token: otp,\n            window: 6,\n          });\n          if (tokenValidates) {\n            dispatch(\n              user_Login(\n                user.email,\n                user.password,\n                () => {\n                  setLoading(false);\n                  props.history.replace(\"/exchange/btc-inr\");\n                },\n                () => setLoading(false)\n              )\n            );\n          } else {\n            console.log(tokenValidates, otp, secret);\n            NotificationManager.error(\"Somthing Wrong!!\");\n            setLoading(false);\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    } else {\n      NotificationManager.error(\"OTP is Not Correct\");\n    }\n  };\n  return (\n    <>\n      <div className=\"signupContainer\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12 col-md-12 col-sm-12\">\n              <form\n                className=\"signupform mdfthemetxt\"\n                method=\"post\"\n                onSubmit={submit}\n                id=\"loginForm\"\n                autoComplete=\"off\"\n              >\n                <div>\n                  <h2 className=\"text-dark\">\n                    Verify Your{\" \"}\n                    {user.authenticator === 1\n                      ? \"Mobile Authentication\"\n                      : \"Google Authentication\"}\n                  </h2>\n                </div>\n                <div className={`signupform-control`}>\n                  <label htmlFor=\"user_otp\">OTP</label>\n                  <input\n                    type=\"text\"\n                    name=\"user_otp\"\n                    id=\"user_otp\"\n                    maxLength={6}\n                    value={otp}\n                    onChange={(e) =>\n                      setOTP(\n                        e.target.value\n                          .replace(/[^0-9.]/g, \"\")\n                          .replace(/(\\..*?)\\..*/g, \"$1\")\n                      )\n                    }\n                    required=\"\"\n                    placeholder=\"Enter 6 digit otp\"\n                  />\n                  <i className=\"fas fa-check-circle\"></i>\n                  <i className=\"fas fa-exclamation-circle\"></i>\n                  <small></small>\n                </div>\n                <button type=\"submit\" className=\"reg_btn\">\n                  {loading ? (\n                    <i className=\"loading-icon fas fa-spinner fa-spin mr-2\"></i>\n                  ) : null}\n                  <span id=\"reg\">Verify OTP</span>\n                </button>\n                <Link className=\"signupform-login\" to=\"/login\">\n                  Back\n                </Link>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,aAAP;AACA,SAASC,KAAT,QAAsB,0CAAtB;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,sBAAT,QAAuC,mCAAvC;AACA,SAASC,UAAT,QAA2B,6BAA3B;;;AACA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAAA;;EAC3C,MAAM;IAAEC,QAAF;IAAYC;EAAZ,IAAqBT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,WAAlB,CAAtC;EACA,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;EACA,MAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,EAA9B;EACA,MAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,KAAD,CAAtC;EACA,IAAI,CAACW,QAAL,EAAeD,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmB,QAAnB;;EACf,MAAMC,MAAM,GAAIC,CAAD,IAAO;IACpBA,CAAC,CAACC,cAAF;;IACA,IAAIpB,KAAK,CAACY,GAAD,CAAT,EAAgB;MACdG,UAAU,CAAC,IAAD,CAAV;;MACA,IAAIP,IAAI,CAACa,aAAL,KAAuB,CAA3B,EAA8B;QAC5BlB,sBAAsB,CAACK,IAAI,CAACc,KAAN,EAAaV,GAAb,CAAtB,CAAwCW,IAAxC,CAA8CC,CAAD,IAAO;UAClDT,UAAU,CAAC,KAAD,CAAV;;UACA,IAAI,CAAAS,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEC,MAAH,KAAa,GAAjB,EAAsB;YACpBd,QAAQ,CACNP,UAAU,CACRI,IAAI,CAACc,KADG,EAERd,IAAI,CAACkB,QAFG,EAGR,MAAM;cACJX,UAAU,CAAC,KAAD,CAAV;cACAT,KAAK,CAACU,OAAN,CAAcW,OAAd,CAAsB,mBAAtB;YACD,CANO,EAOR,MAAMZ,UAAU,CAAC,KAAD,CAPR,CADJ,CAAR;UAWD,CAZD,MAYO;YACLd,mBAAmB,CAAC2B,KAApB,CAA0BJ,CAAC,CAACK,GAA5B;UACD;QACF,CAjBD;MAkBD,CAnBD,MAmBO,IAAIrB,IAAI,CAACa,aAAL,KAAuB,CAA3B,EAA8B;QACnC,IAAIS,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAvB;;QACA,IAAI;UACF,MAAM;YAAEC,MAAM,EAAEC;UAAV,IAAqBzB,IAAI,CAAC0B,iBAAhC;UACA,IAAIC,cAAc,GAAGL,SAAS,CAACM,IAAV,CAAeC,MAAf,CAAsB;YACzCJ,MAAM,EAAEA,MADiC;YAEzCK,QAAQ,EAAE,QAF+B;YAGzCC,KAAK,EAAE3B,GAHkC;YAIzC4B,MAAM,EAAE;UAJiC,CAAtB,CAArB;;UAMA,IAAIL,cAAJ,EAAoB;YAClBxB,QAAQ,CACNP,UAAU,CACRI,IAAI,CAACc,KADG,EAERd,IAAI,CAACkB,QAFG,EAGR,MAAM;cACJX,UAAU,CAAC,KAAD,CAAV;cACAT,KAAK,CAACU,OAAN,CAAcW,OAAd,CAAsB,mBAAtB;YACD,CANO,EAOR,MAAMZ,UAAU,CAAC,KAAD,CAPR,CADJ,CAAR;UAWD,CAZD,MAYO;YACL0B,OAAO,CAACC,GAAR,CAAYP,cAAZ,EAA4BvB,GAA5B,EAAiCqB,MAAjC;YACAhC,mBAAmB,CAAC2B,KAApB,CAA0B,kBAA1B;YACAb,UAAU,CAAC,KAAD,CAAV;UACD;QACF,CAzBD,CAyBE,OAAOa,KAAP,EAAc;UACda,OAAO,CAACb,KAAR,CAAcA,KAAd;QACD;MACF;IACF,CApDD,MAoDO;MACL3B,mBAAmB,CAAC2B,KAApB,CAA0B,oBAA1B;IACD;EACF,CAzDD;;EA0DA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,iBAAf;MAAA,uBACE;QAAK,SAAS,EAAC,WAAf;QAAA,uBACE;UAAK,SAAS,EAAC,KAAf;UAAA,uBACE;YAAK,SAAS,EAAC,4BAAf;YAAA,uBACE;cACE,SAAS,EAAC,wBADZ;cAEE,MAAM,EAAC,MAFT;cAGE,QAAQ,EAAEV,MAHZ;cAIE,EAAE,EAAC,WAJL;cAKE,YAAY,EAAC,KALf;cAAA,wBAOE;gBAAA,uBACE;kBAAI,SAAS,EAAC,WAAd;kBAAA,0BACc,GADd,EAEGV,IAAI,CAACa,aAAL,KAAuB,CAAvB,GACG,uBADH,GAEG,uBAJN;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QAPF,eAeE;gBAAK,SAAS,EAAG,oBAAjB;gBAAA,wBACE;kBAAO,OAAO,EAAC,UAAf;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAEE;kBACE,IAAI,EAAC,MADP;kBAEE,IAAI,EAAC,UAFP;kBAGE,EAAE,EAAC,UAHL;kBAIE,SAAS,EAAE,CAJb;kBAKE,KAAK,EAAET,GALT;kBAME,QAAQ,EAAGO,CAAD,IACRN,MAAM,CACJM,CAAC,CAACwB,MAAF,CAASC,KAAT,CACGjB,OADH,CACW,UADX,EACuB,EADvB,EAEGA,OAFH,CAEW,cAFX,EAE2B,IAF3B,CADI,CAPV;kBAaE,QAAQ,EAAC,EAbX;kBAcE,WAAW,EAAC;gBAdd;kBAAA;kBAAA;kBAAA;gBAAA,QAFF,eAkBE;kBAAG,SAAS,EAAC;gBAAb;kBAAA;kBAAA;kBAAA;gBAAA,QAlBF,eAmBE;kBAAG,SAAS,EAAC;gBAAb;kBAAA;kBAAA;kBAAA;gBAAA,QAnBF,eAoBE;kBAAA;kBAAA;kBAAA;gBAAA,QApBF;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAfF,eAqCE;gBAAQ,IAAI,EAAC,QAAb;gBAAsB,SAAS,EAAC,SAAhC;gBAAA,WACGb,OAAO,gBACN;kBAAG,SAAS,EAAC;gBAAb;kBAAA;kBAAA;kBAAA;gBAAA,QADM,GAEJ,IAHN,eAIE;kBAAM,EAAE,EAAC,KAAT;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAJF;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QArCF,eA2CE,QAAC,IAAD;gBAAM,SAAS,EAAC,kBAAhB;gBAAmC,EAAE,EAAC,QAAtC;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QA3CF;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AA2DD;;GA3HuBT,a;UACKN,W,EACVD,W;;;KAFKO,a"},"metadata":{},"sourceType":"module"}