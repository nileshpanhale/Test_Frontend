{"ast":null,"code":"var _jsxFileName = \"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Account_Authenticator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./login.css\";\nimport { NotificationManager } from \"react-notifications\";\nimport { NavLink } from \"react-router-dom\";\nimport { N_get_settings, N_setGoogleAuthOtp } from \"./redux/helpers/api_functions_new\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Account_Authenticator(props) {\n  _s();\n\n  const {\n    user\n  } = useSelector(state => state.AuthReducer);\n  const [otp, setOTP] = useState();\n  const [authenticator_key, setAuthenticator] = useState();\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    N_get_settings((user === null || user === void 0 ? void 0 : user.params) ? user.params.user_id : user.user_id).then(d => {\n      console.log(\"get setting: \", d);\n\n      if (d.status === 200) {\n        setAuthenticator(d.params.authenticator_key);\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  }, []);\n\n  const submit = e => {\n    e.preventDefault();\n\n    var speakeasy = require(\"speakeasy-latest\");\n\n    try {\n      const {\n        base32: secret\n      } = authenticator_key;\n      var tokenValidates = speakeasy.totp.verify({\n        secret: secret,\n        encoding: \"base32\",\n        token: otp,\n        window: 6\n      });\n\n      if (tokenValidates) {\n        N_setGoogleAuthOtp((user === null || user === void 0 ? void 0 : user.params) ? user.params.user_id : user.user_id, 2).then(res => {\n          // if (res.status === 200) {\n          console.log(\"set gauth: \", res);\n          NotificationManager.success(res.message);\n          props.history.replace(\"/exchange/btc-inr\"); // }\n        }).catch(e => {\n          console.log(e);\n        });\n      } else {\n        console.log(tokenValidates, otp, secret);\n        NotificationManager.error(\"Somthing Wrong!!\");\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signupContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container text-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-md-12 col-sm-12\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"signupform\",\n              method: \"post\",\n              onSubmit: submit,\n              id: \"loginForm\",\n              autoComplete: \"off\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"text-dark\",\n                  children: \"Verify Your Google Authentication\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `signupform-control`,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"user_otp\",\n                  children: \"OTP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"user_otp\",\n                  id: \"user_otp\",\n                  maxLength: 6,\n                  value: otp,\n                  onChange: e => setOTP(e.target.value.replace(/[^0-9.]/g, \"\").replace(/(\\..*?)\\..*/g, \"$1\")),\n                  required: \"\",\n                  placeholder: \"Enter 6 digit otp\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-check-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-exclamation-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"reg_btn btn btn-success\",\n                children: [loading ? /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"loading-icon fas fa-spinner fa-spin mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n                  id: \"reg\",\n                  children: \"Verify OTP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                className: \"signupform-login\",\n                to: \"/2fa\",\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Account_Authenticator, \"RhH/6APmzz3l+EAmh7sFGut9aO0=\", false, function () {\n  return [useSelector];\n});\n\n_c = Account_Authenticator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account_Authenticator\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","NotificationManager","NavLink","N_get_settings","N_setGoogleAuthOtp","Account_Authenticator","props","user","state","AuthReducer","otp","setOTP","authenticator_key","setAuthenticator","loading","setLoading","params","user_id","then","d","console","log","status","catch","e","submit","preventDefault","speakeasy","require","base32","secret","tokenValidates","totp","verify","encoding","token","window","res","success","message","history","replace","error","target","value"],"sources":["/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Account_Authenticator.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {  useSelector } from \"react-redux\";\nimport \"./login.css\";\nimport { NotificationManager } from \"react-notifications\";\nimport {  NavLink } from \"react-router-dom\";\nimport {\n  N_get_settings,\n  N_setGoogleAuthOtp,\n} from \"./redux/helpers/api_functions_new\";\nexport default function Account_Authenticator(props) {\n  const { user } = useSelector((state) => state.AuthReducer);\n  const [otp, setOTP] = useState();\n  const [authenticator_key, setAuthenticator] = useState();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    N_get_settings(user?.params ? user.params.user_id : user.user_id)\n      .then((d) => {\n        console.log(\"get setting: \", d);\n        if (d.status === 200) {\n          setAuthenticator(d.params.authenticator_key);\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, []);\n\n  const submit = (e) => {\n    e.preventDefault();\n    var speakeasy = require(\"speakeasy-latest\");\n    try {\n      const { base32: secret } = authenticator_key;\n      var tokenValidates = speakeasy.totp.verify({\n        secret: secret,\n        encoding: \"base32\",\n        token: otp,\n        window: 6,\n      });\n      if (tokenValidates) {\n        N_setGoogleAuthOtp(user?.params ? user.params.user_id : user.user_id, 2)\n          .then((res) => {\n            // if (res.status === 200) {\n            console.log(\"set gauth: \", res);\n            NotificationManager.success(res.message);\n            props.history.replace(\"/exchange/btc-inr\");\n\n            // }\n          })\n          .catch((e) => {\n            console.log(e);\n          });\n      } else {\n        console.log(tokenValidates, otp, secret);\n        NotificationManager.error(\"Somthing Wrong!!\");\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <>\n      <div className=\"signupContainer\">\n        <div className=\"container text-dark\">\n          <div className=\"row\">\n            <div className=\"col-12 col-md-12 col-sm-12\">\n              <form\n                className=\"signupform\"\n                method=\"post\"\n                onSubmit={submit}\n                id=\"loginForm\"\n                autoComplete=\"off\"\n              >\n                <div>\n                  <h2 className=\"text-dark\">Verify Your Google Authentication</h2>\n                </div>\n                <div className={`signupform-control`}>\n                  <label htmlFor=\"user_otp\">OTP</label>\n                  <input\n                    type=\"text\"\n                    name=\"user_otp\"\n                    id=\"user_otp\"\n                    maxLength={6}\n                    value={otp}\n                    onChange={(e) =>\n                      setOTP(\n                        e.target.value\n                          .replace(/[^0-9.]/g, \"\")\n                          .replace(/(\\..*?)\\..*/g, \"$1\")\n                      )\n                    }\n                    required=\"\"\n                    placeholder=\"Enter 6 digit otp\"\n                  />\n                  <i className=\"fas fa-check-circle\"></i>\n                  <i className=\"fas fa-exclamation-circle\"></i>\n                  <small></small>\n                </div>\n                <button type=\"submit\" className=\"reg_btn btn btn-success\">\n                  {loading ? (\n                    <i className=\"loading-icon fas fa-spinner fa-spin mr-2\"></i>\n                  ) : null}\n                  <span id=\"reg\">Verify OTP</span>\n                </button>\n                <NavLink className=\"signupform-login\" to=\"/2fa\">\n                  Back\n                </NavLink>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}