[{"/Users/nileshpanhale/Documents/Test_Frontend/src/index.js":"1","/Users/nileshpanhale/Documents/Test_Frontend/src/reportWebVitals.js":"2","/Users/nileshpanhale/Documents/Test_Frontend/src/App.js":"3","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/store.js":"4","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Themes.js":"5","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/router.js":"6","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Globalstyle.js":"7","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/reducers/authReducer.js":"8","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/reducers/coinDBReducer.js":"9","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/reducers/websiteDBReducer.js":"10","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/actions/coinDBAction.js":"11","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/helpers/socket.js":"12","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/actions/websiteDBAction.js":"13","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Forget.jsx":"14","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Index.jsx":"15","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/AuthKyc.jsx":"16","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Login.jsx":"17","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/FOTP.jsx":"18","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/OTP.jsx":"19","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Register.jsx":"20","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Security.jsx":"21","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/currencyPreference.jsx":"22","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/UserPayment.jsx":"23","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/UserProfile.jsx":"24","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Fees.jsx":"25","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/UserReferral.jsx":"26","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Wallet.jsx":"27","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/TwoFA.jsx":"28","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Exchange.jsx":"29","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/PrivacyControl.jsx":"30","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Reports.jsx":"31","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Notification.jsx":"32","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Welcome.jsx":"33","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/ActivityLog.jsx":"34","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Cupon.jsx":"35","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/UpcomingProgram.jsx":"36","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/UpdatePassword.jsx":"37","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/UserKyc.jsx":"38","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/InrDeposite.jsx":"39","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/P2P.jsx":"40","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/MobileVerification.jsx":"41","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/AffiliateScreen.jsx":"42","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Authenticator.jsx":"43","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Success.jsx":"44","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Notice.jsx":"45","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/BuySell.jsx":"46","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/KYCVerification.jsx":"47","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Account_Authenticator.jsx":"48","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/RegisterNew.jsx":"49","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/BtexStaking.jsx":"50","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/ConfimationPopup.jsx":"51","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/Privacy.jsx":"52","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/Terms.jsx":"53","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/NftMarketPlace.jsx":"54","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/BtextCryptoBank.jsx":"55","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/BtextLaunched.jsx":"56","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/Career.jsx":"57","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/BtextExplorer.jsx":"58","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/BusinessContact.jsx":"59","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/refer.jsx":"60","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/About.jsx":"61","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/download.jsx":"62","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/Home_page.jsx":"63","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/Community.jsx":"64","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/metaverse.jsx":"65","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/about_page.jsx":"66","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/Developer Api.jsx":"67","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/constant/index.js":"68","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/helpers/api_functions_new.js":"69","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/actions/authActions.js":"70","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/helpers/helper_functions.js":"71","/Users/nileshpanhale/Documents/Test_Frontend/src/helpers.js":"72","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/helpers/Math.js":"73","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/Loader.jsx":"74","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/ftx_design/Roadmap.jsx":"75","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/ftx_design/Header.jsx":"76","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/Index-components/Footer.jsx":"77","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/Header.jsx":"78","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/Footer.jsx":"79","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/Banner.jsx":"80","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/helpers/form-validator.functions.js":"81","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/NewsLater.jsx":"82","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Order.system.tab.jsx":"83","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/FullLoader.jsx":"84","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/StaticUSDPage.jsx":"85","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/PreLoader.jsx":"86","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/Orders.tab.jsx":"87","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Trade.Tab.jsx":"88","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/ProfileSidebar.jsx":"89","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/p2pBuyNSell.jsx":"90","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/CandleStick.jsx":"91","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/BuyNSell.jsx":"92","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/ExSide.jsx":"93","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/ftx_design/FeatureCards.jsx":"94","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/ftx_design/Trade.jsx":"95","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/ftx_design/Slider.jsx":"96","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/StartTrade.jsx":"97","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/Newdes.jsx":"98","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/GetInTouch.jsx":"99","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/TradeAnyWhere.jsx":"100","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/MarketTrend.jsx":"101","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/NewComponents/BannerNew.jsx":"102","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/BannerData.jsx":"103","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/Plan.jsx":"104","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/LoginORSignup.jsx":"105","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/NewComponents/GetInTouchNew.jsx":"106","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/NewComponents/MarketTrendNew.jsx":"107","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/NewComponents/TradeAnyWhereNew.jsx":"108"},{"size":495,"mtime":1663924496000,"results":"109","hashOfConfig":"110"},{"size":362,"mtime":1663924496000,"results":"111","hashOfConfig":"110"},{"size":756,"mtime":1663926545000,"results":"112","hashOfConfig":"110"},{"size":608,"mtime":1663924496000,"results":"113","hashOfConfig":"110"},{"size":1639,"mtime":1663924496000,"results":"114","hashOfConfig":"110"},{"size":9143,"mtime":1663924496000,"results":"115","hashOfConfig":"110"},{"size":2299,"mtime":1663924496000,"results":"116","hashOfConfig":"110"},{"size":1876,"mtime":1663924496000,"results":"117","hashOfConfig":"110"},{"size":3568,"mtime":1663930694000,"results":"118","hashOfConfig":"110"},{"size":400,"mtime":1663924496000,"results":"119","hashOfConfig":"110"},{"size":4145,"mtime":1663929822000,"results":"120","hashOfConfig":"110"},{"size":330,"mtime":1663924496000,"results":"121","hashOfConfig":"110"},{"size":470,"mtime":1663924496000,"results":"122","hashOfConfig":"110"},{"size":2497,"mtime":1663924496000,"results":"123","hashOfConfig":"110"},{"size":8405,"mtime":1663924496000,"results":"124","hashOfConfig":"110"},{"size":35189,"mtime":1663924496000,"results":"125","hashOfConfig":"110"},{"size":10287,"mtime":1663924496000,"results":"126","hashOfConfig":"110"},{"size":3548,"mtime":1663924496000,"results":"127","hashOfConfig":"110"},{"size":6857,"mtime":1663924496000,"results":"128","hashOfConfig":"110"},{"size":13497,"mtime":1663924496000,"results":"129","hashOfConfig":"110"},{"size":5710,"mtime":1663924496000,"results":"130","hashOfConfig":"110"},{"size":3583,"mtime":1663924496000,"results":"131","hashOfConfig":"110"},{"size":5720,"mtime":1663924496000,"results":"132","hashOfConfig":"110"},{"size":4204,"mtime":1663924496000,"results":"133","hashOfConfig":"110"},{"size":2892,"mtime":1663924496000,"results":"134","hashOfConfig":"110"},{"size":14461,"mtime":1663924496000,"results":"135","hashOfConfig":"110"},{"size":77198,"mtime":1663924496000,"results":"136","hashOfConfig":"110"},{"size":12254,"mtime":1663924496000,"results":"137","hashOfConfig":"110"},{"size":4085,"mtime":1663926557000,"results":"138","hashOfConfig":"110"},{"size":2260,"mtime":1663924496000,"results":"139","hashOfConfig":"110"},{"size":5527,"mtime":1663924496000,"results":"140","hashOfConfig":"110"},{"size":2871,"mtime":1663924496000,"results":"141","hashOfConfig":"110"},{"size":15166,"mtime":1663924496000,"results":"142","hashOfConfig":"110"},{"size":3919,"mtime":1663924496000,"results":"143","hashOfConfig":"110"},{"size":2224,"mtime":1663924496000,"results":"144","hashOfConfig":"110"},{"size":1647,"mtime":1663924496000,"results":"145","hashOfConfig":"110"},{"size":4503,"mtime":1663924496000,"results":"146","hashOfConfig":"110"},{"size":3455,"mtime":1663924496000,"results":"147","hashOfConfig":"110"},{"size":6722,"mtime":1663924496000,"results":"148","hashOfConfig":"110"},{"size":3066,"mtime":1663924496000,"results":"149","hashOfConfig":"110"},{"size":8748,"mtime":1663924496000,"results":"150","hashOfConfig":"110"},{"size":17021,"mtime":1663924496000,"results":"151","hashOfConfig":"110"},{"size":4444,"mtime":1663924496000,"results":"152","hashOfConfig":"110"},{"size":2746,"mtime":1663924496000,"results":"153","hashOfConfig":"110"},{"size":2744,"mtime":1663924496000,"results":"154","hashOfConfig":"110"},{"size":27527,"mtime":1663924496000,"results":"155","hashOfConfig":"110"},{"size":33436,"mtime":1663924496000,"results":"156","hashOfConfig":"110"},{"size":3746,"mtime":1663924496000,"results":"157","hashOfConfig":"110"},{"size":23339,"mtime":1663924496000,"results":"158","hashOfConfig":"110"},{"size":90569,"mtime":1663924496000,"results":"159","hashOfConfig":"110"},{"size":988,"mtime":1663924496000,"results":"160","hashOfConfig":"110"},{"size":14974,"mtime":1663924496000,"results":"161","hashOfConfig":"110"},{"size":63281,"mtime":1663924496000,"results":"162","hashOfConfig":"110"},{"size":429,"mtime":1663924496000,"results":"163","hashOfConfig":"110"},{"size":404,"mtime":1663924496000,"results":"164","hashOfConfig":"110"},{"size":402,"mtime":1663924496000,"results":"165","hashOfConfig":"110"},{"size":387,"mtime":1663924496000,"results":"166","hashOfConfig":"110"},{"size":454,"mtime":1663924496000,"results":"167","hashOfConfig":"110"},{"size":422,"mtime":1663924496000,"results":"168","hashOfConfig":"110"},{"size":2300,"mtime":1663924496000,"results":"169","hashOfConfig":"110"},{"size":5636,"mtime":1663924496000,"results":"170","hashOfConfig":"110"},{"size":5878,"mtime":1663924496000,"results":"171","hashOfConfig":"110"},{"size":38317,"mtime":1663924496000,"results":"172","hashOfConfig":"110"},{"size":403,"mtime":1663924496000,"results":"173","hashOfConfig":"110"},{"size":505,"mtime":1663924496000,"results":"174","hashOfConfig":"110"},{"size":638,"mtime":1663924496000,"results":"175","hashOfConfig":"110"},{"size":5296,"mtime":1663924496000,"results":"176","hashOfConfig":"110"},{"size":1457,"mtime":1663924496000,"results":"177","hashOfConfig":"110"},{"size":31228,"mtime":1663924496000,"results":"178","hashOfConfig":"110"},{"size":8785,"mtime":1663924496000,"results":"179","hashOfConfig":"110"},{"size":3102,"mtime":1663924496000,"results":"180","hashOfConfig":"110"},{"size":178,"mtime":1663924496000,"results":"181","hashOfConfig":"110"},{"size":695,"mtime":1663924496000,"results":"182","hashOfConfig":"110"},{"size":274,"mtime":1663924496000,"results":"183","hashOfConfig":"110"},{"size":1671,"mtime":1663924496000,"results":"184","hashOfConfig":"110"},{"size":13546,"mtime":1663924496000,"results":"185","hashOfConfig":"110"},{"size":5117,"mtime":1663924496000,"results":"186","hashOfConfig":"110"},{"size":3377,"mtime":1663924496000,"results":"187","hashOfConfig":"110"},{"size":4265,"mtime":1663924496000,"results":"188","hashOfConfig":"110"},{"size":3148,"mtime":1663924496000,"results":"189","hashOfConfig":"110"},{"size":3379,"mtime":1663924496000,"results":"190","hashOfConfig":"110"},{"size":2049,"mtime":1663924496000,"results":"191","hashOfConfig":"110"},{"size":14145,"mtime":1663924496000,"results":"192","hashOfConfig":"110"},{"size":328,"mtime":1663924496000,"results":"193","hashOfConfig":"110"},{"size":1369,"mtime":1663924496000,"results":"194","hashOfConfig":"110"},{"size":409,"mtime":1663924496000,"results":"195","hashOfConfig":"110"},{"size":14561,"mtime":1663924496000,"results":"196","hashOfConfig":"110"},{"size":4334,"mtime":1663924496000,"results":"197","hashOfConfig":"110"},{"size":2562,"mtime":1663924496000,"results":"198","hashOfConfig":"110"},{"size":12930,"mtime":1663924496000,"results":"199","hashOfConfig":"110"},{"size":5831,"mtime":1664355341124,"results":"200","hashOfConfig":"110"},{"size":42060,"mtime":1663924496000,"results":"201","hashOfConfig":"110"},{"size":1663,"mtime":1663930449000,"results":"202","hashOfConfig":"110"},{"size":1606,"mtime":1663924496000,"results":"203","hashOfConfig":"110"},{"size":627,"mtime":1663924496000,"results":"204","hashOfConfig":"110"},{"size":3139,"mtime":1663924496000,"results":"205","hashOfConfig":"110"},{"size":754,"mtime":1663924496000,"results":"206","hashOfConfig":"110"},{"size":12878,"mtime":1663924496000,"results":"207","hashOfConfig":"110"},{"size":2148,"mtime":1663924496000,"results":"208","hashOfConfig":"110"},{"size":2516,"mtime":1663924496000,"results":"209","hashOfConfig":"110"},{"size":2877,"mtime":1663924496000,"results":"210","hashOfConfig":"110"},{"size":7100,"mtime":1663924496000,"results":"211","hashOfConfig":"110"},{"size":2200,"mtime":1663924496000,"results":"212","hashOfConfig":"110"},{"size":1710,"mtime":1663924496000,"results":"213","hashOfConfig":"110"},{"size":1971,"mtime":1663924496000,"results":"214","hashOfConfig":"110"},{"size":2960,"mtime":1663924496000,"results":"215","hashOfConfig":"110"},{"size":2900,"mtime":1663924496000,"results":"216","hashOfConfig":"110"},{"size":2353,"mtime":1663924496000,"results":"217","hashOfConfig":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},"di57pn",{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"220"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"220"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"220"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"220"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"220"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"220"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"220"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"220"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"220"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"220"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"220"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"220"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":2,"source":"285","usedDeprecatedRules":"220"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"220"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"220"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"220"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"220"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"220"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"220"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"220"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"220"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"220"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"220"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"220"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"220"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"220"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"220"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"220"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"220"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"220"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"220"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"220"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"220"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"220"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"220"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"220"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"220"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"220"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"220"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"220"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"417","usedDeprecatedRules":"220"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"220"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"220"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"220"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"220"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"220"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"447","messages":"448","errorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"220"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"220"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"220"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"220"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"220"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"220"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"220"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"220"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"220"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"220"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"220"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"220"},"/Users/nileshpanhale/Documents/Test_Frontend/src/index.js",[],["493","494"],"/Users/nileshpanhale/Documents/Test_Frontend/src/reportWebVitals.js",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/App.js",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/store.js",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Themes.js",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/router.js",["495","496","497","498","499","500"],"import React, { useEffect } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport AuthKyc from \"./AuthKyc\";\nimport CurrencyPreference from \"./currencyPreference\";\nimport Forget from \"./Forget\";\nimport Index from \"./Index\";\nimport Login from \"./Login\";\nimport OTP from \"./OTP\";\nimport UpdatePassword from \"./UpdatePassword\";\nimport FOTP from \"./FOTP\";\nimport Register from \"./Register\";\nimport Security from \"./Security\";\nimport UserKYC from \"./UserKyc\";\nimport UserPayment from \"./UserPayment\";\nimport UserReferral from \"./UserReferral\";\nimport Welcome from \"./Welcome\";\nimport Exchange from \"./Exchange\";\nimport UserProfile from \"./UserProfile\";\nimport Wallet from \"./Wallet\";\nimport GetNotifi from \"./Notification\";\nimport Fees from \"./Fees\";\nimport TwoFA from \"./TwoFA\";\nimport ActivityLog from \"./ActivityLog\";\nimport Reports from \"./Reports\";\nimport PrivacyControl from \"./PrivacyControl\";\nimport Cupon from \"./Cupon\";\nimport UpcomingProgram from \"./UpcomingProgram\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getUserBalance,\n  getUserOrder,\n  \n} from \"./redux/actions/coinDBAction\";\nimport { getWebsite } from \"./redux/actions/websiteDBAction\";\nimport InrDeposite from \"./InrDeposite\";\nimport MobileVerification from \"./MobileVerification\";\nimport ConfimationPopup from \"./components/ConfimationPopup\";\nimport AffiliateScreen from \"./AffiliateScreen\";\n\nimport Authenticator from \"./Authenticator\";\nimport P2P from \"./P2P\";\nimport NftMarketPlace from \"./HomeComp/NftMarketPlace\";\nimport BtextLaunched from \"./HomeComp/BtextLaunched\";\nimport BtextCryptoBank from \"./HomeComp/BtextCryptoBank\";\nimport BtextExplorer from \"./HomeComp/BtextExplorer\";\nimport About from \"./HomeComp/About\";\nimport Career from \"./HomeComp/Career\";\nimport BusinessContact from \"./HomeComp/BusinessContact\";\nimport Community from \"./HomeComp/Community\";\nimport Notice from \"./Notice\";\nimport Success from \"./Success\";\nimport createSocketClient from \"./redux/helpers/socket\";\nimport {\n  GET_COIN_DATA,\n  GET_CURRENCY_DATA,\n  SET_BUY_ORDER_BOOK,\n  SET_SELL_ORDER_BOOK,\n  SET_TRADE_HISTORY,\n} from \"./redux/constant\";\nimport Account_Authenticator from \"./Account_Authenticator\";\nimport BtexStaking from \"./BtexStaking\";\nimport KYCVerification from \"./KYCVerification\";\nimport Privacy from \"./components/Privacy\";\nimport Terms from \"./components/Terms\";\nimport { GiTemplarShield } from \"react-icons/gi\";\nimport Home_page from \"./HomeComp/Home_page\";\nimport Refer from \"./HomeComp/refer\";\nimport Download from \"./HomeComp/download\";\nimport About_page from \"./HomeComp/about_page\";\nimport Metaverse from \"./HomeComp/metaverse\";\nimport Api from \"./HomeComp/Developer Api\";\nimport RegisterNew from \"./RegisterNew\";\nimport BuySell from \"./BuySell\";\nexport default function Router(props) {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state) => state.AuthReducer.user);\n  const { isLoggedIn } = useSelector((state) => state.AuthReducer);\n  \n  useEffect(() => {\n    const socket = new createSocketClient(\"kujgwvfq-a-ghosttown-z-1fhhup0p6\");\n    socket.on(\"cmc_updated\", (res) => {\n      console.log(\"res cmc: \", res);\n      if (res[0]?.raw_current_price_inr) {\n        dispatch({ type: GET_COIN_DATA, data: res, coin_loading: false });\n      }\n      dispatch({\n        type: GET_CURRENCY_DATA,\n        data: { currency_coin: Date.now(), currency_price: 2 },\n      });\n    });\n    socket.on(\"buy_order_updated\", (res) => {\n      // console.log(\"buy_order_updated: \", res);\n      dispatch({\n        type: SET_BUY_ORDER_BOOK,\n        data: res,\n        order_book_loading: false,\n      });\n    });\n    // socket.on(\"welcome\", (msg) => {\n    //   console.log(\"Welcome message\", msg);\n    // });\n    \n    socket.on(\"sell_order_updated\", (res) => {\n      // console.log(\"sell_order_updated: \", res);\n      dispatch({\n        type: SET_SELL_ORDER_BOOK,\n        data: res,\n        order_book_loading: false,\n      });\n    });\n\n    socket.on(\"order_history_updated\", (res) => {\n      // console.log(\"order_history_updated\", res);\n      dispatch({ type: SET_TRADE_HISTORY, data: res, trade_loading: false });\n    });\n    // socket.on(\"connect\", () => {\n    //   console.log(\"connected!\");\n    // });\n    // socket.on(\"error\", (eror) => {\n    //   console.log(\"eror\", eror);\n    // });\n    // dispatch(getData());\n    dispatch(getWebsite());\n    // dispatch(getOrderBook(\"btc\",\"inr\",()=>{}))\n    if (isLoggedIn && token) dispatch(getUserBalance(token));\n    if (isLoggedIn && token) dispatch(getUserOrder(token));\n    // if (isLoggedIn && token) dispatch(viewFav(token));\n    // if (isLoggedIn && token) {\n    //   crypto_function(token).then((d)=>{\n    //     if(d.status===-5)\n    //     dispatch(user_logout(() => document.location.reload()));\n    //   });\n    //   setInterval(() => crypto_function(token), 30000);\n    // }\n  }, [token]);\n\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Index} />\n      <Route exact path=\"/ref/:id?\" component={Index} />\n      <Route exact path=\"/login\" component={Login} />\n      <Route path=\"/create/:id?\" component={RegisterNew} />\n      <Route path=\"/otp\" component={OTP} />\n      <Route path=\"/security\" component={Security} />\n      <Route path=\"/welcome\" component={Welcome} />\n      <Route path=\"/kyc\" component={AuthKyc} />\n      <Route path=\"/update-password\" component={UpdatePassword} />\n      <Route\n        exact\n        path=\"/forget\"\n        render={(props) =>\n          !isLoggedIn ? <Forget {...props} /> : <Redirect to=\"/\" />\n        }\n      />\n      <Route\n        exact\n        path=\"/forget-password\"\n        render={(props) =>\n          !isLoggedIn ? <FOTP {...props} /> : <Redirect to=\"/\" />\n        }\n      />\n      <Route path=\"/exchange/:id?\" component={Exchange} />\n      <Route path=\"/p2p/:id?\" component={P2P} />\n      <Route path=\"/authenticator\" component={Authenticator} />\n      <Route path=\"/buy-sell\" component={BuySell}/>\n      <Route\n        path=\"/account_authenticator\"\n        render={(props) =>\n          isLoggedIn ? (\n            <Account_Authenticator {...props} />\n          ) : (\n            <Redirect to=\"/login\" />\n          )\n        }\n      />\n      <Route\n        path=\"/profile\"\n        render={(props) =>\n          isLoggedIn ? <UserProfile {...props} /> : <Redirect to=\"/login\" />\n        }\n      />\n      <Route\n        path=\"/currency_preference\"\n        render={(props) =>\n          isLoggedIn ? (\n            <CurrencyPreference {...props} />\n          ) : (\n            <Redirect to=\"/login\" />\n          )\n        }\n      />\n      <Route\n        path=\"/activity_log\"\n        render={(props) =>\n          isLoggedIn ? <ActivityLog {...props} /> : <Redirect to=\"/login\" />\n        }\n      />\n      <Route path=\"/referral\" component={UserReferral} />\n      <Route path=\"/notice/:id?\" component={Notice} />\n      <Route path=\"/success\" component={Success} />\n      <Route path=\"/payment_option\" component={UserPayment} />\n      <Route path=\"/user_kyc\" component={UserKYC} />\n      <Route path=\"/notification\" component={GetNotifi} />\n      <Route path=\"/fees\" component={Fees} />\n      <Route\n        path=\"/2fa\"\n        render={(props) =>\n          isLoggedIn ? <TwoFA {...props} /> : <Redirect to=\"/login\" />\n        }\n      />\n      <Route path=\"/download_report\" render={(props) =>\n          isLoggedIn ? <Reports {...props} /> : <Redirect to=\"/login\" />\n        }\n      />\n      <Route path=\"/privacy_control\" component={PrivacyControl} />\n      <Route path=\"/coupan\" component={Cupon} />\n      <Route path=\"/upcoming_program\" component={UpcomingProgram} />\n      <Route path=\"/mobile-verify\" component={MobileVerification} />\n      <Route path=\"/kyc-verify\" component={KYCVerification} />\n      <Route\n        path=\"/wallet\"\n        render={(props) =>\n          isLoggedIn ? <Wallet {...props} /> : <Redirect to=\"/login\" />\n        }\n      />\n      <Route\n        path=\"/inr-deposit\"\n        render={(props) =>\n          isLoggedIn ? <InrDeposite {...props} /> : <Redirect to=\"/login\" />\n        }\n      />\n      <Route path=\"/transaction/:status/:msg\" component={ConfimationPopup} />\n      <Route path=\"/affiliate\" component={AffiliateScreen} />\n      <Route path=\"/nftmarketplace\" component={NftMarketPlace} />\n      <Route path=\"/btextlaunched\" component={BtextLaunched} />\n      <Route path=\"/btextcryptobank\" component={BtextCryptoBank} />\n      <Route path=\"/btextexplorer\" component={BtextExplorer} />\n      <Route path=\"/btexstaking\" component={BtexStaking} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/career\" component={Career} />\n      <Route path=\"/businesscontact\" component={BusinessContact} />\n      <Route path=\"/community\" component={Community} />\n      <Route path=\"/Privacy-policy\" component={Privacy} />\n      <Route path=\"/terms-condition\" component={Terms} />\n      <Route path=\"/refer\" component={Refer} />\n      <Route path=\"/download\" component={Download} />\n      <Route path=\"/about_us\" component={About_page}/>\n      <Route path=\"/Api\" component={Api}/>\n      {/* <Route path=\"/Metaverse\" component={Metaverse}/> */}\n \n\n\n    </Switch>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Globalstyle.js",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/reducers/authReducer.js",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/reducers/coinDBReducer.js",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/reducers/websiteDBReducer.js",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/actions/coinDBAction.js",["501"],"import {\n  SET_USER_BALANCE,\n  SET_USER_ORDER_PENDING,\n  SET_USER_ORDER_CLOSE,\n  SET_USER_FAV_PAIRING,\n  SET_USER_FAV_CURRENCY_RATE,\n  SET_USER_FAV_CURRENCY,\n  SWITCH_THEME,\n} from \"../constant\";\n// import {\n//   // getClosedOrders,\n//   // getCoinsData,\n//   // getOpenOrders,\n//   // get_wallet,\n//   // getAllOrderBook,\n//   // getTradeHistory,\n//   // getChartData,\n//   addfavcoin,\n//   viewAllfavcoin,\n// } from \"../helpers/api_functions\";\nimport { N_get_wallet, N_OrdersHistory } from \"../helpers/api_functions_new\";\n// export function getData() {\n//   return (dispatch) =>\n//     getCoinsData()\n//       .then((data) => {\n//         // console.log(data);\n//         dispatch({ type: GET_COIN_DATA, data: data, coin_loading: false });\n//         return data;\n//       })\n//       .catch((e) => e);\n// }\n\n// export function getGraphData(currency_type, compare_currency, interval) {\n//   return (dispatch) =>\n//     getChartData(currency_type, compare_currency, interval)\n//       .then((data) => {\n//         dispatch({ type: GET_CURRENCY_DATA, data: Object.values(data) });\n//         return data;\n//       })\n//       .catch((e) => e);\n// }\nexport function getUserBalance(user_id) {\n  return (dispatch) => {\n    N_get_wallet(user_id).then((d) => {\n      dispatch({\n        type: SET_USER_BALANCE,\n        data: Object.values(d),\n        wallet_loading: false,\n      });\n    });\n  };\n}\nexport function getUserOrder(user_id) {\n  // console.log(\"myoh\");\n  return (dispatch) => {\n    N_OrdersHistory(user_id)\n      .then((res) => {\n        // console.log(\"res: \", res);\n        if (res.status === 200) {\n          // console.log(\"open close orders: \", res);\n          dispatch({\n            type: SET_USER_ORDER_PENDING,\n            data: res.params.trade_history.pending,\n            pending_order_loading: false,\n          });\n          dispatch({\n            type: SET_USER_ORDER_CLOSE,\n            data: res.params.trade_history.compleated,\n            close_order_loading: false,\n          });\n        } else {\n          console.log(\"error to fetch open and close orders: \", res);\n        }\n      })\n      .catch((e) => console.log(e));\n  };\n}\n// export function getOrderBook(currency_type, compare_currency, cb, action) {\n//   return (dispatch) => {\n//     getAllOrderBook(currency_type, compare_currency, action)\n//       .then((d) => {\n//         dispatch({ type: SET_ORDER_BOOK, data: d, order_book_loading: false }); //kjjk\n//         cb();\n//       })\n//       .catch((e) => {\n//         console.log(e);\n//         cb();\n//       });\n//   };\n// }\n\n// export function getTradeHist(currency_type, compare_currency, cb, action) {\n//   return (dispatch) => {\n//     getTradeHistory(action, \"\", currency_type, compare_currency)\n//       .then((d) => {\n//         dispatch({ type: SET_TRADE_HISTORY, data: d, trade_loading: false });\n//         cb();\n//       })\n//       .catch((e) => {\n//         console.log(e);\n//         cb();\n//       });\n//   };\n// }\n// export function toggleFav(token, pair) {\n//   return (dispatch) => {\n//     addfavcoin(token, pair)\n//       .then((d) => {\n//         dispatch({ type: SET_USER_FAV_PAIRING, data: d.data });\n//       })\n//       .catch((e) => {\n//         console.log(e);\n//       });\n//   };\n// }\n// export function viewFav(token) {\n//   return (dispatch) => {\n//     viewAllfavcoin(token)\n//       .then((d) => {\n//         dispatch({ type: SET_USER_FAV_PAIRING, data: d.data });\n//       })\n//       .catch((e) => {\n//         console.log(e);\n//       });\n//   };\n// }\nexport function setFavCurrency(currency, cb) {\n  return (dispatch) => {\n    dispatch({ type: SET_USER_FAV_CURRENCY, data: currency });\n    cb();\n  };\n}\nexport function setFavCurrencyRate(rate, cb) {\n  return (dispatch) => {\n    dispatch({ type: SET_USER_FAV_CURRENCY_RATE, data: rate });\n    cb();\n  };\n}\nexport function switchTheme(theme_name) {\n  return (dispatch) => {\n    dispatch({ type: SWITCH_THEME, data: theme_name });\n    localStorage.removeItem(\"tradingview.current_theme.name\")\n  };\n}\n\nexport function Chartsymbol(data) {\n  return (dispatch) => {\n    dispatch({ type: \"Chartsymbol\" , data: data });\n  };\n}\n  ","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/helpers/socket.js",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/actions/websiteDBAction.js",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Forget.jsx",["502"],"import React,{useState} from \"react\";\nimport Header from \"./ftx_design/Header\";\nimport \"./login.css\";\nimport {\n  isEmail\n} from \"./redux/helpers/form-validator.functions\";\nimport {user_forget} from './redux/actions/authActions';\nimport {  useDispatch } from \"react-redux\";\nexport default function Forget(props) {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState();\n  const [email, setEmail] = useState();\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (isEmail(email)) {\n      setLoading(true);\n      dispatch(\n        user_forget(\n          email,\n          () => {\n            setLoading(false);\n            props.history.replace(\"/forget-password\");\n          },\n          () => setLoading(false)\n        )\n      );\n    }\n  };\n  return (\n    <>\n      <Header {...props}/>\n      <div className=\"signupContainer mdfthemetxt\">\n        <div className=\"container shead-bg col-lg-6\">\n          <div className=\"row\">\n            <div className=\"col-12 col-md-12 col-sm-12\">\n            <form\n                className=\"signupform\"\n                method=\"post\"\n                id=\"signupform\"\n                onSubmit={onSubmit}\n              >\n                <div>\n                  <h2>Forget Password</h2>\n                </div>\n                <div className=\"signupform-control\">\n                  <small id=\"msg\" style={{fontSize: \"15px\"}}>\n                    Error message\n                  </small>\n                </div>\n                <div className=\"signupform-control\">\n                  <label htmlFor=\"user_email\">EMAIL</label>\n                  <input\n                    type=\"email\"\n                    name=\"user_email\"\n                    required=\"\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    className=\"signupform-control\"\n                    id=\"user_email\"\n                    placeholder=\"example@gmail.com\"\n                  />\n                  <i className=\"fas fa-check-circle\"></i>\n                  <i className=\"fas fa-exclamation-circle\"></i>\n                  <small>Error message</small>\n                </div>\n                <button type=\"submit\" id=\"btn_submit\" className=\"btn btn-success btn-block\">\n                  <i className=\"loading-icon fas fa-spinner fa-spin h\"></i>\n                  <span id=\"reg\">Send</span>\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Index.jsx",["503","504","505","506","507","508","509","510","511","512"],"import React, { useEffect } from \"react\";\nimport Banner from \"./HomeComp/Banner\";\nimport Plan from \"./HomeComp/Plan\";\nimport MarketTrend from \"./HomeComp/MarketTrend\";\nimport TradeAnyWhere from \"./HomeComp/TradeAnyWhere\";\nimport GetInTouch from \"./HomeComp/GetInTouch\";\nimport StartTrade from \"./HomeComp/StartTrade\";\nimport Footer from \"./HomeComp/Footer\";\nimport Newdes from \"./HomeComp/Newdes\";\nimport BannerNew from \"./NewComponents/BannerNew\";\nimport \"./newmain.css\";\nimport Header from \"./ftx_design/Header\";\nimport Slider from \"./ftx_design/Slider\";\nimport FeatureCards from \"./ftx_design/FeatureCards\";\nimport Trade from \"./ftx_design/Trade\";\nimport Roadmap from \"./ftx_design/Roadmap\";\nexport default function Index(props) {\n  console.log(props);\n  useEffect(() => {\n    var Tawk_API = Tawk_API || {},\n      Tawk_LoadStart = new Date();\n    (function () {\n      var s1 = document.createElement(\"script\"),\n        s0 = document.getElementsByTagName(\"script\")[0];\n      s1.async = true;\n      s1.src = \"https://embed.tawk.to/61826b076bb0760a4940ed61/1fjin45kt\";\n      s1.charset = \"UTF-8\";\n      s1.setAttribute(\"crossorigin\", \"*\");\n      s0.parentNode.insertBefore(s1, s0);\n    })();\n  }, []);\n\n  return (\n    <>\n      {/* newDesign */}\n      <Header {...props} />\n      <Slider />\n      <FeatureCards />\n      <Roadmap />\n      <Trade />\n      <Footer />\n      {/* oldDesign */}\n      {/* <div>\n      <Header />\n      <Banner />\n      <Plan />\n     \n      <TradeAnyWhere />\n      <GetInTouch />\n      <StartTrade />\n      <Newdes />\n      <Footer />\n    </div> */}\n\n      {/* <MarketTrend /> */}\n\n      {/* wallet app section */}\n      {/* <div className=\"container-fluid\">\n        <div className=\"container py-5\">\n          <div className=\"d-flex justify-content-between py-5\">\n            <div>\n              <h1 className=\"fw-bold text-dark\">Build your crypto portfolio</h1>\n              <p>Start your first trade with these easy steps.</p>\n            </div>\n          </div>\n\n          <div className=\"row row-cols-lg-2 text-dark align-items-center\">\n            <div className=\"col\">\n              <div className=\"mb-5\">\n                <h4>Fund your account</h4>\n                <p>\n                  Add funds to your crypto account to start trading crypto. You\n                  can add funds with a variety of payment methods.\n                </p>\n              </div>\n\n              <div className=\"mb-5\">\n                <h4>Verify your identity</h4>\n                <p>\n                  Complete the identity verification process to secure your\n                  account and transactions.\n                </p>\n              </div>\n\n              <div className=\"mb-5\">\n                <h4>Start trading</h4>\n                <p>\n                  You're good to go! Buy/sell crypto, set up recurring buys for\n                  your investments, and discover what Binance has to offer.\n                </p>\n              </div>\n\n              <div>\n                <a href=\"/register\" className=\"btn btn-warning btn-lg px-5\">\n                  Get Started\n                </a>\n              </div>\n            </div>\n            <div className=\"col text-center\">\n              <img\n                src=\"/newimages/portfolio-section.png\"\n                style={{ maxHeight: \"400px\" }}\n              />\n            </div>\n          </div>\n        </div>\n      </div> */}\n\n      {/* possibilities section */}\n      {/* <div className=\"container-fluid\">\n        <div className=\"container py-5\">\n          <div className=\"row row-cols-lg-2 text-dark align-items-center\">\n            <div className=\"col\">\n              <div className=\"card h-100\">\n                <img\n                  src=\"/newimages/blockchain_explorer.png\"\n                  className=\"card-img-top\"\n                />\n                <div className=\"card-body\">\n                  <h3>Dive into the world of NFTs</h3>\n                  <p>\n                    Open rare Mystery Boxes, explore IGOs, Fan Tokens, and more\n                    with Binance NFT.\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col\">\n              <div className=\"card h-100\">\n                <div className=\"card-body\">\n                  <h3>Dive into the world of NFTs</h3>\n                  <p>\n                    Open rare Mystery Boxes, explore IGOs, Fan Tokens, and more\n                    with Binance NFT.\n                  </p>\n                </div>\n                <img\n                  src=\"/newimages/blockchain_explorer.png\"\n                  className=\"card-img-bottom\"\n                />\n              </div>\n            </div>\n\n            <div className=\"col\">\n              <div className=\"card h-100\">\n                <img\n                  src=\"/newimages/blockchain_explorer.png\"\n                  className=\"card-img-top\"\n                />\n                <div className=\"card-body\">\n                  <h3>Dive into the world of NFTs</h3>\n                  <p>\n                    Open rare Mystery Boxes, explore IGOs, Fan Tokens, and more\n                    with Binance NFT.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div> */}\n\n      {/* security section */}\n      {/* <div className=\"container-fluid\">\n        <div className=\"container py-5\">\n          <div className=\"d-flex justify-content-between py-5\">\n            <div>\n              <h1 className=\"fw-bold text-dark\">\n                Your trusted crypto exchange\n              </h1>\n              <p>\n                Here at Binance, we are committed to user protection with strict\n                protocols and industry-leading technical measures.\n              </p>\n            </div>\n            <div>\n              <a href=\"\">Learn more</a>\n            </div>\n          </div>\n\n          <div className=\"row row-cols-lg-2 text-dark align-items-center\">\n            <div className=\"col\">\n              <div className=\"mb-5\">\n                <h4>Secure Asset Fund for Users (SAFU)</h4>\n                <p>\n                  Binance stores 10% of all trading fees in a secure asset fund\n                  to protect a share of user funds.\n                </p>\n              </div>\n\n              <div className=\"mb-5\">\n                <h4>Personalised Access Control</h4>\n                <p>\n                  Advanced access control allows you to restrict devices and\n                  addresses that can access your account, for greater ease of\n                  mind.\n                </p>\n              </div>\n\n              <div>\n                <h4>Advanced Data Encryption</h4>\n                <p>\n                  Your transaction data is secured via end-to-end encryption,\n                  ensuring that only you have access to your personal\n                  information.\n                </p>\n              </div>\n            </div>\n            <div className=\"col\">\n              <img src=\"/newimages/trusted-section.png\" />\n            </div>\n          </div>\n        </div>\n      </div> */}\n\n      {/* Need help section */}\n      {/* <div className=\"container-fluid\">\n        <div className=\"container py-5\">\n          <h1 className=\"fw-bold text-dark py-4\">Need help?</h1>\n          <div className=\"row row-cols-3 text-dark\">\n            <div className=\"col\">\n              <h4>24/7 Chat Support</h4>\n              <p>\n                Get 24/7 chat support with our friendly customer service agents\n                at your service.\n              </p>\n              <a href=\"\">Chat now</a>\n            </div>\n            <div className=\"col\">\n              <h4>FAQs</h4>\n              <p>View FAQs for detailed instructions on specific features.</p>\n              <a href=\"\">Learn more</a>\n            </div>\n            <div className=\"col\">\n              <h4>Blog</h4>\n              <p>Stay up to date with the latest stories and commentary.</p>\n              <a href=\"\">Learn more</a>\n            </div>\n          </div>\n        </div>\n      </div> */}\n\n      {/* Start Earning Section */}\n      {/* <div className=\"container-fluid text-center py-5\">\n        <h1 className=\"text-center text-dark fw-bold py-3\">\n          Start earning today\n        </h1>\n        <div>\n          <button className=\"btn btn-warning\">Sign Up Now</button>\n        </div>\n      </div> */}\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/AuthKyc.jsx",["513","514","515","516","517","518","519"],"import React, { useState, useEffect } from \"react\";\nimport Header from \"./ftx_design/Header\";\nimport FullLoader from \"./components/FullLoader\";\nimport { useSelector } from \"react-redux\";\nimport $ from \"jquery\";\nimport { isNum } from \"./redux/helpers/form-validator.functions\";\nimport { NotificationManager } from \"react-notifications\";\nimport {\n  N_checkKYCStatus,\n  N_ischeckKycSubmited,\n  N_setKyc,\n  N_test,\n} from \"./redux/helpers/api_functions_new\";\n\nexport default function AuthKyc(props) {\n  const { isLoggedIn, user } = useSelector((state) => state.AuthReducer);\n  const [visibl, setVisiblity] = useState(\"h\");\n  // const [visib, setVisiblty] = useState(\"h\");\n  const [doc_title, setTitle] = useState();\n  const [fullScreenLoader, setFullScreenLoader] = useState(true);\n  // const [v, setv] = useState();\n  const [filedata, setFileData] = useState();\n  const [camera_type, setcameratype] = useState(\"user\");\n\n  // const constraints = {\n  //   audio: false,\n  //   video: {\n  //     width: { min: 239, max: 239 },\n  //     height: { min: 239, max: 239 },\n  //     ideal: 1280,\n  //     facingMode: camera_type,\n  //   },\n  // };\n  if (!isLoggedIn) props.history.replace(\"/login\");\n  else if (user.kyc === -1) props.history.replace(\"/exchange/btc-inr\");\n\n  useEffect(async () => {\n    N_checkKYCStatus(user?.params ? user.params.user_id : user.user_id)\n      .then((d) => {\n        if (d.status === 200) {\n          if (d.params.kyc_status === 1) {\n            props.history.replace(\"/login\");\n          } else if (d.params.kyc_status === -1) {\n            props.history.replace(\"/exchange/btc-inr\");\n          }\n        } else {\n          NotificationManager.error(d.message);\n        }\n        setFullScreenLoader(false);\n      })\n      .catch((e) => console.log(e));\n  }, []);\n\n  // function showCambtn(event) {\n  //   const sel_btn = event.target.parentElement;\n  //   sel_btn.className = \"signupform-control h\";\n  //   setVisiblty(\"vis\");\n  // }\n\n  // const play = async () => {\n  //   if (\n  //     \"mediaDevices\" in navigator &&\n  //     \"getUserMedia\" in navigator.mediaDevices\n  //   ) {\n  //     // ok, browser supports it\n  //     const video = document.querySelector(\"#video\");\n  //     const videoStream = await navigator.mediaDevices.getUserMedia(\n  //       constraints\n  //     );\n  //     video.srcObject = videoStream;\n  //     setv(video);\n  //   }\n  // };\n\n  // const takepicture = async () => {\n  //   const canvas = document.querySelector(\"#canvas\");\n  //   let mime_type = \"image/jpeg\";\n  //   let quality = 30;\n  //   canvas.width = v.videoWidth;\n  //   canvas.height = v.videoHeight;\n  //   canvas.getContext(\"2d\").drawImage(v, 0, 0);\n  //   document.getElementById(\"uploaded_img\").src = canvas.toDataURL(\"image/png\");\n  //   var file = dataURLtoFile(canvas.toDataURL(\"image/png\"), \"selfie.png\");\n  //   setFileData(file);\n  //   document.getElementById(\"cam\").className = \"h\";\n  //   document.getElementById(\"pic_img\").className = \"vis\";\n  //   $(\"#uploaded_img_btn\").show();\n  // };\n\n  function dataURLtoFile(dataurl, filename) {\n    var arr = dataurl.split(\",\"),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n);\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, { type: mime });\n  }\n\n  // function resumeCam() {\n  //   document.getElementById(\"pic_img\").className = \"h\";\n  //   document.getElementById(\"cam\").className = \"vis\";\n  //   play();\n  // }\n  const comp_btn = (event) => {\n    const kyc_btn = event.target.parentElement;\n    kyc_btn.className = \"signupform-control h\";\n    setVisiblity(\"vis\");\n  };\n\n  function getCard(event) {\n    if (document.getElementById(\"doc_titile\").className === \"h\") {\n      document.getElementById(\"next_doc_btn\").style.display = \"block\";\n    }\n    console.log(\"id: \", event.target.id);\n    if (event.target.id === \"adhar_card\") {\n      document.getElementById(\"adhar\").className = \"vis\";\n      document.getElementById(\"dl\").className = \"h\";\n      document.getElementById(\"passport\").className = \"h\";\n      setTitle(\"Adhar\");\n    }\n    if (event.target.id === \"dl_card\") {\n      document.getElementById(\"dl\").className = \"vis\";\n      document.getElementById(\"adhar\").className = \"h\";\n      document.getElementById(\"passport\").className = \"h\";\n      setTitle(\"Driver’s License\");\n    }\n    if (event.target.id === \"passport_card\") {\n      document.getElementById(\"adhar\").className = \"h\";\n      document.getElementById(\"dl\").className = \"h\";\n      document.getElementById(\"passport\").className = \"vis\";\n      setTitle(\"Passport\");\n    }\n  }\n\n  function readURL(input) {\n    const current_img = input.target.parentElement;\n    const img = \"#\" + current_img.querySelector(\"img\").id;\n    const btn = \"#\" + current_img.querySelector(\"Button\").id;\n    const file = input.target.files[0];\n    console.log(\"hmari file: \",file);\n    var reader = new FileReader();\n    if (file) {\n      reader.readAsDataURL(file);\n      setFileData(file);\n      reader.onload = function (e) {\n        $(img).attr(\"src\", e.target.result);\n        $(btn).removeClass(\"h\").addClass(\"vis\");\n      };\n    }\n  }\n  function nextCard(event) {\n    if (event.target.id === \"next_doc_btn\") {\n      document.getElementById(\"next_doc_btn\").style.display = \"none\";\n      $(\"#doc_titile\").removeClass(\"h\").addClass(\"vis\");\n      document.getElementById(\"next_selfie_btn\").style.display = \"block\";\n    }\n    if (event.target.id === \"next_selfie_btn\") {\n      document.getElementById(\"next_selfie_btn\").style.display = \"none\";\n      $(\"#pan_detail\").removeClass(\"h\").addClass(\"vis\");\n    }\n  }\n  if (fullScreenLoader) return <FullLoader />;\n  else\n  return (\n    <>\n      <Header {...props} />\n      <div className=\"signupContainer mdfthemetxt\">\n        <div className=\"security_header\">\n          <div className=\"security_head\">\n            <div className=\"sec_circle bg_check_circle\">\n              <i className=\"fas fa-check-circle\"></i>\n              <span color=\"#ffffff\" className=\"email_span\">\n                personal info\n              </span>\n            </div>\n            <div className=\"sec_circle bg_circle\">\n              <i className=\"fas fa-dot-circle\"></i>\n              <span color=\"#ffffff\" className=\"email_span\">\n                uploads\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12 col-md-12 col-sm-12\">\n              <form\n                className=\"signupform\"\n                method=\"post\"\n                id=\"welcome_form\"\n                encType=\"multipart/form-data\"\n              >\n                <div className=\"signupform-control\">\n                  <h3>Complete your KYC</h3>\n                  <span>\n                    You will be redirected to a trusted third-party service for\n                    instant KYC verification where you have to:\n                  </span>\n                  <ul>\n                    <li>1. Upload Aadhar / Passport / Driver’s License</li>\n                    <li>2. Click and Upload Selfie</li>\n                    <li>3. Upload Pan Card</li>\n                  </ul>\n                  <div>\n                    <b>Note:</b> We have also sent you a website URL via mobile\n                    SMS. If you want to continue KYC verification process via\n                    mobile, please click on the link in the SMS.\n                  </div>\n                  <button\n                    type=\"button\"\n                    style={{ margin: \"10px 10px\" }}\n                    id=\"proceed_btn\"\n                    onClick={(e) => {\n                      comp_btn(e);\n                    }}\n                    className=\"sendbtn\"\n                  >\n                    Continue\n                  </button>\n                  <button\n                    type=\"button\"\n                    id=\"back_per_btn\"\n                    name=\"back_per_btn\"\n                    className=\"backbtn\"\n                  >\n                    Re-submit Kyc Form\n                  </button>\n                </div>\n                <div id=\"Doc_page\" className={visibl}>\n                  <div className=\"signupform-control mt-2\">\n                    <div>select one Aadhar / Passport / Driver’s License *</div>\n                    <div className=\"custom-control custom-radio pt-2\">\n                      <input\n                        name=\"card\"\n                        id=\"adhar_card\"\n                        onClick={(e) => {\n                          getCard(e);\n                        }}\n                        type=\"radio\"\n                        className=\"custom-control-input\"\n                      />\n                      <label htmlFor=\"adhar_card\" className=\"pr-2\">\n                        Adhar card\n                      </label>\n                      <input\n                        name=\"card\"\n                        id=\"dl_card\"\n                        onClick={(e) => {\n                          getCard(e);\n                        }}\n                        type=\"radio\"\n                        className=\"custom-control-input\"\n                      />\n                      <label htmlFor=\"dl_card\" className=\"pr-2\">\n                        Driver’s License\n                      </label>\n                      <input\n                        name=\"card\"\n                        id=\"passport_card\"\n                        onClick={(e) => {\n                          getCard(e);\n                        }}\n                        type=\"radio\"\n                        className=\"custom-control-input\"\n                      />\n                      <label htmlFor=\"passport_card\">Passport</label>\n                    </div>\n                  </div>\n                  <div className=\"h\" id=\"adhar\">\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"user_adhar\">ADHAR CARD NUMBER *</label>\n                      <input\n                        type=\"text\"\n                        name=\"user_adhar\"\n                        required=\"required\"\n                        maxLength={12}\n                        minLength={12}\n                        className=\"signupform-control\"\n                        id=\"user_adhar\"\n                        onChange={(e) => {\n                          isNum(e.target.value) && e.target.value.length == 12\n                            ? (document.getElementById(\n                                \"user_adhar_btn\"\n                              ).style.display = \"block\")\n                            : (document.getElementById(\n                                \"user_adhar_btn\"\n                              ).style.display = \"none\");\n                        }}\n                        placeholder=\"XXXXXXXXXXXX\"\n                      />\n                      <button\n                        type=\"button\"\n                        id=\"user_adhar_btn\"\n                        onClick={(e) => {\n                          isNum(document.getElementById(\"user_adhar\").value)\n                            ? N_setKyc(\n                                e,\n                                user?.params\n                                  ? user.params.user_id\n                                  : user.user_id\n                              )\n                            : NotificationManager.error(\"Not a valid adhaar\");\n                        }}\n                        className=\"uploadbtn mt-0 h\"\n                      >\n                        Send\n                      </button>\n                      <div\n                        className=\"spinner-border text-primary\"\n                        style={{ display: \"none\" }}\n                        role=\"status\"\n                      >\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                    </div>\n                    <div>Upload front image Aadhar *</div>\n                    <div className=\"signupform-control mt-2\">\n                      <img\n                        src=\"/img/adhar_front.png\"\n                        height=\"150px\"\n                        width=\"200px\"\n                        id=\"front_adhar\"\n                        alt=\"adhar pic\"\n                      />\n                      <input\n                        id=\"upload_front_adhar\"\n                        type=\"file\"\n                        onChange={(e) => {\n                          readURL(e);\n                        }}\n                        className=\"signupform-control border-0 kyc_image\"\n                      />\n                      <button\n                        type=\"button\"\n                        id=\"adhar_front_btn\"\n                        onClick={(e) => {\n                          N_test(\n                            e,\n                            filedata,\n                            \"docf\",\n                            user?.params ? user.params.user_id : user.user_id\n                          );\n                        }}\n                        className=\"uploadbtn h\"\n                      >\n                        Send\n                      </button>\n                      <div\n                        className=\"spinner-border text-primary\"\n                        style={{ display: \"none\" }}\n                        role=\"status\"\n                      >\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                    </div>\n                    <div>Upload back image Aadhar *</div>\n                    <div className=\"signupform-control mt-2\">\n                      <img\n                        src=\"/img/adhar_back.png\"\n                        height=\"150px\"\n                        width=\"200px\"\n                        id=\"back_adhar\"\n                        alt=\"adhar pic\"\n                      />\n                      <input\n                        id=\"upload_back_adhar\"\n                        type=\"file\"\n                        onChange={(e) => {\n                          readURL(e);\n                        }}\n                        className=\"signupform-control border-0 kyc_image\"\n                      />\n                      <button\n                        type=\"button\"\n                        id=\"adhar_back_btn\"\n                        onClick={(e) => {\n                          N_test(\n                            e,\n                            filedata,\n                            \"docb\",\n                            user?.params ? user.params.user_id : user.user_id\n                          );\n                        }}\n                        className=\"uploadbtn h \"\n                      >\n                        Send\n                      </button>\n                      <div\n                        className=\"spinner-border text-primary\"\n                        style={{ display: \"none\" }}\n                        role=\"status\"\n                      >\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"h\" id=\"dl\">\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"user_dl\">\n                        DRIVER’S LICENSE CARD NUMBER *\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"user_dl\"\n                        required=\"required\"\n                        className=\"signupform-control\"\n                        id=\"user_dl\"\n                        placeholder=\"XXXXXXXXXXXX\"\n                      />\n                      <button\n                        type=\"button\"\n                        id=\"user_dl_btn\"\n                        onClick={(e) => {\n                          N_setKyc(\n                            e,\n                            user?.params ? user.params.user_id : user.user_id\n                          );\n                        }}\n                        className=\"uploadbtn mt-0\"\n                      >\n                        Send\n                      </button>\n                      <div\n                        className=\"spinner-border text-primary\"\n                        style={{ display: \"none\" }}\n                        role=\"status\"\n                      >\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                    </div>\n                    <div>Upload front image Driver’s License *</div>\n                    <div className=\"signupform-control mt-2\">\n                      <img\n                        src=\"/img/selfie.png\"\n                        height=\"150px\"\n                        width=\"200px\"\n                        id=\"front_dl\"\n                        alt=\"License pic\"\n                      />\n                      <input\n                        id=\"upload_front_dl\"\n                        type=\"file\"\n                        onChange={(e) => {\n                          readURL(e);\n                        }}\n                        className=\"signupform-control border-0 kyc_image\"\n                      />\n                      <button\n                        type=\"button\"\n                        id=\"dl_front_btn\"\n                        onClick={(e) => {\n                          N_test(\n                            e,\n                            filedata,\n                            \"docf\",\n                            user?.params ? user.params.user_id : user.user_id\n                          );\n                        }}\n                        className=\"uploadbtn h\"\n                      >\n                        Send\n                      </button>\n                      <div\n                        className=\"spinner-border text-primary\"\n                        style={{ display: \"none\" }}\n                        role=\"status\"\n                      >\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                    </div>\n                    <div>Upload back image Driver’s License *</div>\n                    <div className=\"signupform-control mt-2\">\n                      <img\n                        src=\"/img/selfie.png\"\n                        height=\"150px\"\n                        width=\"200px\"\n                        id=\"back_dl\"\n                        alt=\"License pic\"\n                      />\n                      <input\n                        id=\"upload_back_dl\"\n                        type=\"file\"\n                        onChange={(e) => {\n                          readURL(e);\n                        }}\n                        className=\"signupform-control border-0 kyc_image\"\n                      />\n                      <button\n                        type=\"button\"\n                        id=\"dl_back_btn\"\n                        onClick={(e) => {\n                          N_test(\n                            e,\n                            filedata,\n                            \"docb\",\n                            user?.params ? user.params.user_id : user.user_id\n                          );\n                        }}\n                        className=\"uploadbtn h\"\n                      >\n                        Send\n                      </button>\n                      <div\n                        className=\"spinner-border text-primary\"\n                        style={{ display: \"none\" }}\n                        role=\"status\"\n                      >\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"h\" id=\"passport\">\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"user_passport\">\n                        PASSPORT CARD NUMBER *\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"user_passport\"\n                        required=\"required\"\n                        className=\"signupform-control\"\n                        id=\"user_passport\"\n                        placeholder=\"XXXXXXXXXXXX\"\n                      />\n                      <button\n                        type=\"button\"\n                        id=\"user_passport_btn\"\n                        onClick={(e) => {\n                          N_setKyc(\n                            e,\n                            user?.params ? user.params.user_id : user.user_id\n                          );\n                        }}\n                        className=\"uploadbtn mt-0\"\n                      >\n                        Send\n                      </button>\n                      <div\n                        className=\"spinner-border text-primary\"\n                        style={{ display: \"none\" }}\n                        role=\"status\"\n                      >\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                    </div>\n                    <div>Upload front image Passport *</div>\n                    <div className=\"signupform-control mt-2\">\n                      <img\n                        src=\"/img/selfie.png\"\n                        height=\"150px\"\n                        width=\"200px\"\n                        id=\"front_passport\"\n                        alt=\"Passport pic\"\n                      />\n                      <input\n                        id=\"upload_front_passport\"\n                        type=\"file\"\n                        onChange={(e) => {\n                          readURL(e);\n                        }}\n                        className=\"signupform-control border-0 kyc_image\"\n                      />\n                      <button\n                        type=\"button\"\n                        id=\"passport_front_btn\"\n                        onClick={(e) => {\n                          N_test(\n                            e,\n                            filedata,\n                            \"docf\",\n                            user?.params ? user.params.user_id : user.user_id\n                          );\n                        }}\n                        className=\"uploadbtn h\"\n                      >\n                        Send\n                      </button>\n                      <div\n                        className=\"spinner-border text-primary\"\n                        style={{ display: \"none\" }}\n                        role=\"status\"\n                      >\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                    </div>\n                    <div>Upload back image Passport *</div>\n                    <div className=\"signupform-control mt-2\">\n                      <img\n                        src=\"/img/selfie.png\"\n                        height=\"150px\"\n                        width=\"200px\"\n                        id=\"back_passport\"\n                        alt=\"Passport pic\"\n                      />\n                      <input\n                        id=\"upload_back_passport\"\n                        type=\"file\"\n                        onChange={(e) => {\n                          readURL(e);\n                        }}\n                        className=\"signupform-control border-0 kyc_image\"\n                      />\n                      <button\n                        type=\"button\"\n                        id=\"passport_back_btn\"\n                        onClick={(e) => {\n                          N_test(\n                            e,\n                            filedata,\n                            \"docb\",\n                            user?.params ? user.params.user_id : user.user_id\n                          );\n                        }}\n                        className=\"uploadbtn h\"\n                      >\n                        Send\n                      </button>\n                      <div\n                        className=\"spinner-border text-primary\"\n                        style={{ display: \"none\" }}\n                        role=\"status\"\n                      >\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                    </div>\n                  </div>\n                  <button\n                    type=\"button\"\n                    id=\"next_doc_btn\"\n                    onClick={(e) => {\n                      nextCard(e);\n                    }}\n                    className=\"reg_btn bg-success \"\n                    style={{ display: \"none\" }}\n                  >\n                    Next &raquo;\n                  </button>\n                  <div className=\"h\" id=\"doc_titile\">        \n                    <div>Upload a photo with holding {doc_title} *</div>\n                    <div className=\"signupform-control mt-2\">\n                      <img\n                        src=\"/img/selfie.png\"\n                        height=\"150px\"\n                        width=\"200px\"\n                        id=\"uploaded_img\"\n                        alt=\"uploaded img pic\"\n                      />\n                      <input\n                        id=\"uploaded_img\"\n                        type=\"file\"\n                        onChange={(e) => {\n                          readURL(e);\n                        }}\n                        className=\"signupform-control border-0 kyc_image\"\n                      />\n                      <button\n                        type=\"button\"\n                        id=\"uploaded_img_btn\"\n                        onClick={(e) => {\n                          N_test(\n                            e,\n                            filedata,\n                            \"docs\",\n                            user?.params ? user.params.user_id : user.user_id\n                          );\n                        }}\n                        className=\"uploadbtn h\"\n                      >\n                        Send\n                      </button>\n                      <div\n                        className=\"spinner-border text-primary\"\n                        style={{ display: \"none\" }}\n                        role=\"status\"\n                      >\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                    </div>\n                  </div>\n                  {/* <div id=\"doc_titile\" className=\"h\">\n                    <div>Upload a photo with holding {doc_title} *</div>\n                    <div className=\"signupform-control mt-2\">\n                      <img\n                        src=\"/img/selfie.png\"\n                        height=\"150px\"\n                        width=\"200px\"\n                        alt=\"selfie pic\"\n                      />\n                      <button\n                        type=\"button\"\n                        id=\"cam_btn\"\n                        name=\"cam_btn\"\n                        onClick={(e) => {\n                          showCambtn(e);\n                          play();\n                        }}\n                        className=\"backbtn ml-2\"\n                      >\n                        Click and Upload Selfie\n                      </button>\n                    </div>\n                    <div className={visib} id=\"cam\">\n                      <div className=\"display-cover\">\n                        <video autoPlay id=\"video\"></video>\n                        <canvas\n                          className=\"d-none position-absolute\"\n                          id=\"canvas\"\n                        ></canvas>\n\n                        <div id=\"img-cont\"></div>\n\n                        <div className=\"control\">\n                          <button\n                            className=\"btn mr-4\"\n                            onClick={() => {\n                              camera_type === \"user\"\n                                ? setcameratype(\"environment\")\n                                : setcameratype(\"user\");\n                              play();\n                            }}\n                          >\n                            <MdCameraswitch\n                              size={30}\n                              style={{ color: \"black\" }}\n                            />\n                          </button>\n                          <button\n                            className=\"btn text-dark\"\n                            style={{ background: \"rgba(0,0,0,0.2)\" }}\n                            onClick={() => takepicture()}\n                          >\n                            Capture\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"mt-2 h\" id=\"pic_img\">\n                      <img\n                        id=\"uploaded_img\"\n                        height=\"220px\"\n                        width=\"300px\"\n                        alt=\"uploaded pic\"\n                        style={{ margin: \"0 auto 10px\" }}\n                      />\n                      <br />\n                      <button\n                        type=\"button\"\n                        className=\"cancelbtn\"\n                        onClick={(e) => {\n                          resumeCam();\n                        }}\n                        style={{ margin: \"0 30px\" }}\n                      >\n                        Back\n                      </button>\n                      <button\n                        type=\"button\"\n                        id=\"uploaded_img_btn\"\n                        onClick={(e) => {\n                          N_test(e, filedata, \"docs\", user?.params ? user.params.user_id : user.user_id);\n                        }}\n                        className=\"uploadbtn\"\n                      >\n                        Send\n                      </button>\n                      <div\n                        className=\"spinner-border text-primary\"\n                        style={{ display: \"none\" }}\n                        role=\"status\"\n                      >\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                    </div>\n                  </div> */}\n                  <button\n                    type=\"button\"\n                    id=\"next_selfie_btn\"\n                    onClick={(e) => {\n                      nextCard(e);\n                    }}\n                    className=\"reg_btn bg-success\"\n                    style={{ display: \"none\" }}\n                  >\n                    Next &raquo;\n                  </button>\n                  <div className=\"h\" id=\"pan_detail\">\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"user_pancard\">PAN CARD NUMBER *</label>\n                      <input\n                        type=\"text\"\n                        name=\"user_pancard\"\n                        required=\"required\"\n                        className=\"signupform-control\"\n                        maxLength={10}\n                        minLength={10}\n                        onChange={(e) => {\n                          e.target.value.length == 10\n                            ? (document.getElementById(\n                                \"user_pancard_btn\"\n                              ).style.display = \"block\")\n                            : (document.getElementById(\n                                \"user_pancard_btn\"\n                              ).style.display = \"none\");\n                        }}\n                        id=\"user_pancard\"\n                        placeholder=\"XXXXXXXXXXXX\"\n                      />\n                      <button\n                        type=\"button\"\n                        id=\"user_pancard_btn\"\n                        onClick={(e) => {\n                          N_setKyc(\n                            e,\n                            user?.params ? user.params.user_id : user.user_id\n                          );\n                        }}\n                        className=\"uploadbtn mt-0 h\"\n                      >\n                        Send\n                      </button>\n                      <div\n                        className=\"spinner-border text-primary\"\n                        style={{ display: \"none\" }}\n                        role=\"status\"\n                      >\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                    </div>\n                    <div>Upload front image Pan Card *</div>\n                    <div className=\"signupform-control mt-2\">\n                      <img\n                        src=\"/img/pan_front.png\"\n                        height=\"150px\"\n                        width=\"200px\"\n                        id=\"front_pan\"\n                        alt=\"pancard pic\"\n                      />\n                      <input\n                        id=\"upload_front_pan\"\n                        type=\"file\"\n                        onChange={(e) => {\n                          readURL(e);\n                        }}\n                        className=\"signupform-control border-0 kyc_image\"\n                      />\n                      <button\n                        type=\"button\"\n                        id=\"front_pan_btn\"\n                        onClick={(e) => {\n                          N_test(\n                            e,\n                            filedata,\n                            \"panf\",\n                            user?.params ? user.params.user_id : user.user_id\n                          );\n                        }}\n                        className=\"uploadbtn h\"\n                      >\n                        Send\n                      </button>\n                      <div\n                        className=\"spinner-border text-primary\"\n                        style={{ display: \"none\" }}\n                        role=\"status\"\n                      >\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                    </div>\n\n                    <button\n                      type=\"button\"\n                      id=\"Done_btn\"\n                      onClick={() => {\n                        N_ischeckKycSubmited(\n                          user?.params ? user.params.user_id : user.user_id,\n                          document.getElementById(\"user_pancard\").value\n                        ).then((d) => {\n                          if (d.status === 200) {\n                            NotificationManager.info(d.message);\n                            document.location.reload();\n                          } else {\n                            console.log(d);\n                            NotificationManager.error(d.message);\n                          }\n                        });\n                      }}\n                      className=\"reg_btn bg-success \\\"\n                    >\n                      <i className=\"loading-icon fas fa-spinner fa-spin h\"></i>\n                      <span id=\"reg\">Done</span>\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Login.jsx",["520","521","522","523","524","525","526","527","528"],"import React, { useState, useEffect } from \"react\";\nimport Header from \"./ftx_design/Header\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./login.css\";\nimport { isEmail, isPass } from \"./redux/helpers/form-validator.functions\";\nimport { checkEmail, checkPassword } from \"./redux/helpers/helper_functions\";\nimport { user_Login, user_authentication } from \"./redux/actions/authActions\";\nimport {\n  N_getGoogleAuth,\n  N_sendOTPMobileEmail,\n} from \"./redux/helpers/api_functions_new\";\nimport $ from \"jquery\";\n\nexport default function Login(props) {\n  const { isLoggedIn } = useSelector((state) => state.AuthReducer);\n  if (isLoggedIn) props.history.replace(\"/exchange/btc-inr\");\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState();\n  const [loading, setLoading] = useState(false);\n  const [password, setPassword] = useState();\n  const { webData } = useSelector((state) => state.websiteDBReducer);\n  const [eye, seteye] = useState(false);\n\n  const [emailError, setEmailError] = useState(false);\n  const [passError, setPassError] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const hsPassword = (_id) => {\n    var _idv = document.querySelector(\"#\" + _id);\n    if (_idv.getAttribute(\"type\") == \"text\") {\n      _idv.setAttribute(\"type\", \"password\");\n      seteye(false);\n    } else {\n      _idv.setAttribute(\"type\", \"text\");\n      seteye(true);\n    }\n  };\n\n  /* const submit = (e) => {\n    e.preventDefault();\n    if (isEmail(email) && isPass(password)) {\n      N_getGoogleAuth(email, password).then((data) => {\n        if (data.status === 200 && data.params.authenticator_status === 0) {\n          setLoading(true);\n          dispatch(\n            user_Login(\n              email,\n              password,\n              () => {\n                setLoading(false);\n                props.history.replace(\"/otp\");\n              },\n              () => setLoading(false)\n            )\n          );\n        } else {\n          if (data.status === 200 && data.params.authenticator_status === 1) {\n            N_sendOTPMobileEmail(email, data.params.mobile_no);\n            dispatch(\n              user_authentication(\n                email,\n                password,\n                data.params.authenticator_status,\n                data.params.mobile_no,\n                () => {\n                  setLoading(false);\n                  props.history.replace(\"/authenticator\");\n                }\n              )\n            );\n          } else if (\n            data.status === 200 &&\n            data.params.authenticator_status === 2\n          ) {\n            dispatch(\n              user_authentication(\n                email,\n                password,\n                data.params.authenticator_status,\n                data.params.authenticator_key,\n                () => {\n                  setLoading(false);\n                  props.history.replace(\"/authenticator\");\n                }\n              )\n            );\n          }\n        }\n      });\n    }\n  }; */\n\n  function clearBackdrop() {\n    $(\".modal-backdrop\").hide();\n    $(\"body\").removeClass(\"modal-open\").css({overflow: \"auto\", paddingRight: \"0px\"});\n    $(\"body\").removeAttr(\"data-bs-overflow\");\n    $(\"body\").removeAttr(\"data-bs-padding-right\");\n  }\n\n  const submit = (e) => {\n    e.preventDefault();\n    if (!checkEmail(email)) {\n      setEmailError(\"Not a valid email OR email should be in small letters\");\n    }\n    if (!checkPassword(password)) {\n      setPassError(\"Not a valid password\");\n    }\n    if (!emailError && !passError) {\n      N_getGoogleAuth(email, password).then((data) => {\n        if (data.status === 200 && data.params.authenticator_status === 0) {\n          setLoading(true);\n          dispatch(\n            user_Login(\n              email,\n              password,\n              () => {\n                setLoading(false);\n                clearBackdrop();\n                props.history.replace(\"/otp\");\n              },\n              () => setLoading(false)\n            )\n          );\n        } else {\n          if (data.status === 200 && data.params.authenticator_status === 1) {\n            N_sendOTPMobileEmail(email, data.params.mobile_no);\n            dispatch(\n              user_authentication(\n                email,\n                password,\n                data.params.authenticator_status,\n                data.params.mobile_no,\n                () => {\n                  setLoading(false);\n                  clearBackdrop();\n                  props.history.replace(\"/authenticator\");\n                }\n              )\n            );\n          } else if (\n            data.status === 200 &&\n            data.params.authenticator_status === 2\n          ) {\n            dispatch(\n              user_authentication(\n                email,\n                password,\n                data.params.authenticator_status,\n                data.params.authenticator_key,\n                () => {\n                  setLoading(false);\n                  clearBackdrop();\n                  props.history.replace(\"/authenticator\");\n                }\n              )\n            );\n          }\n        }\n      });\n    }\n  };\n\n  return (\n    <>\n      <Header {...props} />\n\n      <div\n        className=\"container-fluid vh-100\"\n        style={{\n          backgroundImage:\n            \"url(/newimages/bitcoin-safety-and-security-Ment-Tech.jpeg)\",\n          backgroundPosition: \"center center\",\n          backgroundSize: \"cover\",\n        }}\n      >\n        <div className=\"container vh-100\">\n          <div className=\"row align-items-center vh-100\">\n            <div className=\"col-lg-5 offset-lg-7 py-5\">\n              <div\n                className=\"card card-body px-5\"\n                style={{ background: \"rgba(0,0,0,0.7)\" }}\n              >\n                <h1 className=\"\">Register</h1>\n                <form className=\"my-form\" onSubmit={submit}>\n                  <div className=\"text-center my-3\">\n                    <div className=\"mb-1\">\n                      Confirm you are using the official site\n                    </div>\n                    <div>\n                      <span className=\"fas fa-lock\"></span>{\" \"}\n                      https://bitflash.finance\n                    </div>\n                    <div>\n                      <img\n                        src=\"/newimages/bitflash_logo.png\"\n                        style={{ height: \"30px\" }}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-group mb-3\">\n                    <div class=\"form-floating bg-dark\">\n                      <input\n                        id=\"user_email\"\n                        name=\"user_email\"\n                        type=\"email\"\n                        class=\"form-control bg-dark text-light\"\n                        placeholder=\"name@example.com\"\n                        autoFocus\n                        required\n                        defaultValue={email}\n                        onChange={(e) => setEmail(e.target.value.toLowerCase())}\n                      />\n                      <label for=\"email\">\n                        <span className=\"fas fa-envelope\"></span> Email address\n                      </label>\n                    </div>\n                    {emailError && (\n                      <div className=\"text-danger\">{emailError}</div>\n                    )}\n                  </div>\n\n                  <div className=\"form-group mb-3\">\n                    <div class=\"form-floating bg-dark\">\n                      <input\n                        id=\"pass\"\n                        name=\"user_password\"\n                        type={showPassword ? \"text\" : \"password\"}\n                        class=\"form-control bg-dark text-light\"\n                        placeholder=\"Password\"\n                        required\n                        defaultValue={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                      <label for=\"password\">\n                        <span className=\"fas fa-unlock-alt\"></span> Password\n                      </label>\n                      <div\n                        class=\"position-absolute top-50 end-0 translate-middle-y mx-3\"\n                        style={{ cursor: \"pointer\" }}\n                        onClick={(e) => {\n                          setShowPassword(!showPassword);\n                        }}\n                      >\n                        <span\n                          className={\n                            showPassword ? \"fas fa-eye-slash\" : \"fas fa-eye\"\n                          }\n                        ></span>\n                      </div>\n                    </div>\n                    {passError && (\n                      <div className=\"text-danger\">{passError}</div>\n                    )}\n                  </div>\n\n                  <div className=\"form-group d-flex justify-content-end mb-3\">\n                    <div>\n                      <a href=\"/forget\">Forgot Password?</a>\n                    </div>\n                  </div>\n\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-block btn-primary w-100 mb-3 d-flex align-items-center justify-content-center\"\n                    disabled={loading ? true : false}\n                  >\n                    {loading && (\n                      <span\n                        class=\"spinner-border spinner-border-sm mx-2\"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                      ></span>\n                    )}\n                    Sign In\n                  </button>\n\n                  <div className=\"text-center\">\n                    No account? <a href=\"/create\">Register</a>\n                  </div>\n                </form>\n              </div>\n            </div>\n\n            {/* <div class=\"col-md\">\n              <div\n                className=\"col img_hider\"\n                style={{\n                  backgroundImage: \"url(./image/BG_5.png)\",\n                  height: \"100vh\",\n                  backgroundSize: \"cover\",\n                }}\n              ></div>\n            </div> */}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/FOTP.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/OTP.jsx",["529"],"import React, { useEffect, useState } from \"react\";\nimport Header from \"./ftx_design/Header\";\nimport { isOtp } from \"./redux/helpers/form-validator.functions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { opt_verify } from \"./redux/actions/authActions\";\nimport { NotificationManager } from \"react-notifications\";\nimport { N_resendOTP } from \"./redux/helpers/api_functions_new\";\n\nconst OTP = (props) => {\n  const { otp_send, user } = useSelector((state) => state.AuthReducer);\n  const [ctime, setctime] = useState(\"00:00\");\n  const [timer, settimer] = useState(true);\n  const dispatch = useDispatch();\n  if (!otp_send) props.history.push(\"/create\");\n  const [loading, setLoading] = useState(false);\n  const [otp, setOtp] = useState();\n\n  const handleProceedSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    dispatch(\n      opt_verify(\n        otp,\n        user?.params ? user.params.user_id : user.user_id,\n        () => {\n          setLoading(false);\n          props.history.replace(\"/security\");\n        },\n        () => setLoading(false)\n      )\n    );\n  };\n\n  const resendEmail = (user_id) => {\n    N_resendOTP(user_id).then((data) => {\n      if (data.status === 200) {\n        NotificationManager.success(data.message);\n      } else if (data.status == 1) {\n        NotificationManager.error(data.message);\n      }\n    });\n  };\n\n  const otpCountdown = () => {\n    let duration = 60 * 2;\n    // const display = document.getElementById(\"#timer\");\n    let timer = duration,\n      minutes,\n      seconds;\n    const tint = setInterval(function () {\n      minutes = parseInt(timer / 60, 10);\n      seconds = parseInt(timer % 60, 10);\n\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n      setctime(minutes + \":\" + seconds);\n\n      if (--timer < 0) {\n        // timer = duration;\n        clearInterval(tint);\n        settimer(false);\n      }\n    }, 1000);\n  };\n\n  useEffect(() => {\n    otpCountdown();\n  }, []);\n\n  return (\n    <>\n      <Header {...props} />\n      <div className=\"signupContainer mdfthemetxt  \"  style={{backgroundColor:\"white\"}} >\n        <div className=\"security_header shead-bg \"   >\n          <div className=\"security_head\" >\n            <div  className=\"sec_circle bg_circle  shead-circle\" >\n              <i  className=\"fas fa-dot-circle \"></i>\n              <span color=\"#ffffff\" className=\"email_span\">\n                Email\n              </span>\n            </div>\n            <div className=\"sec_circle bg_dot_circle shead-circle\">\n              <i className=\"fas fa-dot-circle \"></i>\n              <span color=\"#ffffff\" className=\"email_span\">\n                Security\n              </span>\n            </div>\n            <div className=\"sec_circle bg_dot_circle shead-circle\" >\n              <i className=\"fas fa-dot-circle\"></i>\n              <span color=\"#ffffff\" className=\"email_span\">\n                Welcome\n              </span>\n            </div>\n          </div>\n        </div>\n        <div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col\">\n    <div className=\"container-fluid shead-bg\"  >\n          <div  style={{backgroundColor:\"transparent\"}} className=\"row m-0 \">\n            <div className=\"col col-md-12 col-sm-12 \">\n              <form\n                className=\"signupform mdfthemetxt\"\n                onSubmit={handleProceedSubmit}\n                id=\"otp_form\"\n              >\n                <div className=\"\" >\n                  <h3>Check your inbox for verification mail</h3>\n                </div>\n                <div className=\"signupform-control\">\n                  <small id=\"msg\" style={{ fontSize: \"15px\" }}>\n                    Error message\n                  </small>\n                </div>\n                <div className=\"signupform-control\">\n                  <div>\n                    An OTP has sent your email\n                    <br />\n                    <strong>{user.email}</strong>. Don't see it? check your{\" \"}\n                    <b>spam</b> folder.\n                    <br />\n                    If the email adress is wrong then click\n                    <strong>back</strong> button.\n                    <br /> <br />\n                  </div>\n                  <div>\n                    <input\n                      type=\"text\"\n                      name=\"user_otp\"\n                      className=\"signupform-control\"\n                      value={otp}\n                      id=\"user_otp\"\n                      maxLength={6}\n                      onChange={(e) => {\n                        setOtp(e.target.value);\n                        isOtp(e.target.value);\n                      }}\n                      placeholder=\"Enter Your OTP\"\n                    />\n                    <i\n                      className=\"fas fa-check-circle\"\n                      style={{ top: \"16px\" }}\n                    ></i>\n                    <i\n                      className=\"fas fa-exclamation-circle\"\n                      style={{ top: \"16px\" }}\n                    ></i>\n                    <small>Error message</small>\n                    {timer ? (\n                      <div className=\"resend_btn text-info\" id=\"timer\">\n                        {ctime}\n                      </div>\n                    ) : (\n                      <div\n                        className=\"resend_btn text-success\"\n                        onClick={(e) => {\n                          resendEmail(\n                            user?.params ? user.params.user_id : user.user_id\n                          );\n                          settimer(true);\n                          otpCountdown();\n                        }}\n                      >\n                        Resend\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"signupform-control\" id=\"btns\">\n                  <button\n                    type=\"button\"\n                    onClick={(e) => props.history.push(\"/create\")}\n                    className=\"backbtn\"\n                  >\n                    BACK\n                  </button>\n                  <button type=\"submit\" id=\"proceed_btn\" className=\"sendbtn bg-success\">\n                    Verify\n                  </button>\n                </div>\n                {loading ? (\n                  <div className=\"spinner-border text-primary\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                  </div>\n                ) : null}\n              </form>\n            </div>\n          </div>\n        </div>\n    </div>\n    <div class=\"col-sm p-0\">\n    <div className=\"col-sm\" style={{backgroundImage:\"url(./image/BG_5.png)\",height:\"100vh\" , backgroundSize:\"cover\"}} >\n     \n    </div>\n    </div>\n  </div>\n  </div>\n      </div>\n    </>\n  );\n};\n\nexport default OTP;\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Register.jsx",["530","531","532","533"],"import React, { useState } from \"react\";\nimport Header from \"./ftx_design/Header\";\nimport { Link } from \"react-router-dom\";\nimport {\n  isCpass,\n  isEmail,\n  isPass,\n} from \"./redux/helpers/form-validator.functions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { user_Register } from \"./redux/actions/authActions\";\nimport $ from \"jquery\";\nimport { NotificationManager } from \"react-notifications\";\nimport { getElementError } from \"@testing-library/react\";\n\nexport default function Register(props) {\n\n\n\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useSelector((state) => state.AuthReducer);\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [confPassword, setConfPassword] = useState();\n  const [referral_code, setReferral] = useState(\n    props?.match?.params?.id ? props?.match?.params?.id : \"\"\n  );\n  const [agree, setAgree] = useState(false);\n  const [loading, setLoading] = useState();\n  const { webData } = useSelector((state) => state.websiteDBReducer);\n  if (isLoggedIn) props.history.replace(\"/exchange/btc-inr\");\n  const hsPassword = (_id) => {\n    var _idv = document.querySelector(\"#\" + _id);\n    if (_idv.getAttribute(\"type\") == \"text\") {\n      _idv.setAttribute(\"type\", \"password\");\n    } else {\n      _idv.setAttribute(\"type\", \"text\");\n    }\n  };\n\n\n\n\n  \n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (isEmail(email) && isPass(password) && isCpass(confPassword)) {\n      if (agree) {\n        $(\".main_terms\").removeClass(\"border-danger\");\n        setLoading(true);\n        dispatch(\n          user_Register(\n            email,\n            password,\n            confPassword,\n            referral_code,\n            () => {\n              setLoading(false);\n              props.history.replace(\"/otp\");\n            },\n            () => setLoading(false)\n          )\n        );\n      } else {\n        NotificationManager.error(\"Please Agree with term condition !\");\n        $(\".main_terms\").addClass(\"border-danger\");\n      }\n    }\n  };\n  return (\n    <>\n      <Header {...props} />\n    \n\n      <div class=\"container-fluid bg-white p-4\"   >\n  <div class=\"row\">\n    <div class=\"col-sm-12 col-md-6  \">\n    <div className=\"row d-flex justify-content-center mdfthemetxt\" >\n        <div\n          className={\" container\"}\n          style={{ backgroundColor:\" tranparent\" }}\n        >\n          <div className=\"row d-flex justify-content-center\">\n            <div className=\"col-12 col-md-11 col-sm-12 \">\n              <form\n                className=\"signupform theme-color-text\"\n                method=\"post\"\n                id=\"signupform\"\n                onSubmit={onSubmit}\n              >\n                <div>\n                  <h2 className=\"text-center\">\n                  Register\n                    {/* {webData.website_title} \n                    \n                    `${webData.bg_color}` + \n                    \n                    */  }\n                  </h2>\n                </div>\n                <div className=\"signupform-control\">\n                  <small id=\"msg\" style={{ fontSize: \"15px\" }}>\n                    Error Message\n                  </small>\n                </div>\n                <div className={`signupform-control`}>\n                  <label htmlFor=\"user_email\">EMAIL</label>\n                  <input\n                    type=\"email\"\n                    name=\"user_email\"\n                    required=\"\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    className=\"signupform-control\"\n                    id=\"user_email\"\n                    placeholder=\"example@gmail.com\"\n                  />\n                  <i className=\"fas fa-check-circle\"></i>\n                  <i className=\"fas fa-exclamation-circle\"></i>\n                  <small></small>\n                </div>\n                <div className={`signupform-control`}>\n                  <label htmlFor=\"user_password\">PASSWORD</label>\n                  <div className=\"input-group mb-3\">\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      name=\"user_password\"\n                      required=\"\"\n                      value={password}\n                      onChange={ function(e){\n                        setPassword(e.target.value)\n                        var Holder=document.getElementById(\"pass\");\n                        var valueCheacker=Holder.value;\n                        var valueLength=Holder.textLength;\n                       \n                        // console.log(valueCheacker);\n                        if(Holder.textLength>=1){\n                          document.getElementById(\"list_4\").classList.add('text-danger');\n                          if(Holder.textLength>=8){\n                            document.getElementById(\"list_4\").classList.add('text-success');\n                            document.getElementById(\"list_4\").classList.remove('text-danger')\n                          }\n                        }\n                       \n                     \n                        \n                        if (valueCheacker.includes(\"@\")|| valueCheacker.includes(\"#\") || valueCheacker.includes(\"$\") || valueCheacker.includes(\"&\") || valueCheacker.includes(\"^\") || valueCheacker.includes(\"!\")) {\n                          document.getElementById(\"list_3\").classList.add('text-success');\n                        } else {\n                          document.getElementById(\"list_3\").classList.remove('text-success');\n                        \n                        }\n\n                          for(var i=0;i<=9;i++){\n                          \n                            if (valueCheacker.includes( 0) || valueCheacker.includes( 1)|| valueCheacker.includes( 2)||valueCheacker.includes( 3)||valueCheacker.includes( 4)||valueCheacker.includes( 5)|| valueCheacker.includes(6) || valueCheacker.includes(7)|| valueCheacker.includes(8)|| valueCheacker.includes(9)) {\n                           \n                                    \n                              document.getElementById(\"list_2\").classList.add('text-success');\n                            } else {\n                              document.getElementById(\"list_2\").classList.remove('text-success');\n                            \n                            }\n                          }\n                          \n                          for(var i=65 ; i<=90 ; i++){\n                           \n                            // console.log(String.fromCharCode(i),valueCheacker); \n\n                            if(valueCheacker.includes(String.fromCharCode(i))){\n                              document.getElementById(\"list_1\").classList.add('text-success');\n                              break;\n                            }\n                             else{\n                              document.getElementById(\"list_1\").classList.remove('text-success');\n\n                             }\n                          \n                          }\n                        }\n                      }\n                    \n\n                      // onChange={(e) => }\n                      id=\"pass\"\n                      placeholder=\"password\"\n                    />\n                    <div className=\"input-group-append\">\n                      <a\n                        href=\"#view_qr\"\n                        className=\"input-group-text\"\n                        style={{ border: \"1px\" }}\n                        onClick={(e) => {\n                          hsPassword(\"pass\");\n                        }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"16\"\n                          height=\"16\"\n                          fill=\"#28a745\"\n                          className=\"bi bi-eye\"\n                          viewBox=\"0 0 16 16\"\n                        >\n                          <path d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z\" />\n                          <path d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\" />\n                        </svg>\n                      </a>\n                    </div>\n                  </div>\n                  {/* <i className=\"fas fa-check-circle\"></i> */}\n                  {/* <i className=\"fas fa-exclamation-circle\"></i> */}\n                  <ul className=\"text-dark\" style={{fontSize:\"13px\"}}>\n                    <li id=\"list_1\"> 1 Uppercase Character</li>\n                    <li id=\"list_2\"> 1 Numeric Value</li>\n                    <li id=\"list_3\"> 1 Special Symbol eg:@#</li>\n                    <li id=\"list_4\"> length should be greater than 8 </li>\n               \n                  </ul>\n\n               \n\n\n\n\n                  <small id=\"passerr\" className=\"text-danger\" style={{top:\"53%\"}}></small>\n                </div>\n                <div className={`signupform-control`}>\n                  <label htmlFor=\"user_cpassword\">CONFIRM PASSWORD</label>\n                  <div className=\"input-group mb-3\">\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      name=\"user_cpassword\"\n                      id=\"cpass\"\n                      required=\"\"\n                      value={confPassword}\n                      onChange={(e) => setConfPassword(e.target.value)}\n                      placeholder=\"confirm password\"\n                    />\n                    <div className=\"input-group-append\">\n                      <a\n                        href=\"#view_qr\"\n                        className=\"input-group-text\"\n                        style={{ border: \"1px\" }}\n                        onClick={(e) => {\n                          hsPassword(\"cpass\");\n                        }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"16\"\n                          height=\"16\"\n                          fill=\"#28a745\"\n                          className=\"bi bi-eye\"\n                          viewBox=\"0 0 16 16\"\n                        >\n                          <path d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z\" />\n                          <path d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\" />\n                        </svg>\n                      </a>\n                    </div>\n                  </div>\n                  {/* <i className=\"fas fa-check-circle\"></i> */}\n                  {/* <i className=\"fas fa-exclamation-circle\"></i> */}\n                  <small id=\"cpasserr\" className=\"text-danger\" style={{top:\"70%\"}}></small>\n                </div>\n                <div className={`signupform-control`}>\n                  <label htmlFor=\"refercode\">REFERRAL CODE (OPTIONAL)</label>\n                  <input\n                    type=\"text\"\n                    name=\"refercode\"\n                    id=\"refercode\"\n                    required=\"\"\n                    value={referral_code}\n                    onChange={(e) => setReferral(e.target.value)}\n                    placeholder=\"Referral code\"\n                  />\n                  <i className=\"fas fa-check-circle\"></i>\n                  <i className=\"fas fa-exclamation-circle\"></i>\n                  <small></small>\n                </div>\n                <div className=\"main_terms\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"agree_terms\"\n                    name=\"agree_terms\"\n                    checked={agree}\n                    onChange={(e) => setAgree(e.target.checked)}\n                  />\n                  <span className=\"terms\">\n                   I agree to {webData.website_title}'s\n                   <Link to=\"/terms-condition\"> <span className=\"terms_condition\"> Terms of Service</span></Link>\n                  </span>\n                </div>\n                <button\n                  type=\"submit\"\n                  id=\"btn_submit\"\n                  className=\"reg_btn bg-success w-50 \"\n                  style={{marginLeft:\"10vw\"}}\n                >\n                  {loading ? (\n                    <i className=\"loading-icon fas fa-spinner fa-spin mr-2 \"></i>\n                  ) : null}\n                  <span id=\"reg\">REGISTER</span>\n                </button>\n                <Link className=\"signupform-login text-dark\" to=\"/login\">\n                <b>Have an Account ? </b>  <b className=\"text-success\"> LOGIN </b>\n                </Link>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm\">\n    <div className=\"col img_hider\" style={{backgroundImage:\"url(./image/BG_5.png)\",height:\"100vh\" , backgroundSize:\"cover\"}} >\n     \n    </div>\n    </div>\n  </div>\n  </div>\n\n    \n\n\n\n      \n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Security.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/currencyPreference.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/UserPayment.jsx",["534","535","536","537","538","539"],"import React, { useEffect } from \"react\";\nimport ProfileSidebar from \"./components/ProfileSidebar\";\nimport Header from \"./ftx_design/Header\";\nimport InrDeposite from \"./InrDeposite\";\n\nimport { useSelector } from \"react-redux\";\nimport Loader from \"./components/Loader\";\nimport {\n  N_getUserBankDetails,\n} from \"./redux/helpers/api_functions_new\";\nexport default function UserPayment(props) {\n  const { user } = useSelector((state) => state.AuthReducer);\n  const [bankStatus, setBankStatus] = React.useState(-1);\n  const [bankDetails, setBankDetails] = React.useState({});\n  const [loading, setLoading] = React.useState(true);\n\n  useEffect(() => {\n      N_getUserBankDetails(user?.params ? user.params.user_id : user.user_id)\n        .then((data) => {\n          if(data.status === 200) {\n          setBankStatus(data.params.bank_details.status);\n          if(data.params.bank_details.status == 1)\n            setBankDetails(data.params.bank_details);\n          } else if(data.status === 400) {\n            setBankStatus(data.params.bank_status);\n          }\n          setLoading(false);\n        })\n        .catch((e) => {\n          console.log(e);\n          setLoading(false);\n        });\n        \n  }, []);\n\n  return (\n    <>\n      <Header {...props} />\n\n      <div className=\"row p-1 \" style={{ margin: 0, marginTop: \"5em\" }}>\n        <div className=\"col-12 col-md-3 col-lg-3 p-0\">\n          <ProfileSidebar {...props} />\n        </div>\n        <div\n          className=\"col-12 col-md-8 col-lg-8 p-0 \"\n          style={{ marginTop: \"12px\" }}\n        >\n          <div className=\"p-2 theme-color my-sidebox-shadow pb-4\">\n            <div className=\"main-profile-pro d-flex align-items-center bb-1 h-25\">\n            <i className=\"fa fa-usd ml-2 mr-2 mt-2\"/>\n              <h4 className=\"px-2 font-weight-bold pt-3\">Payment Option</h4>\n            </div>\n            <article>\n              {loading ? <Loader /> : null}\n              {!loading && bankStatus == 1? (\n                <>\n                <div className=\"content-body \">\n                  <div className=\"container-fluid\">\n                      <div className=\"row mt-2 mb-2\">\n                        <h2 className=\"col-md-12 page-title\">Your bank account details for IMPS payments</h2>\n                      </div>\n                 \n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <table className=\"table table-hover table-bordered mdfthemetxt\">\n                            <thead className=\"bg-success text-white\">\n                                <tr>\n                                    <th className=\"tdCenter\">Account Number</th>\n                                    <th className=\"tdCenter\">IFSC Code</th>\n                                    <th className=\"tdCenter\">Account Type</th>\n                                    <th className=\"tdCenter\">Status</th>\n                                    {/* <th className=\"tdCenter\">Action</th> */}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                    <tr>\n                                        <td className=\"tdCenter\">{bankDetails.account_number}</td>\n                                        <td className=\"tdCenter\"> {bankDetails.ifsc} </td>\n                                        <td className=\"tdCenter\"> {bankDetails.account_type} </td>\n                                        <td className=\"tdCenter\"> Active</td>\n                                        {/* <td className=\"tdCenter\"> \n                                          <div className=\"dropdown  \">\n                                              <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                                  Action\n                                              </button>\n                                              <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                                  <a href='#delete_bank' onClick={(e) => { delteBank(bankDetails.user_id,2)}} className={` dropdown-item `}> \n                                                      {bankStatus == 3 ? 'Requested For Delete Again' : 'Remove'}  \n                                                  </a>\n                                                  {bankStatus == 3 ? (\n                                                    <>\n                                                      <a href='#active' onClick={(e) => { delteBank(bankDetails.user_id,1)}} className={` dropdown-item `}> \n                                                          Request For Active \n                                                      </a>\n                                                    </>\n                                                  ) : ''}\n                                              </div>\n                                          </div>\n                                        </td> */}\n                                    </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                  </div>\n                  </div>\n                </div>\n                </>\n              ) : null}\n              {!loading && bankStatus == -1 ? (\n                <div className=\"h5 p-2\">\n                  Your Bank details under Review for 72 Hours .{\" \"}\n                </div>\n              ) : null}\n              {!loading && ((bankStatus == 0) || (bankStatus == 2) ) ? <InrDeposite /> : null}\n            </article>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/UserProfile.jsx",["540","541","542","543","544"],"import React, { useEffect } from \"react\";\nimport ProfileSidebar from \"./components/ProfileSidebar\";\nimport { N_getUserProfile } from \"./redux/helpers/api_functions_new\";\nimport { useSelector } from \"react-redux\";\nimport Loader from \"./components/Loader\";\nimport Header from \"./ftx_design/Header\";\nexport default function UserProfile(props) {\n  const { user } = useSelector((state) => state.AuthReducer);\n  const [loading, setLoading] = React.useState(true);\n  const [profile, setProfile] = React.useState({});\n  useEffect(() => {\n    N_getUserProfile(user?.params ? user.params.user_id : user.user_id)\n      .then((d) => {\n        // console.log(\"userProfile\",d?.params.profile_info);\n        if (d.status === 200) {\n          setProfile(d?.params.profile_info);\n        }\n        setLoading(false);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, []);\n  return (\n    <>\n      <Header {...props} />\n      <div className=\"row p-1 \" style={{ margin: 0, marginTop: \"5em\" }}>\n        <div className=\"col-12 col-md-3 col-lg-3 p-0\">\n          <ProfileSidebar {...props} />\n        </div>\n        <div\n          className=\"col-12 col-md-8 col-lg-8 p-0\"\n          style={{\n            marginTop: \"12px\",\n            fontFamily: \"Open Sans, Lato, sans-serif\",\n          }}\n        >\n          <div className=\"p-1 theme-color my-sidebox-shadow\">\n            <div className=\"p-1 theme-color\">\n              <div className=\"main-profile-pro d-flex align-items-center bb-1 h-25\">\n                <i className=\"fa fa-user ml-2 mr-2 mt-2\" />\n                <h4 className=\"px-1 pt-3\">Profile</h4>\n              </div>\n            </div>\n            <article>\n              {loading ? <Loader /> : null}\n              {!loading && profile?.name != \"\" ? (\n                <div className=\"my-1 d-flex align-items-center\">\n                  {/* <div className=\"px-2\">\n                    <i\n                      className=\"fa theme-color-text fa-user\"\n                      style={{ fontSize: \"17px\" }}\n                    ></i>\n                  </div> */}\n                  <div className=\"px-2\">\n                    <div className=\"w65 float-left\">Name :</div>\n                    <div className=\"float-left ml-1\"> {profile.name}</div>\n                  </div>\n                </div>\n              ) : null}\n              {!loading && profile?.email != \"\" ? (\n                <div className=\"my-1 d-flex align-items-center\">\n                  {/* <div className=\"px-1\">\n                    <i\n                      className=\"fa theme-color-text fa-envelope\"\n                      style={{ fontSize: \"17px\" }}\n                    ></i>\n                  </div> */}\n                  <div className=\"px-2\">\n                    <div className=\" w65 float-left\">Email :</div>\n                    <div className=\"float-left ml-1\"> {profile.email}</div>\n                  </div>\n                </div>\n              ) : null}\n              {!loading && profile?.mobile_number != \"\" ? (\n                <div className=\"my-1 d-flex align-items-center\">\n                  <div className=\"px-1\">\n                    <i\n                      className=\"fa theme-color-text fa-phone fa-rotate-3\"\n                      style={{ fontSize: \"17px\" }}\n                    ></i>\n                  </div>\n                  <div className=\"px-1\">\n                    <div className=\" w65 bold float-left\">Mobile :</div>\n                    <div className=\"float-left ml-1\">\n                      {\" \"}\n                      {profile.mobile_number > 1\n                        ? \"+91 \" + profile.mobile_number\n                        : \"Not Saved\"}\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n              {!loading && profile?.mobile_number == \"\" ? (\n                <div className=\"px-2 py-4\">\n                  <button\n                    className=\"btn btn-secondary\"\n                    onClick={() => props.history.push(\"/mobile-verify\")}\n                  >\n                    Verify Your Mobile\n                  </button>\n                </div>\n              ) : null}\n            </article>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Fees.jsx",["545"],"import React, { useEffect } from \"react\";\nimport ProfileSidebar from \"./components/ProfileSidebar\";\nimport Header from \"./ftx_design/Header\";\nimport Switch from \"react-switch\";\nimport { N_getSupportedCurrency } from \"./redux/helpers/api_functions_new\";\n\nexport default function Fees(props) {\n  const [get_cstcoin, setcstCoin] = React.useState(0);\n  const [set_enable, setEnable] = React.useState(0);\n  useEffect(() => {\n    N_getSupportedCurrency()\n      .then((d) => {\n        // console.log(\"gpc: \", d);\n        d.map((item) => {\n          if (item.paired_with === \"is_paired_vrx\") {\n            setcstCoin(item);\n          }\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n   \n  }, []);\n  return (\n    <div>\n      <Header {...props} />\n      <div className=\"row p-1 \" style={{ margin: 0, marginTop: \"5em\" }}>\n        <div className=\"col-12 col-md-3 col-lg-3 p-0\">\n          <ProfileSidebar {...props} />\n        </div>\n        <div\n          className=\"col-12 col-md-8 col-lg-8 p-0\"\n          style={{ marginTop: \"12px\" }}\n        >\n          <div className=\"p-2 theme-color my-sidebox-shadow\">\n            <div className=\"main-profile-pro d-flex align-items-center bb-1 h-25\">\n              <i className=\"fa fa-inr ml-2 mr-2 mt-2\" />\n              <h4 className=\"px-2 font-weight-bold pt-3\"> Fee</h4>\n            </div>\n            <article>\n              <div className=\"col-md-10\">\n                <div className=\"sanfont \">\n                  <div className=\"bold mb-2\">\n                    Pay trading fees with {get_cstcoin.currency_coin}\n                  </div>\n                  <div className=\"float-right\">\n                    <Switch\n                      onChange={(e) => setEnable(set_enable ? 0 : 1)}\n                      checked={set_enable}\n                    />\n                  </div>\n                  <div className=\"text-secondary\">\n                    Enable this option to pay trading fees with:{\" \"}\n                  </div>\n                  <ul className=\"text-secondary mb-2\">\n                    <li className=\"ml-3\">\n                      <i className=\"fa fa-minus mr-1\" aria-hidden=\"true\"></i>{\" \"}\n                      {get_cstcoin.currency_coin} you buy from the exchange\n                    </li>\n                    <li className=\"ml-3\">\n                      <i className=\"fa fa-minus mr-1\" aria-hidden=\"true\"></i>{\" \"}\n                      Unlocked {get_cstcoin.currency_coin} balance reserved for\n                      trading fees\n                    </li>\n                  </ul>\n                  <div className=\"text-secondary\">\n                    <b>Note:</b> You'll get 50% discount if you pay fees via{\" \"}\n                    {get_cstcoin.currency_coin}\n                  </div>\n                </div>\n              </div>\n            </article>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/UserReferral.jsx",["546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561"],"import React, { useEffect, useState } from \"react\";\nimport ProfileSidebar from \"./components/ProfileSidebar\";\nimport Header from \"./ftx_design/Header\";\nimport { useSelector } from \"react-redux\";\nimport { NotificationManager } from \"react-notifications\";\nimport Loader from \"./components/Loader\";\nimport {\n  N_checkKYCStatus,\n  N_getRefferalData,\n} from \"./redux/helpers/api_functions_new\";\n\nexport default function UserReferral(props) {\nvar link_set;\n\n  const [loading, setLoading] = React.useState(true);\n  const { user } = useSelector((state) => state.AuthReducer);\n  const [activeTab, setActiveTab] = React.useState(0);\n  const [refferalData, setRefferalData] = React.useState();\n  const [total_ref, settotal_ref] = React.useState([]);\n  const [kyc_status, setstatus] = React.useState(0);\n  const [refcode, setrefcode] = useState(\"\");\n  const { webData } = useSelector((state) => state.websiteDBReducer);\n  useEffect(() => {\n    N_getRefferalData(user?.params ? user.params.user_id : user.user_id)\n      .then((d) => {\n        if (d.status === 200) {\n          setLoading(false);\n          console.log(\"getreferal data: \", d);\n          setRefferalData(\n            d.params.total_referal_earning ? d.params.total_referal_earning : 0\n          );\n          settotal_ref(d.params.total_referals ? d.params.total_referals : 0);\n          setrefcode(d.params.referral_code ? d.params.referral_code : 0);\n        } else {\n          setLoading(false);\n          console.log(\"something went wrong  to fetch refferal: \", d);\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, [kyc_status === 1]);\n\n  useEffect(() => {\n    N_checkKYCStatus(user?.params ? user.params.user_id : user.user_id)\n      .then((res) => {\n        console.log(\"k st: \", res);\n        if (res.status === 200) {\n          setstatus(res.params.kyc_status);\n        } else {\n          console.log(\"Sorry kyc status not fetched!!! \");\n        }\n      })\n      .catch((err) => {\n        console.log(\"error: \", err);\n      });\n  }, []);\n\n\n\n  return (\n    <>\n      <Header {...props} />\n      <div className=\"row p-1 \" style={{ margin: 0, marginTop: \"5em\" }}>\n        <div className=\"col-12 col-md-3 col-lg-3 p-0\">\n          <ProfileSidebar {...props} />\n        </div>\n        <div\n          className=\"col-12 col-md-8 col-lg-8 p-0\"\n          style={{ marginTop: \"12px\" }}\n        >\n          <div\n            className={`${webData.bg_color}` + \" p-1 my-sidebox-shadow\"}\n            style={{ backgroundColor: webData.bg_color_code }}\n          >\n            <div className=\"main-profile-pro d-flex align-items-center bb-1 h-25\">\n              <i className=\"fa fa-tree ml-2 mr-2 mt-2\" />\n              <h4 className=\"px-2 font-weight-bold pt-3\">Referral</h4>\n            </div>\n            {loading ? (\n              <Loader />\n            ) /* : Number(kyc_status) === 1 ? ( */\n              : <article className=\"p-2\">\n                <div className=\"row my-1\">\n                  <div className=\"col-12 offset-md-6 offset-lg-6 col-md-5 col-lg-5 px-2\">\n                    <div className=\"input-group mb-3\">\n                      <input\n                        type=\"text\"\n                        className=\" form-control light-theme-color  mdfthemetxt\"\n                        id=\"copy\"\n                        value={webData.site_url + `create/${refcode}`}\n                        readOnly\n                      />\n                      <div className=\"\">\n                        <button style={{background:\"transparent\",\n                        border:\"none\",\n                      paddingInline:\"8px\"}}\n                          // className=\"btn btn-theme-color\"\n                          type=\"button\"\n        \n                          onClick={() => {\n                            var copyText = document.getElementById(\"copy\");\n                            link_set = copyText.value;\n                            console.log(link_set, \"link setted\");\n                            copyText.select();\n                            copyText.setSelectionRange(0, 99999);\n                            document.execCommand(\"copy\");\n                            NotificationManager.info(\"Referral URL Copied!\");\n                          }}\n                        ><i className=\"fas fa-copy text-success\" style={{fontSize:\"30px\"}}  ></i>\n\n\n                        </button>\n\n                        {/* url */}\n                          \n                 \n                      \n                       \n<a class=\"resp-sharing-button__link \" id=\"link_1\"  onClick={function(){\n\ndocument.getElementById(\"link_1\").href=`https://facebook.com/sharer/sharer.php?u=`+link_set;\n\n}} target=\"_blank\" rel=\"noopener\" aria-label=\"\">\n\n  <div  class=\"resp-sharing-button resp-sharing-button--facebook resp-sharing-button--small\"><div aria-hidden=\"true\" class=\"resp-sharing-button__icon resp-sharing-button__icon--solid\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M18.77 7.46H14.5v-1.9c0-.9.6-1.1 1-1.1h3V.5h-4.33C10.24.5 9.5 3.44 9.5 5.32v2.15h-3v4h3v12h5v-12h3.85l.42-4z\"/></svg>\n    </div>\n  </div>\n</a>\n\n<a class=\"resp-sharing-button__link\" id=\"link_2\" onClick={function(){\n\ndocument.getElementById(\"link_2\").href=`https://twitter.com/intent/tweet/?text=&amp;url=`+link_set;\n\n}}   target=\"_blank\" rel=\"noopener\" aria-label=\"\">\n\n  <div class=\"resp-sharing-button resp-sharing-button--twitter resp-sharing-button--small\"><div aria-hidden=\"true\" class=\"resp-sharing-button__icon resp-sharing-button__icon--solid\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M23.44 4.83c-.8.37-1.5.38-2.22.02.93-.56.98-.96 1.32-2.02-.88.52-1.86.9-2.9 1.1-.82-.88-2-1.43-3.3-1.43-2.5 0-4.55 2.04-4.55 4.54 0 .36.03.7.1 1.04-3.77-.2-7.12-2-9.36-4.75-.4.67-.6 1.45-.6 2.3 0 1.56.8 2.95 2 3.77-.74-.03-1.44-.23-2.05-.57v.06c0 2.2 1.56 4.03 3.64 4.44-.67.2-1.37.2-2.06.08.58 1.8 2.26 3.12 4.25 3.16C5.78 18.1 3.37 18.74 1 18.46c2 1.3 4.4 2.04 6.97 2.04 8.35 0 12.92-6.92 12.92-12.93 0-.2 0-.4-.02-.6.9-.63 1.96-1.22 2.56-2.14z\"/></svg>\n    </div>\n  </div>\n</a>\n\n\n<a class=\"resp-sharing-button__link\" id=\"link_3\"   onClick={function(){\n\ndocument.getElementById(\"link_3\").href=`mailto:?subject=&amp;body=`+link_set;\n\n}} target=\"_self\" rel=\"noopener\" aria-label=\"\">\n  <div class=\"resp-sharing-button resp-sharing-button--email resp-sharing-button--small\"><div aria-hidden=\"true\" class=\"resp-sharing-button__icon resp-sharing-button__icon--solid\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M22 4H2C.9 4 0 4.9 0 6v12c0 1.1.9 2 2 2h20c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM7.25 14.43l-3.5 2c-.08.05-.17.07-.25.07-.17 0-.34-.1-.43-.25-.14-.24-.06-.55.18-.68l3.5-2c.24-.14.55-.06.68.18.14.24.06.55-.18.68zm4.75.07c-.1 0-.2-.03-.27-.08l-8.5-5.5c-.23-.15-.3-.46-.15-.7.15-.22.46-.3.7-.14L12 13.4l8.23-5.32c.23-.15.54-.08.7.15.14.23.07.54-.16.7l-8.5 5.5c-.08.04-.17.07-.27.07zm8.93 1.75c-.1.16-.26.25-.43.25-.08 0-.17-.02-.25-.07l-3.5-2c-.24-.13-.32-.44-.18-.68s.44-.32.68-.18l3.5 2c.24.13.32.44.18.68z\"/></svg>\n    </div>\n  </div>\n</a>\n\n\n<a class=\"resp-sharing-button__link\"  id=\"link_4\"  onClick={function(){\n\ndocument.getElementById(\"link_4\").href=`mailto:?subject=&amp;body=whatsapp://send?text=`+link_set;\n\n}} target=\"_blank\" rel=\"noopener\" aria-label=\"\">\n  <div class=\"resp-sharing-button resp-sharing-button--whatsapp resp-sharing-button--small\"><div aria-hidden=\"true\" class=\"resp-sharing-button__icon resp-sharing-button__icon--solid\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M20.1 3.9C17.9 1.7 15 .5 12 .5 5.8.5.7 5.6.7 11.9c0 2 .5 3.9 1.5 5.6L.6 23.4l6-1.6c1.6.9 3.5 1.3 5.4 1.3 6.3 0 11.4-5.1 11.4-11.4-.1-2.8-1.2-5.7-3.3-7.8zM12 21.4c-1.7 0-3.3-.5-4.8-1.3l-.4-.2-3.5 1 1-3.4L4 17c-1-1.5-1.4-3.2-1.4-5.1 0-5.2 4.2-9.4 9.4-9.4 2.5 0 4.9 1 6.7 2.8 1.8 1.8 2.8 4.2 2.8 6.7-.1 5.2-4.3 9.4-9.5 9.4zm5.1-7.1c-.3-.1-1.7-.9-1.9-1-.3-.1-.5-.1-.7.1-.2.3-.8 1-.9 1.1-.2.2-.3.2-.6.1s-1.2-.5-2.3-1.4c-.9-.8-1.4-1.7-1.6-2-.2-.3 0-.5.1-.6s.3-.3.4-.5c.2-.1.3-.3.4-.5.1-.2 0-.4 0-.5C10 9 9.3 7.6 9 7c-.1-.4-.4-.3-.5-.3h-.6s-.4.1-.7.3c-.3.3-1 1-1 2.4s1 2.8 1.1 3c.1.2 2 3.1 4.9 4.3.7.3 1.2.5 1.6.6.7.2 1.3.2 1.8.1.6-.1 1.7-.7 1.9-1.3.2-.7.2-1.2.2-1.3-.1-.3-.3-.4-.6-.5z\"/></svg>\n    </div>\n  </div>\n</a>\n\n\n<a class=\"resp-sharing-button__link\" id=\"link_5\"  onClick={function(){\n\ndocument.getElementById(\"link_5\").href=`https://telegram.me/share/url?text=&amp;url=`+link_set;\n\n}} target=\"_blank\" rel=\"noopener\" aria-label=\"\">\n  <div class=\"resp-sharing-button resp-sharing-button--telegram resp-sharing-button--small\"><div aria-hidden=\"true\" class=\"resp-sharing-button__icon resp-sharing-button__icon--solid\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M.707 8.475C.275 8.64 0 9.508 0 9.508s.284.867.718 1.03l5.09 1.897 1.986 6.38a1.102 1.102 0 0 0 1.75.527l2.96-2.41a.405.405 0 0 1 .494-.013l5.34 3.87a1.1 1.1 0 0 0 1.046.135 1.1 1.1 0 0 0 .682-.803l3.91-18.795A1.102 1.102 0 0 0 22.5.075L.706 8.475z\"/></svg>\n    </div>\n  </div>\n</a>\n\n\n\n\n\n                        {/* url */}\n\n\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row m-1\">\n                  <div className=\"col-12 col-md-4 col-lg-4 p-1\">\n                    <div className=\"card p-4 light-theme-color\">\n                      <div className=\"mb-0 card-body p-1\">\n                        <h6 className=\"card-title text-center\">\n                          TOTAL REFERRED FRIENDS\n                        </h6>\n                        <div className=\"card-text d-flex justify-content-center align-items-center\">\n                          <div className=\"card-text h2\">\n                            {total_ref?.length > 0 ? total_ref.length : 0}\n                          </div>\n                          <i className=\"fa fa-users fa-2x theme-color-text p-1\"></i>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-12 col-md-4   col-lg-4 p-1\">\n                    <div className=\"card p-4 light-theme-color\">\n                      <div className=\"mb-0 card-body p-1\">\n                        <h6 className=\"card-title text-center\">\n                          TOTAL COMMISSIONS EARNED\n                        </h6>\n                        <div className=\"card-text d-flex justify-content-center align-items-center\">\n                          <div className=\"card-text h2\">\n                            {refferalData ? refferalData : 0} (\n                            {webData.referral_coin})\n                            {/* { parseInt(refferalData?.total_referral_commission) } in INR   */}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-12 col-md-4 col-lg-4 p-1\">\n                    <div className=\"card p-4 light-theme-color\">\n                      <div className=\"mb-0 card-body p-1\">\n                        <h6 className=\"card-title text-center\">\n                          YOUR COMMISSION RATE\n                        </h6>\n                        <div className=\"card-text d-flex justify-content-center align-items-center\">\n                          <div className=\"card-text h2\">\n\n                            {webData.referral_fee} ({webData.referral_coin})\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" container-fluid table-responsive\">\n                  <a href=\"#history\" role=\"tab\">\n                    <h2>Commission History</h2>\n                  </a>\n                  <div className=\"tab-content\" id=\"nav-tabContent\">\n                    <div\n                      className={`tab-pane fade ${activeTab === 0 ? \"active show\" : null\n                        }`}\n                      id=\"nav-home\"\n                      role=\"tabpanel\"\n                    >\n                      <table className=\"table  table-striped   mdfthemetxt\">\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">NAME</th>\n                            <th scope=\"col\">DATES</th>\n                            <th scope=\"col\">coin</th>\n                            <th scope=\"col\">COMMISSION</th>\n                            <th scope=\"col\">Status</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {total_ref?.map((d, index) => (\n                            <tr className={(d?.kyc_status == 1 ?\n                              \"bg-success \"\n                              : d?.kyc_status == 2\n                                ? \"bg-danger\"\n                                : d.kyc_status == -1\n                                  ? \"bg-warning\"\n                                  : \"bg-warning\")} >\n                              <td   >{++index}</td>\n                              <td>{d?.name}</td>\n                              <td>\n                                {d?.time\n                                  ? new Date(Number(d?.time)).toLocaleString()\n                                  : \"00:00\"}\n                              </td>\n                              <td >{d?.wallet_type}</td>\n                              <td>{d?.valume}</td>\n                              <td   >\n\n\n                                {d?.kyc_status == 1\n                                  ? \"Verified\"\n                                  : d?.kyc_status == 2\n                                    ? \"Rejected\"\n                                    : d.kyc_status == -1\n                                      ? \"Pending\"\n                                      : \"Not Filled\"}\n\n\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </article>\n            /* ) : (\n              <div>\n                <h5 className=\"px-5 py-4 text-dark\">\n                  Pending Kyc (If filled wait for aproval.)\n                </h5>\n              </div>\n            )} */}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Wallet.jsx",["562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591"],"import React, { useState, useEffect } from \"react\";\nimport { isNum, isOtp } from \"./redux/helpers/form-validator.functions\";\nimport QRCode from \"qrcode.react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { useSelector } from \"react-redux\";\nimport FullLoader from \"./components/FullLoader\";\nimport { NotificationManager } from \"react-notifications\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\n\nimport $ from \"jquery\";\nimport {\n  N_get_wallet,\n  N_crypto_withdraw,\n  N_crypto_withdraw_Otp,\n  N_DepositUpdate,\n  N_inr_withdraw,\n  N_transectionHistory,\n  N_crypto_withdraw_Otp_Email,\n  N_setStaking,\n  N_BTXXSellHistory,\n} from \"./redux/helpers/api_functions_new\";\nimport { style } from \"@mui/system\";\nimport Header from \"./ftx_design/Header\";\nimport axios from \"axios\";\n\nexport default function Wallet() {\n  const [copied, setCopied] = useState();\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const [volume, setVolume] = useState();\n  const [to_address, setToAddress] = useState();\n  const [remark, setRemark] = useState();\n  const [req_no, setReqno] = useState();\n  // const [withdral_fee, setWthdrawalFee] = useState();\n  const [famount, setFinalAmount] = useState(45);\n  const [wallet_details, setWalletDetails] = useState([]);\n  const [allData, setAllData] = useState([]);\n  const [history, setHistory] = useState(\"\");\n  const [btxxHistory, setBtxxHistory] = useState([]);\n  // const [collapseClass, setcollapseClass] = useState(false);\n  const [activeTab, setActivetab] = useState(0);\n  const [total_inr, setTotalInr] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [withLoading, setWithLoading] = useState(false);\n  const [onlyBalance, setOnlyBalance] = useState(false);\n  // const [onlyChange, setChange] = useState(ev);\n  const [price, setPrice] = useState(\"\");\n  // const [suser, setUser] = useState();\n  const [status, setStatus] = useState(false);\n  const [popup, showpopup] = useState(false);\n  const [ctime, setctime] = useState(\"02:00\");\n  const [wallettype, setwallettype] = useState(\"\");\n  const [transection_id, setTransectionId] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [wotp, setwOtp] = useState(\"\");\n  const [otpv, setotpv] = useState(false);\n  const [filedata, setFileData] = useState();\n  const [l1, setl1] = useState();\n  const [l2, setl2] = useState();\n  const [stakepopup, setStakepopup] = useState(false);\n  const [type, setType] = useState(\"\");\n  const [poolstype, setPoolsType] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [percent, setPercent] = useState(\"\");\n  const [btexp, setBtexP] = useState(\"\");\n  const [usdtp, setUSDTP] = useState(\"\");\n\n  const { webData } = useSelector((state) => state.websiteDBReducer);\n  const { coins } = useSelector((state) => state.coinDBReducer);\n  const { user_fav_currency, currency_prefix, paired_curency_price } =\n    useSelector((state) => state.coinDBReducer);\n  const { user } = useSelector((state) => state.AuthReducer);\n\n  // function setchange(ev){\n  //   console.log(\"hello\");\n  //   a=document.getElementById(\"fil\").value;\n  //   console.log(\"hello\",a,wallet_details,\"checked one\");\n  //   for(var i=0;i<=wallet_details.length-1;i++){\n  //     if(wallet_details[i].symbol.charAt(0)==a.toUpperCase().charAt(0)){\n\n  //       console.log(wallet_details[i].symbol,\"hello\");\n\n  //     }\n  //   }\n\n  // }\n\n  function getCoinRate(coin) {\n    let coins1 = Object.values(coins);\n    let btexprice = coins1 && coins1.find((d) => d.symbol === \"BTEX\");\n    setBtexP(btexprice?.current_price_inr);\n    let usdtprice = coins1 && coins1.find((d) => d.symbol === \"USDT\");\n    setUSDTP(usdtprice?.current_price_inr);\n    let res = coins1.find((d) => d.symbol === coin);\n    console.log(\"inr price: \", res, coin);\n    if (coin === \"INR\") {\n      return 1;\n    } else {\n      return res?.current_price_inr ? res.current_price_inr : 0;\n    }\n  }\n\n  function getDepositWithdrawStatus(is_deposite, is_withdrawal) {\n    if (is_deposite && is_withdrawal) {\n      return 3;\n    } else if (is_deposite) {\n      return 1;\n    } else if (is_withdrawal) {\n      return 2;\n    } else {\n      return 0;\n    }\n  }\n\n  const uploadIMG = (input) => {\n    if (input.target.files && input.target.files[0]) {\n      console.log(\"fileset****\");\n      setFileData(input.target.files[0]);\n    }\n  };\n\n  function getWallets() {\n    N_get_wallet(user?.params ? user.params.user_id : user.user_id)\n      .then((d) => {\n        if (d.status === 200) {\n          let total = 0;\n          let final_data =\n            d.params.wallets &&\n            d.params.wallets.map((res, i) => {\n              let rate = getCoinRate(res?.symbol, \"INR\");\n              let st = getDepositWithdrawStatus(\n                res?.is_deposite,\n                res?.is_withdrawal\n              );\n              let inr_val = Math.round(rate * res?.balance * 1000) / 1000;\n              total = total + parseFloat(inr_val);\n              // console.log(\"inrvaljust: \", inr_val, Math.round(rate * d.params.wallets[res]?.balance * 1000) / 1000, rate);\n              return {\n                id: res?.id,\n                deposit_limit: res?.deposit_limit ? res.deposit_limit : 0,\n                icon: res?.icon,\n                symbol: res?.symbol,\n                name: res?.name,\n                status: st,\n                withdral_fee: res?.withdrawal_fee,\n                locked:\n                  Math.round(res?.locked * 10000) / 10000 != 0\n                    ? Math.round(\n                        Math.abs(res?.locked ? res?.locked : 0) * 10000\n                      ) / 10000\n                    : Math.round(res?.locked * 100000000) / 100000000,\n                address: res?.wallet_address,\n                balance:\n                  Math.round(res?.balance * 10000) / 10000 != 0\n                    ? Math.round(res?.balance * 10000) / 10000\n                    : Math.round(res?.balance * 100000000) / 100000000,\n                avl_balance:\n                  Math.round(res?.available * 10000) / 10000 != 0\n                    ? Math.round((res?.balance - res?.locked) * 10000) / 10000\n                    : Math.round((res?.balance - res?.locked) * 100000000) /\n                      100000000,\n                inr_balance: inr_val,\n              };\n            });\n          setWalletDetails(final_data);\n          setAllData(final_data);\n          //console.log(setWalletDetails(final_data), \"worked\");\n\n          setTotalInr(total);\n          setTimeout(() => setLoading(false), 800);\n        } else {\n          console.log(d);\n        }\n      })\n      .catch((e) => {\n        console.log(\"er\", e);\n      });\n  }\n\n  useEffect(() => {\n    if (total_inr <= 0) {\n      getWallets();\n      console.log(total_inr, \" effect checking \");\n    }\n  }, [coins]);\n\n  // useEffect(() => {\n  //   getWallets();\n  // }, []);\n\n  const getTansectionH = () => {\n    setActivetab(1);\n    N_transectionHistory(user?.params ? user.params.user_id : user.user_id)\n      .then((dt) => {\n        // if (status !== -5) setHistory(dt);\n        if (dt.status === 200) {\n          setHistory(dt.params.withdraw);\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const getBTXXSellH = () => {\n    setActivetab(2);\n    N_BTXXSellHistory(user?.params ? user.params.user_id : user.user_id)\n      .then((dt) => {\n        // if (status !== -5) setHistory(dt);\n        console.log(dt);\n        setBtxxHistory([...dt]);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    N_DepositUpdate(user?.params ? user.params.user_id : user.user_id);\n  }, []);\n\n  function changeCollapse(event, txt) {\n    setCopied(false);\n    $(\".deposit_c\").removeClass(\"show\").addClass(\"collapse\");\n    $(\".withdraw_c\").removeClass(\"show\").addClass(\"collapse\");\n  }\n\n  const otpCountdown = () => {\n    let duration = 60 * 5;\n    // const display = document.getElementById(\"#timer\");\n    let timer = duration,\n      minutes,\n      seconds;\n    const tint = setInterval(function () {\n      minutes = parseInt(timer / 60, 10);\n      seconds = parseInt(timer % 60, 10);\n\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n      setctime(minutes + \":\" + seconds);\n\n      if (--timer < 0) {\n        // timer = duration;\n        clearInterval(tint);\n      }\n    }, 1000);\n  };\n\n  useEffect(() => {\n    axios.get(\"https://withdrawal.bitflash.finance/api/khaatabahi\");\n  }, []);\n\n  return (\n    <>\n      {/* <Popup /> */}\n\n      {popup ? (\n        <>\n          <div\n            style={{\n              position: \"fixed\",\n              height: \"100%\",\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              zIndex: 200,\n              backgroundColor: \"rgb(185 185 185 / 30%)\",\n              top: \"0px\",\n            }}\n          >\n            <div\n              style={{\n                position: \"absolute\",\n                top: \"20%\",\n                zIndex: 1000,\n                boxShadow: \"2px 2px 20px rgba(0,0,0,0.4)\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignSelf: \"center\",\n              }}\n            >\n              {stakepopup ? (\n                <div\n                  className=\"security_header\"\n                  style={{ backgroundColor: \"#3bc59c\" }}\n                >\n                  <div className=\"close\">Staking</div>\n                </div>\n              ) : null}\n              <div className=\"container  shead-bg\">\n                <div className=\"row\">\n                  <div className=\"col-12 col-md-12 col-sm-12\">\n                    {stakepopup ? (\n                      <form className=\"signupform mdfthemetxt\" id=\"stake_form\">\n                        <div className=\"signupform-control\">\n                          <small id=\"msg\" style={{ fontSize: \"15px\" }}>\n                            Error message\n                          </small>\n                        </div>\n                        <div className=\"signupform-control\">\n                          <select\n                            className=\"form-select form-select-sm my-3\"\n                            aria-label=\".form-select-sm example\"\n                            style={{ width: \"100%\", padding: \"8px\" }}\n                            onChange={(e) => {\n                              const d = e.target.value.split(\" \");\n                              setType(d[0]);\n                              setPercent(d[1]);\n                              setPoolsType(d[2]);\n                            }}\n                          >\n                            <option selected defaultValue=\"0 0\">\n                              Select Your Period\n                            </option>\n                            {webData\n                              ? webData.stake?.map((item) => {\n                                  return (\n                                    <option\n                                      value={\n                                        item.days +\n                                        \" \" +\n                                        item.percent +\n                                        \" \" +\n                                        item.id\n                                      }\n                                    >\n                                      {item.days + \" Days\"}\n                                    </option>\n                                  );\n                                })\n                              : null}\n                          </select>\n                          <div>\n                            <input\n                              type=\"text\"\n                              name=\"stake_amount\"\n                              className=\"signupform-control\"\n                              id=\"stake_amount\"\n                              placeholder=\"Enter Your Amount\"\n                              onChange={(e) => {\n                                setAmount(e.target.value);\n                              }}\n                            />\n                          </div>\n                        </div>\n                        <button\n                          type=\"button\"\n                          id=\"proceed_stake_btn\"\n                          className=\"my-2 btn-block p-2 text-light\"\n                          style={{\n                            background: \"#3bc59c\",\n                            border: \"none\",\n                            outline: \"none\",\n                            borderRadius: \"20px\",\n                            fontSize: \"14px\",\n                          }}\n                          onClick={() => {\n                            if (amount > 0) {\n                              if (type > 0) {\n                                let totalbtexinr = amount * btexp;\n                                let totalusdt = totalbtexinr / usdtp;\n                                N_setStaking(\n                                  user?.params\n                                    ? user.params.user_id\n                                    : user.user_id,\n                                  type,\n                                  amount,\n                                  percent,\n                                  btexp,\n                                  usdtp,\n                                  totalusdt,\n                                  poolstype\n                                )\n                                  .then((e) => {\n                                    if (e.status == 200) {\n                                      NotificationManager.success(e.message);\n                                      document.location.reload();\n                                    } else {\n                                      NotificationManager.error(e.message);\n                                      showpopup(false);\n                                      setStakepopup(false);\n                                    }\n                                  })\n                                  .catch((e) => {\n                                    console.log(e);\n                                    showpopup(false);\n                                    setStakepopup(false);\n                                  });\n                              } else {\n                                NotificationManager.error(\n                                  \"Please choose your type\"\n                                );\n                              }\n                            } else {\n                              NotificationManager.error(\n                                \"Please enter your amount\"\n                              );\n                            }\n                          }}\n                        >\n                          Stake\n                        </button>\n                      </form>\n                    ) : otpv ? (\n                      <>\n                        <form className=\"signupform mdfthemetxt\" id=\"otp_form\">\n                          <div>\n                            <h3>Email OTP verification </h3>\n                          </div>\n                          <div className=\"signupform-control\">\n                            <small id=\"msg\" style={{ fontSize: \"15px\" }}>\n                              Error message\n                            </small>\n                          </div>\n                          <div className=\"signupform-control\">\n                            <div>\n                              <input\n                                type=\"text\"\n                                name=\"user_otp\"\n                                className=\"signupform-control\"\n                                id=\"user_otp\"\n                                maxLength={6}\n                                onChange={(e) => {\n                                  setwOtp(e.target.value);\n                                  isOtp(e.target.value);\n                                }}\n                                value={wotp}\n                                placeholder=\"Enter Your OTP\"\n                              />\n                              <i\n                                className=\"fas fa-check-circle\"\n                                style={{ top: \"16px\" }}\n                              ></i>\n                              <i\n                                className=\"fas fa-exclamation-circle\"\n                                style={{ top: \"16px\" }}\n                              ></i>\n                              <small>Error message</small>\n                              <div className=\"resend_btn text-info\" id=\"timer\">\n                                {ctime}\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"signupform-control\" id=\"btns\">\n                            <button\n                              type=\"button\"\n                              id=\"withdrawal_btn\"\n                              className=\"sendbtn\"\n                              onClick={(e) => {\n                                e.preventDefault();\n                                setl1(\"spinner-border spinner-border-sm\");\n                                document.getElementById(\n                                  \"withdrawal_btn\"\n                                ).disabled = true;\n                                N_crypto_withdraw_Otp_Email(\n                                  user?.params\n                                    ? user.params.user_id\n                                    : user.user_id,\n                                  wotp,\n                                  transection_id,\n                                  wallettype\n                                )\n                                  .then((res) => {\n                                    setl1(\"\");\n                                    showpopup(false);\n                                    if (res.status === 200) {\n                                      NotificationManager.success(res.message);\n\n                                      document.location.reload();\n                                    } else {\n                                      NotificationManager.error(res.message);\n\n                                      document.location.reload();\n                                    }\n                                  })\n                                  .catch((err) => {\n                                    NotificationManager.error(\n                                      \"Somthing Went Wrong!\"\n                                    );\n                                    setVolume(\"\");\n                                    setRemark(\"\");\n                                    setPrice(\"\");\n                                    console.log(err);\n                                  });\n                              }}\n                            >\n                              <span className={`${l1} mx-1 `}></span>\n                              Withdraw\n                            </button>\n                          </div>\n                          {loading ? (\n                            <div\n                              className=\"spinner-border text-primary\"\n                              role=\"status\"\n                            >\n                              <span className=\"sr-only\">Loading...</span>\n                            </div>\n                          ) : null}\n                        </form>\n                      </>\n                    ) : (\n                      <form className=\"signupform mdfthemetxt\" id=\"otp_form\">\n                        <div>\n                          <h3>Mobile OTP verification </h3>\n                        </div>\n                        <div className=\"signupform-control\">\n                          <small id=\"msg\" style={{ fontSize: \"15px\" }}>\n                            Error message\n                          </small>\n                        </div>\n                        <div className=\"signupform-control\">\n                          <div>\n                            <input\n                              type=\"text\"\n                              name=\"user_otp\"\n                              className=\"signupform-control\"\n                              id=\"user_otp\"\n                              maxLength={6}\n                              onChange={(e) => {\n                                setOtp(e.target.value);\n                                isOtp(e.target.value);\n                              }}\n                              value={otp}\n                              placeholder=\"Enter Your OTP\"\n                            />\n                            <i\n                              className=\"fas fa-check-circle\"\n                              style={{ top: \"16px\" }}\n                            ></i>\n                            <i\n                              className=\"fas fa-exclamation-circle\"\n                              style={{ top: \"16px\" }}\n                            ></i>\n                            <small>Error message</small>\n                            <div className=\"resend_btn text-info\" id=\"timer\">\n                              {ctime}\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"signupform-control\" id=\"btns\">\n                          <button\n                            type=\"button\"\n                            id=\"proceed_btn\"\n                            className=\"sendbtn\"\n                            onClick={(e) => {\n                              e.preventDefault();\n                              setl2(\"spinner-border spinner-border-sm\");\n                              N_crypto_withdraw_Otp(\n                                user?.params\n                                  ? user.params.user_id\n                                  : user.user_id,\n                                otp,\n                                transection_id,\n                                wallettype\n                              )\n                                .then((res) => {\n                                  setl2(\"\");\n                                  if (res.status === 200) {\n                                    NotificationManager.success(\n                                      \"OTP Send. Please Check Your Email\"\n                                    );\n                                    setotpv(true);\n                                  } else {\n                                    NotificationManager.error(res.message);\n                                    showpopup(false);\n                                    document.location.reload();\n                                  }\n                                })\n                                .catch((err) => {\n                                  console.log(err);\n                                });\n                            }}\n                          >\n                            <span className={`${l2} mx-1 `}></span>\n                            Verify\n                          </button>\n                        </div>\n                        {loading ? (\n                          <div\n                            className=\"spinner-border text-primary\"\n                            role=\"status\"\n                          >\n                            <span className=\"sr-only\">Loading...</span>\n                          </div>\n                        ) : null}\n                      </form>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      ) : null}\n\n      <Header />\n\n      <div\n        className=\"container-fluid \"\n        style={{\n          backgroundColor: \"#e9e9e9\",\n\n          width: \"80%\",\n          marginTop: \"50px\",\n          marginBottom: \"30px\",\n\n          backgroundColor: webData.bg_color_code,\n        }}\n      >\n        <div className=\" text-start text-dark  \">\n          <h2 className=\"box-title styler theme-color-text \">\n            <b style={{ fontSize: \"20px\" }}> FUNDS AND TRANSFERS</b>\n          </h2>\n        </div>\n\n        <div className=\"d-flex align-items-center  justify-content-between px-15 color_setter  \">\n          <div className=\"btn-group custom-grp color-btn lineBreaker\">\n            <span\n              style={{\n                cursor: \"pointer\",\n                // fontSize:\"15px\",\n                marginRight: \"10px\",\n              }}\n              className={` mobile_font_setter    btn-sm ${\n                activeTab == 0 ? \"link_toogler\" : \"\"\n              }`}\n              onClick={() => setActivetab(0)}\n            >\n              FUNDS\n            </span>\n            <span\n              style={{\n                cursor: \"pointer\",\n                //  fontSize:\"15px\"marginRight:\"10px\",\n              }}\n              className={`mobile_font_setter btn-sm ${\n                activeTab == 1 ? \"link_toogler\" : \"\"\n              }`}\n              onClick={() => getTansectionH()}\n            >\n              TRANSFER HISTORY\n            </span>\n            {/* <span\n              style={{\n                cursor: \"pointer\",\n                //  fontSize:\"15px\"marginRight:\"10px\",\n              }}\n              className={`mobile_font_setter btn-sm ${activeTab == 2 ? \"link_toogler\" : \"\"\n                }`}\n              onClick={() => getBTXXSellH()}\n            >\n              BTXX SELL HISTORY\n            </span> */}\n          </div>\n\n          <ul className=\"box-controls pull-right text-dark mr-4 mobile_font_setter\">\n            <li className=\"mx-5\">\n              <div className=\"\">\n                {\" \"}\n                <span className=\" mx-3  \">Estimated Portfolio</span>\n                {currency_prefix[user_fav_currency]}{\" \"}\n                <span className=\" \">\n                  {user_fav_currency === \"INR\"\n                    ? total_inr.toFixed(5)\n                    : (\n                        total_inr / paired_curency_price[user_fav_currency]\n                      ).toFixed(8)}\n                </span>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <div\n          className=\"text-dark mb-3\"\n          style={{\n            width: \"100%\",\n            border: \"1px solid #929292\",\n            height: \"2px\",\n            zIndex: \"-1\",\n            opacity: \"0.3\",\n          }}\n        >\n          {/*  working as horixontal line */}\n        </div>\n\n        <div className=\"text-dark\">\n          <div class=\" text_locater lineBreaker \">\n            <input\n              type=\"text\"\n              style={{ opacity: \"0.5\" }}\n              onChange={(e) => {\n                var inUpper = e.target.value.toUpperCase();\n                const filteredData = allData.filter((item) =>\n                  item.symbol.includes(inUpper)\n                );\n                // console.log(filteredData);\n                setWalletDetails([...filteredData]);\n              }}\n              placeholder=\"Search Currency\"\n              className=\"input_locater    text-center\"\n              id=\"fil\"\n            />\n\n            <FormGroup>\n              <FormControlLabel\n                onClick={(event) => {\n                  setOnlyBalance(!onlyBalance);\n                  handleChange(event);\n                }}\n                control={<Switch preventDefault />}\n                label=\"Hide Zero Balances\"\n                style={{ opacity: \"0.6\" }}\n              />\n            </FormGroup>\n          </div>\n        </div>\n\n        <div\n          className={\"bg-white container-fluid  \"}\n          style={{\n            // width: \"80%\",\n            marginTop: \"00px\",\n            marginBottom: \"30px\",\n            // boxShadow:\"0px 0px 20px #1c1e1a\",\n            backgroundColor: webData.bg_color_code,\n          }}\n        >\n          {/*  fund and transfer */}\n\n          {/*  */}\n\n          {/* px-15 pt-0   */}\n          <div className=\"box-body \">\n            <div className=\"table-responsive  h6  table-hover \">\n              {activeTab == 0 ? (\n                <table\n                  className=\"mdfthemetxt table table-border  no-margin\"\n                  style={{\n                    overflow: \"hidden\",\n                  }}\n                >\n                  <thead className=\"\">\n                    <tr className=\"bg-pale-dark \" style={{ fontSize: \"12px\" }}>\n                      <th className=\"\" style={{ fontWeight: \"normal\" }}>\n                        ASSETS\n                      </th>\n                      <th style={{ textAlign: \"right\", fontWeight: \"normal\" }}>\n                        AVAILABLE BALANCE\n                      </th>\n                      <th\n                        style={{ fontWeight: \"normal\" }}\n                        className=\"text-right \"\n                      >\n                        LOCKED\n                      </th>\n                      <th\n                        style={{ fontWeight: \"normal\" }}\n                        className=\"text-right \"\n                      >\n                        TOTAL\n                      </th>\n                      <th\n                        style={{ fontWeight: \"normal\" }}\n                        className=\"text-right \"\n                      >\n                        {user_fav_currency} VALUE\n                      </th>\n                      <th\n                        style={{ fontWeight: \"normal\" }}\n                        className=\"text-right \"\n                      >\n                        ACTION\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {loading ? (\n                      <tr>\n                        <td colSpan={8}>\n                          <FullLoader />\n                        </td>\n                      </tr>\n                    ) : wallet_details ? (\n                      wallet_details.map((item, index) => (\n                        <>\n                          {index === 0\n                            ? wallet_details.map((item, index) => (\n                                <>\n                                  {(item.symbol === \"INR\" &&\n                                    onlyBalance &&\n                                    item.inr_balance > 0) ||\n                                  (item.symbol === \"INR\" && !onlyBalance) ? (\n                                    <>\n                                      <tr\n                                        style={{\n                                          fontWeight: \"400\",\n                                          fontSize: \"13px\",\n                                        }}\n                                        key={index * 6}\n                                      >\n                                        <td>\n                                          {item.icon ? (\n                                            <img\n                                              className=\" mx-3\"\n                                              src={item.icon}\n                                              alt={item.symbol}\n                                              width=\"20\"\n                                              height=\"20\"\n                                            />\n                                          ) : (\n                                            \" \"\n                                          )}{\" \"}\n                                          {item.name} ( {item.symbol})\n                                        </td>\n                                        <td style={{ textAlign: \"right\" }}>\n                                          {item.avl_balance}\n                                        </td>\n                                        <td className=\"text-right\">\n                                          {item.locked}\n                                        </td>\n                                        <td className=\"text-right\">\n                                          {item.balance.toFixed(4)}\n                                        </td>\n                                        <td className=\"text-right\">\n                                          {currency_prefix[user_fav_currency]}{\" \"}\n                                          {item.inr_balance}\n                                        </td>\n                                        <td className=\"text-right\">\n                                          {parseInt(item.status) === 1 ||\n                                          (parseInt(item.status) === 3 &&\n                                            item.symbol == \"INR\") ? (\n                                            <>\n                                              {/* <button\n                                              className=\"btn btn-theme-color mr-2\"\n                                              id=\"deposit\"\n                                              data-toggle=\"collapse\"\n                                              data-target={\n                                                \"#inr_\" + item.symbol\n                                              }\n                                              aria-expanded=\"false\"\n                                              onClick={(e) =>\n                                                changeCollapse(\n                                                  e,\n                                                  \"#inr_\" + item.symbol\n                                                )\n                                              }\n                                            >\n                                              Deposit\n                                            </button> */}\n                                              <a\n                                                className=\"btn bg-success mr-2\"\n                                                style={{\n                                                  backgroundColor: \"#efefef\",\n                                                }}\n                                                href=\"https://login.btexpay.com\"\n                                                target=\"_blank\"\n                                              >\n                                                <span className=\" text-white\">\n                                                  {\" \"}\n                                                  Deposit{\" \"}\n                                                </span>\n                                              </a>\n                                            </>\n                                          ) : null}\n                                          {parseInt(item.status) === 2 ||\n                                          (parseInt(item.status) === 3 &&\n                                            item.symbol === \"INR\") ? (\n                                            <>\n                                              <button\n                                                className=\"btn bg-danger text-white\"\n                                                id=\"withdraw\"\n                                                data-toggle=\"collapse\"\n                                                data-target={\n                                                  \"#inrw_\" + item.symbol\n                                                }\n                                                aria-expanded=\"false\"\n                                                onClick={(e) =>\n                                                  changeCollapse(\n                                                    e,\n                                                    \"#inrw_\" + item.symbol\n                                                  )\n                                                }\n                                              >\n                                                Withdraw\n                                              </button>\n                                            </>\n                                          ) : null}\n                                        </td>\n                                      </tr>\n                                      {/* <tr\n                                    className=\"collapse deposit_c\"\n                                    id={\"inr_\" + item.symbol}\n                                  >\n                                    <td colSpan=\"6\">\n                                      <div className=\"row\">\n                                        <div\n                                          className=\"col-md-6\"\n                                          style={{ margin: \"0 auto\" }}\n                                        >\n                                          <div className=\"card light-theme-color\">\n                                            <div className=\"card-header\">\n                                              Deposit\n                                            </div>\n                                            <div className=\"card-body\">\n                                              <div className=\"signupform-control\">\n                                                <a\n                                                  className=\"btn btn-theme-color\"\n                                                  style={{\n                                                    border: \"1px solid\",\n                                                    background: \"#c2efc9\",\n                                                  }}\n                                                  href=\"https://login.btexpay.com\"\n                                                  target=\"_blank\"\n                                                >\n                                                  Click here for Deposit\n                                                </a>\n                                              </div>\n                                              <div className=\"signupform-control\">\n                                                  <div\n                                                    className=\"p-3\"\n                                                    style={{\n                                                      width: \"fit-content\",\n                                                      backgroundColor: \"#fff\",\n                                                    }}\n                                                  >\n                                                    <img src=\"/img/bitflashqrpay.jpeg\" />\n                                                  </div>\n                                                </div>\n                                                <lebal for=\"screenshot\">\n                                                  Upload Screenshot File:{\" \"}\n                                                </lebal>\n                                                <input\n                                                  type=\"file\"\n                                                  onChange={(e) => {\n                                                    uploadIMG(e);\n                                                  }}\n                                                />\n                                                <h5 className=\"card-title mt-2\">\n                                                  Price\n                                                </h5>\n                                                <input\n                                                  type=\"text\"\n                                                  className=\"form-control\"\n                                                  required\n                                                  id=\"price\"\n                                                  value={price}\n                                                  onChange={(e) => {\n                                                    setPrice(e.target.value);\n                                                  }}\n                                                />\n                                                <br />\n                                                <PayPalButton\n                                                  options={{\n                                                    clientId: \"ATboReAfMjjlq3tAFczs5FMttpyeK7ogGoTUMoFE6drhRnwrpYXtEsDQDPgT-UXdD7bGwxmkM9EUL06d\",\n                                                    currency: \"USD\",\n                                                  }}\n                                                  amount={price}\n                                                  onSuccess={(details, data) => {\n\n                                                    N_PaypalPayment(user?.params\n                                                      ? user.params.user_id\n                                                      : user.user_id, price, usdtp, details, data).then((d)=>{\n                                                        NotificationManager.success(d.message)\n                                                      })\n                                                  }}\n                                                />\n                                                <a\n                                                  className=\"btn btn-theme-color\"\n                                                  onClick={(e) => {\n                                                    N_ScreenShot(\n                                                      e,\n                                                      filedata,\n                                                      price,\n                                                      user?.params\n                                                        ? user.params.user_id\n                                                        : user.user_id\n                                                    );\n                                                  }}\n                                                >\n                                                  UpLoad\n                                                </a>\n                                                <div\n                                                  className=\"spinner-border text-primary\"\n                                                  style={{ display: \"none\" }}\n                                                  role=\"status\"\n                                                >\n                                                  <span className=\"sr-only\">\n                                                    Loading...\n                                                  </span>\n                                                </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </td>\n                                  </tr> */}\n                                      <tr\n                                        className=\"collapse withdraw_c\"\n                                        id={\"inrw_\" + item.symbol}\n                                      >\n                                        <td colSpan=\"6\">\n                                          <div className=\"row\">\n                                            <div\n                                              className=\"col-md-6\"\n                                              style={{ margin: \"0 auto\" }}\n                                            >\n                                              <div className=\"card\">\n                                                <div className=\"card-header\">\n                                                  Withdraw\n                                                </div>\n                                                <div className=\"card-body\">\n                                                  <strong>\n                                                    &#8377;{\" \"}\n                                                    {Number(item.withdral_fee)}{\" \"}\n                                                    per Transection\n                                                  </strong>\n                                                  <h5 className=\"card-title\">\n                                                    Amount\n                                                  </h5>\n                                                  <input\n                                                    type=\"text\"\n                                                    className=\"form-control\"\n                                                    required\n                                                    id=\"price\"\n                                                    value={price}\n                                                    onChange={(e) => {\n                                                      setPrice(e.target.value);\n                                                    }}\n                                                  />\n                                                  <h5 className=\"card-title\">\n                                                    Withdrawal Fee\n                                                  </h5>\n                                                  <input\n                                                    type=\"text\"\n                                                    className=\"form-control\"\n                                                    id=\"withdraw_fee\"\n                                                    value={item.withdral_fee}\n                                                  />\n                                                  <h5 className=\"card-title\">\n                                                    Remark\n                                                  </h5>\n                                                  <input\n                                                    type=\"text\"\n                                                    className=\"form-control\"\n                                                    required\n                                                    id=\"remark\"\n                                                    value={remark}\n                                                    onChange={(e) => {\n                                                      setRemark(e.target.value);\n                                                    }}\n                                                  />\n                                                  <br />\n                                                  <a\n                                                    className=\"btn bg-danger text-white\"\n                                                    onClick={() => {\n                                                      setWithLoading(true);\n                                                      N_inr_withdraw(\n                                                        user.user_id,\n                                                        price,\n                                                        item.symbol,\n                                                        remark\n                                                      ).then((d) => {\n                                                        setWithLoading(false);\n                                                        if (d.status == 200) {\n                                                          showpopup(true);\n                                                          otpCountdown();\n                                                          setwallettype(\n                                                            d.params.symbol\n                                                          );\n                                                          setTransectionId(\n                                                            d.params\n                                                              .transection_id\n                                                          );\n                                                          NotificationManager.success(\n                                                            d.message\n                                                          );\n                                                          setStatus(!status);\n                                                        } else {\n                                                          NotificationManager.error(\n                                                            d.message\n                                                          );\n                                                          setStatus(!status);\n                                                        }\n                                                      });\n                                                    }}\n                                                  >\n                                                    {withLoading ? (\n                                                      <span className=\"loading-icon fas fa-spinner fa-spin mr-2\"></span>\n                                                    ) : (\n                                                      \"Withdraw\"\n                                                    )}\n                                                  </a>\n                                                </div>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </td>\n                                      </tr>\n                                    </>\n                                  ) : null}\n                                </>\n                              ))\n                            : null}\n                          {(item.symbol !== \"INR\" &&\n                            onlyBalance &&\n                            item.inr_balance > 0) ||\n                          (item.symbol !== \"INR\" && !onlyBalance) ? (\n                            <>\n                              <tr\n                                style={{ fontWeight: \"400\", fontSize: \"13px\" }}\n                                key={index * 3}\n                              >\n                                <td>\n                                  {item.icon ? (\n                                    <img\n                                      className=\"mx-3\"\n                                      src={item.icon}\n                                      alt={item.symbol}\n                                      width=\"20\"\n                                      height=\"20\"\n                                    />\n                                  ) : (\n                                    \" \"\n                                  )}{\" \"}\n                                  {item.name}\n                                  {item.symbol === \"USDT\"\n                                    ? \"(\" + item.symbol + \")\" + \" (BEP20)\"\n                                    : item.symbol === \"BUSD\"\n                                    ? \"(\" + item.symbol + \")\" + \" (BEP20)\"\n                                    : \"(\" + item.symbol + \")\"}\n                                </td>\n                                <td style={{ textAlign: \"right\" }}>\n                                  {item.balance > 0\n                                    ? item.avl_balance.toFixed(4)\n                                    : item.balance}\n                                </td>\n                                <td className=\"text-right\">\n                                  {item.locked > 0\n                                    ? item.locked.toFixed(4)\n                                    : item.locked}\n                                </td>\n                                <td className=\"text-right\">\n                                  {item.avl_balance > 0\n                                    ? (\n                                        Number(item.avl_balance) +\n                                        Number(item.locked)\n                                      ).toFixed(4)\n                                    : item.avl_balance}\n                                </td>\n                                <td className=\"text-right\">\n                                  {currency_prefix[user_fav_currency] + \" \"}\n                                  {user_fav_currency === \"INR\"\n                                    ? item.inr_balance\n                                    : item.inr_balance > 0\n                                    ? (\n                                        item.inr_balance /\n                                        Number(\n                                          paired_curency_price[\n                                            user_fav_currency\n                                          ]\n                                        )\n                                      ).toFixed(8)\n                                    : 0}\n                                </td>\n                                <td className=\"text-right\">\n                                  {(item.address &&\n                                    parseInt(item.status) === 1) ||\n                                  parseInt(item.status) === 3 ? (\n                                    <button\n                                      type=\"button\"\n                                      className=\"btn bg-success mr-2\"\n                                      id=\"deposit\"\n                                      data-toggle=\"collapse\"\n                                      // data-target={\"#inrw_\" + item.symbol}\n                                      // aria-expanded=\"false\"\n                                      // onClick={(e) =>\n                                      //   changeCollapse(e, \"#inrw_\" + item.symbol)\n                                      // }\n                                      data-target={\"#deposit_\" + item.symbol}\n                                      aria-expanded=\"false\"\n                                      onClick={(e) =>\n                                        changeCollapse(\n                                          e,\n                                          \"#deposit_\" + item.symbol\n                                        )\n                                      }\n                                    >\n                                      <span className=\"text-white\">\n                                        {\" \"}\n                                        Deposit{\" \"}\n                                      </span>\n                                    </button>\n                                  ) : null}\n                                  {(item.address &&\n                                    parseInt(item.status) === 2) ||\n                                  parseInt(item.status) === 3 ? (\n                                    <button\n                                      type=\"button\"\n                                      className=\"btn bg-danger text-white\"\n                                      id=\"withdraw\"\n                                      data-toggle=\"collapse\"\n                                      data-target={\"#withdraw_\" + item.symbol}\n                                      aria-expanded=\"false\"\n                                      onClick={(e) =>\n                                        changeCollapse(\n                                          e,\n                                          \"#withdraw_\" + item.symbol\n                                        )\n                                      }\n                                    >\n                                      Withdraw\n                                    </button>\n                                  ) : null}\n\n                                  {item.symbol === \"BTEX\" ? (\n                                    <button\n                                      type=\"button\"\n                                      className=\"btn btn-theme-color mx-2 text-light\"\n                                      id=\"stake\"\n                                      style={{\n                                        backgroundColor: \"#3bc59c\",\n                                        letterSpacing: \"2px\",\n                                      }}\n                                      onClick={() => {\n                                        showpopup(true);\n                                        setStakepopup(true);\n                                      }}\n                                    >\n                                      Stake\n                                    </button>\n                                  ) : null}\n\n                                  {/* {item.symbol === \"BUSD\" ? (\n                                  <>\n                                    <button\n                                      type=\"button\"\n                                      className=\"btn btn-theme-color mr-2\"\n                                      id=\"deposit\"\n                                      data-toggle=\"collapse\"\n                                      // data-target={\"#inrw_\" + item.symbol}\n                                      // aria-expanded=\"false\"\n                                      // onClick={(e) =>\n                                      //   changeCollapse(e, \"#inrw_\" + item.symbol)\n                                      // }\n                                      data-target={\"#deposit_\" + item.symbol}\n                                      aria-expanded=\"false\"\n                                      onClick={(e) =>\n                                        changeCollapse(\n                                          e,\n                                          \"#deposit_\" + item.symbol\n                                        )\n                                      }\n                                    >\n                                      Deposit\n                                    </button>\n                                    <button\n                                      type=\"button\"\n                                      className=\"btn btn-theme-color\"\n                                      id=\"withdraw\"\n                                      data-toggle=\"collapse\"\n                                      data-target={\"#withdraw_\" + item.symbol}\n                                      aria-expanded=\"false\"\n                                      onClick={(e) =>\n                                        changeCollapse(\n                                          e,\n                                          \"#withdraw_\" + item.symbol\n                                        )\n                                      }\n                                    >\n                                      Withdraw\n                                    </button>\n                                  </>\n                                ) : null} */}\n                                </td>\n                              </tr>\n                              <tr\n                                className=\"collapse deposit_c\"\n                                id={\"deposit_\" + item.symbol}\n                              >\n                                <td colSpan=\"6\">\n                                  <form>\n                                    <div className=\"row\">\n                                      <div className=\"col-md-6\">\n                                        <div className=\"signupform-control\">\n                                          <div>\n                                            Send to your Secure {item.name}{\" \"}\n                                            Address\n                                          </div>\n                                          <hr className=\"h_r\" />\n                                        </div>\n                                        <div className=\"signupform-control\">\n                                          <label htmlFor=\"coin_address\">\n                                            Destination Address\n                                          </label>\n                                          <CopyToClipboard\n                                            text={item.address}\n                                            onCopy={() =>\n                                              setCopied({ copied: true })\n                                            }\n                                          >\n                                            {copied ? (\n                                              <span className=\"cop_btn text-success\">\n                                                Copied\n                                              </span>\n                                            ) : (\n                                              <span className=\"cop_btn theme-color-text\">\n                                                <i\n                                                  className=\"fas fa-copy\"\n                                                  aria-hidden=\"true\"\n                                                ></i>\n                                                Copy\n                                              </span>\n                                            )}\n                                          </CopyToClipboard>\n                                          <input\n                                            type=\"text\"\n                                            className=\"input_button\"\n                                            value={item.address}\n                                          />\n                                        </div>\n                                        <div className=\"signupform-control\">\n                                          <div>\n                                            <i\n                                              className=\"fas fa-warning\"\n                                              aria-hidden=\"true\"\n                                            ></i>{\" \"}\n                                            Disclaimer\n                                          </div>\n                                          <hr className=\"h_r\" />\n                                          <label htmlFor=\"disclaimer\">\n                                            Please Deposit minimum{\" \"}\n                                            {\" \" +\n                                              item?.deposit_limit +\n                                              \" \" +\n                                              item.symbol +\n                                              \"  \"}\n                                            to this address. If you Deposit any\n                                            other coins, It will be lost\n                                            forever.\n                                          </label>\n                                        </div>\n                                      </div>\n                                      <div className=\"col-md-6\">\n                                        <div className=\"signupform-control\">\n                                          <div>Or Scan This QR Code</div>\n                                          <hr className=\"h_r\" />\n                                        </div>\n                                        <div className=\"signupform-control\">\n                                          <div\n                                            className=\"p-3\"\n                                            style={{\n                                              width: \"fit-content\",\n                                              backgroundColor: \"#fff\",\n                                            }}\n                                          >\n                                            <QRCode\n                                              value={item.address}\n                                              size={200}\n                                            />\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </form>\n                                </td>\n                              </tr>\n                              <tr\n                                className=\"collapse withdraw_c\"\n                                id={\"withdraw_\" + item.symbol}\n                              >\n                                <td colSpan=\"6\">\n                                  <form>\n                                    <div className=\"row\">\n                                      <div\n                                        className=\"col-md-8\"\n                                        style={{ margin: \"0 auto\" }}\n                                      >\n                                        <div className=\"signupform-control\">\n                                          <div>\n                                            Transfer {item.name} from your{\" \"}\n                                            {webData.website_short_name}\n                                            Wallet to Another\n                                          </div>\n                                          <hr className=\"h_r\" />\n                                        </div>\n                                        <div className=\"signupform-control\">\n                                          <label htmlFor=\"coin_address\">\n                                            Volume\n                                          </label>\n                                          <label\n                                            htmlFor=\"coin_val\"\n                                            style={{\n                                              float: \"right\",\n                                              fontWeight: \"bold\",\n                                            }}\n                                          >\n                                            Available {item.symbol}:{\" \"}\n                                            {item.balance}\n                                          </label>\n                                          <input\n                                            type=\"text\"\n                                            className=\"input_button\"\n                                            value={item.volume}\n                                            maxLength={15}\n                                            onChange={(e) => {\n                                              setVolume(\n                                                e.target.value\n                                                  .replace(/[^0-9.]/g, \"\")\n                                                  .replace(/(\\..*?)\\..*/g, \"$1\")\n                                              );\n                                              setFinalAmount(\n                                                e.target.value\n                                                  .replace(/[^0-9.]/g, \"\")\n                                                  .replace(\n                                                    /(\\..*?)\\..*/g,\n                                                    \"$1\"\n                                                  ) - item.withdral_fee\n                                              );\n                                            }}\n                                          />\n                                        </div>\n                                        <div className=\"signupform-control\">\n                                          <label htmlFor=\"coin_address\">\n                                            Destination Address\n                                          </label>\n                                          <input\n                                            type=\"text\"\n                                            className=\"input_button\"\n                                            maxLength={60}\n                                            onChange={(e) =>\n                                              setToAddress(e.target.value)\n                                            }\n                                          />\n                                        </div>\n                                        <div className=\"signupform-control\">\n                                          <label htmlFor=\"coin_address\">\n                                            Withdrawal Fee\n                                          </label>\n                                          <input\n                                            type=\"text\"\n                                            className=\"input_button\"\n                                            value={item.withdral_fee}\n                                            readOnly\n                                          />\n                                        </div>\n                                        {/* <div className=\"signupform-control\">\n                                        <label htmlFor=\"coin_address\">\n                                          Final Valume\n                                        </label>\n                                        <input\n                                          type=\"text\"\n                                          className=\"input_button\"\n                                          value={famount >= 0 ? famount : \"0\"}\n                                          maxLength={15}\n                                        />\n                                      </div> */}\n                                        <div className=\"signupform-control\">\n                                          <label htmlFor=\"coin_address\">\n                                            Remark\n                                          </label>\n                                          <input\n                                            type=\"text\"\n                                            className=\"input_button\"\n                                            value={remark}\n                                            maxLength={60}\n                                            onChange={(e) =>\n                                              setRemark(e.target.value)\n                                            }\n                                          />\n                                        </div>\n                                        <div className=\"signupform-control\">\n                                          <button\n                                            type=\"button\"\n                                            className=\"btn btn-danger\"\n                                            onClick={() => {\n                                              setWithLoading(true);\n                                              N_crypto_withdraw(\n                                                user?.params\n                                                  ? user.params.user_id\n                                                  : user.user_id,\n                                                item.symbol,\n                                                item.address,\n                                                to_address,\n                                                volume,\n                                                remark\n                                              ).then((d) => {\n                                                setWithLoading(false);\n                                                if (d.status == 200) {\n                                                  showpopup(true);\n                                                  otpCountdown();\n                                                  setTransectionId(\n                                                    d.params.transection_id\n                                                  );\n                                                  console.log(\"wr2: \", d);\n                                                  setStatus(!status);\n                                                  NotificationManager.success(\n                                                    d.message\n                                                  );\n                                                } else {\n                                                  NotificationManager.error(\n                                                    d.message\n                                                  );\n                                                }\n                                              });\n                                            }}\n                                          >\n                                            {withLoading ? (\n                                              <span className=\"loading-icon fas fa-spinner fa-spin mr-2\"></span>\n                                            ) : (\n                                              \"PROCEED WITH WITHDRAWAL\"\n                                            )}\n                                          </button>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </form>\n                                </td>\n                              </tr>\n                            </>\n                          ) : null}\n                        </>\n                      ))\n                    ) : (\n                      \"\"\n                    )}\n                  </tbody>\n                </table>\n              ) : activeTab == 1 ? (\n                <table className=\"table table-border no-margin mdfthemetxt \">\n                  <thead>\n                    <tr className=\"bg-pale-dark\">\n                      <th>ASSET</th>\n                      <th>TYPE</th>\n                      <th>Transfered To</th>\n                      <th>Transaction Hash</th>\n                      <th>VOLUME</th>\n                      <th>STATUS</th>\n                      <th>TIME</th>\n                    </tr>\n                  </thead>\n                  {history ? (\n                    <tbody>\n                      {loading ? (\n                        <tr className=\"my-5\">\n                          <td colSpan={8}>\n                            <FullLoader />\n                          </td>\n                        </tr>\n                      ) : history ? (\n                        history.map((d, index) => (\n                          <tr key={index * 5}>\n                            <td>{d.symbol}</td>\n                            <td>{d.type}</td>\n                            <td>{d.to_address}</td>\n                            <td><a href={`https://bscscan.com/tx/${d.tx_id}`} target=\"_blank\" className=\"text-truncate\">{d.tx_id}</a></td>\n                            <td>{d ? Number(d.amount).toFixed(4) : 0}</td>\n                            <td>\n                              {d.status == 1\n                                ? \"Success\"\n                                : d.status == -2\n                                ? \"Cancel\"\n                                : \"Pending\"}\n                            </td>\n                            <td>{new Date(d.createdAt).toLocaleString()}</td>\n                          </tr>\n                        ))\n                      ) : null}\n                    </tbody>\n                  ) : null}\n                </table>\n              ) : (\n                <table className=\"table table-border no-margin mdfthemetxt \">\n                  <thead>\n                    <tr className=\"bg-pale-dark\">\n                      <th>ASSET</th>\n                      <th>TYPE</th>\n                      <th>VOLUME</th>\n                      <th>TDS (1%)</th>\n                      <th>USDT (1% TDS)</th>\n                      <th>Total USDT</th>\n                      <th>TIME</th>\n                    </tr>\n                  </thead>\n                  {btxxHistory ? (\n                    <tbody>\n                      {loading ? (\n                        <tr className=\"my-5\">\n                          <td colSpan={8}>\n                            <FullLoader />\n                          </td>\n                        </tr>\n                      ) : btxxHistory ? (\n                        btxxHistory.map((d, index) => (\n                          <tr key={index * 5}>\n                            <td>{d.currency_type}</td>\n                            <td>Sell</td>\n                            <td>{d ? Number(d.volume).toFixed(4) : 0}</td>\n                            {/* <td>\n                              {d.status == 1\n                                ? \"Success\"\n                                : d.status == -2\n                                  ? \"Cancel\"\n                                  : \"Pending\"}\n                            </td> */}\n                            <td>{d.tds}</td>\n                            <td>{d.after_tds}</td>\n                            <td>{d.usdt_return}</td>\n                            <td>{new Date(d.createdAt).toLocaleString()}</td>\n                          </tr>\n                        ))\n                      ) : null}\n                    </tbody>\n                  ) : null}\n                </table>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/TwoFA.jsx",["592","593","594","595","596","597"],"import React, { useState, useEffect } from \"react\";\nimport ProfileSidebar from \"./components/ProfileSidebar\";\nimport Header from \"./ftx_design/Header\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport $ from \"jquery\";\nimport { user_logout } from \"./redux/actions/authActions\";\n\nimport {\n  N_setGoogleAuth,\n  N_get_settings,\n  N_checkMobileStatus,\n} from \"./redux/helpers/api_functions_new\";\nimport { NotificationManager } from \"react-notifications\";\nconst speakeasy = require(\"speakeasy-latest\");\nvar QRCode = require(\"qrcode\");\n\nexport default function TwoFA(props) {\n  const dispatch = useDispatch();\n  const { user } = useSelector((state) => state.AuthReducer);\n  const [authenticator, setAuthenticator] = useState(0);\n  const [mobile_auth, setMAuthenticator] = useState(0);\n  const [url, setUrl] = useState();\n  const [userSecret, setUserSecret] = useState();\n  const [temp_secret, setSecret] = useState([]);\n  const { webData } = useSelector((state) => state.websiteDBReducer);\n\n  useEffect(() => {\n    N_get_settings(user?.params ? user.params.user_id : user.user_id)\n      .then((d) => {\n        if (d.status === 200) {\n          setAuthenticator(d.params.authenticator_status);\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n\n    N_checkMobileStatus(user?.params ? user.params.user_id : user.user_id)\n      .then((d) => {\n        console.log(d.params.is_mobile);\n        if (d.status === 200 && d.params.is_mobile === 1) {\n          setMAuthenticator(1);\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  });\n\n  const generatSecret = () => {\n    var secret = speakeasy.generateSecret({ length: 20 });\n    setSecret(secret);\n    QRCode.toDataURL(secret.otpauth_url, function (err, data_url) {\n      setUrl(data_url);\n      setUserSecret(secret.base32);\n    });\n  };\n\n  const setAuthentication = (e, state, action) => {\n    e.preventDefault();\n    N_setGoogleAuth(\n      temp_secret,\n      state,\n      user?.params ? user.params.user_id : user.user_id\n    ).then((data) => {\n      if (data.status === 200) {\n        if (action === \"g\") {\n          $(\".modal-backdrop\").hide();\n          props.history.replace(\"/account_authenticator\");\n        } else {\n          NotificationManager.success(data.message);\n          window.location.reload();\n        }\n      } else {\n        NotificationManager.error(data.message);\n      }\n    });\n  };\n\n  return (\n    <div>\n      <Header {...props} />\n      <div className=\"row p-1 \" style={{ margin: 0, marginTop: \"5em\" }}>\n        <div className=\"col-12 col-md-3 col-lg-3 p-0\">\n          <ProfileSidebar {...props} />\n        </div>\n        <div\n          className=\"col-12 col-md-8 col-lg-8 p-0\"\n          style={{ marginTop: \"12px\" }}\n        >\n          <div className=\"p-2 theme-color my-sidebox-shadow\">\n            <div className=\"main-profile-pro d-flex align-items-center bb-1 h-25\">\n              <i className=\"fa fa-shield ml-2 mr-2 mt-2\" />\n              <h4 className=\"px-2 font-weight-bold pt-3\">\n                Two Factor Authentication\n              </h4>\n            </div>\n            <article>\n              <div className=\"\">\n                <label\n                  className=\"row m-0 d-flex align-items-center   bb-1 p-2\"\n                  style={{ height: \"50px\", cursor: \"pointer\" }}\n                >\n                  <div for=\"securityhigh\" className=\"col-4 p-2\">\n                    <div className=\"h6 p-0 m-0\">Authenticator App</div>\n                    <div className=\"h6 p-0 m-0 text-secondary\">\n                      Highly secure\n                    </div>\n                  </div>\n                  <div\n                    className=\"col-1 offset-7\"\n                    style={{ height: \"25px\", cursor: \"pointer\" }}\n                  >\n                    <input\n                      id=\"securityhigh\"\n                      type=\"radio\"\n                      className=\"form-check-input\"\n                      name=\"security\"\n                      checked={authenticator == 2}\n                      data-toggle=\"modal\"\n                      data-target=\"#modal2FA\"\n                      onClick={(e) => {\n                        generatSecret();\n                      }}\n                    />\n                  </div>\n                </label>\n              </div>\n\n              <div className=\"\">\n                <div\n                  className=\"row m-0 d-flex align-items-center   bb-1 p-2\"\n                  style={{ height: \"50px\", cursor: \"pointer\" }}\n                >\n                  <div className=\"col-4 p-2\">\n                    <div className=\"h6 p-0 m-0\">Mobile SMS</div>\n                    <div className=\"h6 p-0 m-0 text-secondary\">\n                      Moderately secure\n                    </div>\n                  </div>\n                  <div className=\"col-1 offset-7\" style={{ height: \"25px\" }}>\n                    <input\n                      type=\"radio\"\n                      className=\"form-check-input\"\n                      name=\"security\"\n                      checked={authenticator == 1}\n                      data-toggle=\"modal\"\n                      data-target=\"#modal2FAMobile\"\n                      onClick={() =>\n                        !mobile_auth\n                          ? props.history.push(\"/mobile-verify\")\n                          : null\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"\">\n                <div\n                  className=\"row m-0 d-flex align-items-center p-2\"\n                  style={{ height: \"50px\", cursor: \"pointer\" }}\n                >\n                  <div className=\"col-4 p-2\">\n                    <div className=\"h6 p-0 m-0\">None</div>\n                    <div className=\"h6 p-0 m-0 text-secondary\">not secure</div>\n                  </div>\n                  <div className=\"col-1 offset-7\" style={{ height: \"25px\" }}>\n                    <input\n                      type=\"radio\"\n                      className=\"form-check-input\"\n                      name=\"security\"\n                      checked={authenticator == 0}\n                      data-toggle=\"modal\"\n                      data-target=\"#modal2FAnone\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div\n                id=\"modal2FA\"\n                className={`modal fade ${webData.bg_color}`}\n                role=\"dialog\"\n              >\n                <div className=\"modal-dialog text-dark\">\n                  <div className=\"modal-content light-theme-color text-dark\">\n                    <form>\n                      <div className=\"modal-header\">\n                        <h3 id=\"msg\">Google Authentication</h3>\n                        <button\n                          type=\"button\"\n                          className=\"close\"\n                          data-dismiss=\"modal\"\n                        >\n                          &times;\n                        </button>\n                      </div>\n                      <div className=\"modal-body\">\n                        <div className=\"form-group center\">\n                          <img src={url} />\n                        </div>\n                        <div className=\"form-group center\">{userSecret}</div>\n                      </div>\n                      <div className=\"modal-footer\">\n                        <button\n                          type=\"submit\"\n                          className=\"btn btn-success\"\n                          onClick={(e) => {\n                            setAuthentication(e, 0, \"g\");\n                          }}\n                        >\n                          <i\n                            className=\"loading-icon fas fa-spinner fa-spin\"\n                            id=\"loader\"\n                            style={{ display: \"none\" }}\n                          ></i>\n                          Yes\n                        </button>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-default\"\n                          data-dismiss=\"modal\"\n                        >\n                          Close\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n              <div\n                id=\"modal2FAMobile\"\n                className={`modal fade ${webData.bg_color}`}\n                role=\"dialog\"\n              >\n                <div className=\"modal-dialog text-dark\">\n                  <div className=\"modal-content light-theme-color text-dark\">\n                    <form>\n                      <div className=\"modal-header\">\n                        <h3 id=\"msg\">Mobile Authentication</h3>\n                        <button\n                          type=\"button\"\n                          className=\"close text-secondary\"\n                          data-dismiss=\"modal\"\n                        >\n                          &times;\n                        </button>\n                      </div>\n                      <div className=\"modal-body center\">\n                        Are you sure to Mobile Authenticator?\n                      </div>\n                      <div className=\"modal-footer\">\n                        <button\n                          type=\"submit\"\n                          className=\"btn btn-success\"\n                          onClick={(e) => {\n                            setAuthentication(e, 1);\n                          }}\n                        >\n                          <i\n                            className=\"loading-icon fas fa-spinner fa-spin\"\n                            id=\"loader\"\n                            style={{ display: \"none\" }}\n                          ></i>\n                          Yes\n                        </button>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-default\"\n                          data-dismiss=\"modal\"\n                        >\n                          Close\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n              <div\n                id=\"modal2FAnone\"\n                className={`modal fade ${webData.bg_color}`}\n                role=\"dialog\"\n              >\n                <div className=\"modal-dialog text-dark\">\n                  <div className=\"modal-content light-theme-color text-dark\">\n                    <form>\n                      <div className=\"modal-header\">\n                        <h3 id=\"msg\">Authentication</h3>\n                        <button\n                          type=\"button\"\n                          className=\"close\"\n                          data-dismiss=\"modal\"\n                        >\n                          &times;\n                        </button>\n                      </div>\n                      <div className=\"modal-body center\">\n                        Are you sure Disabled Authenticator?\n                      </div>\n                      <div className=\"modal-footer\">\n                        <button\n                          type=\"submit\"\n                          className=\"btn btn-success\"\n                          onClick={(e) => {\n                            setAuthentication(e, 0);\n                          }}\n                        >\n                          <i\n                            className=\"loading-icon fas fa-spinner fa-spin\"\n                            id=\"loader\"\n                            style={{ display: \"none\" }}\n                          ></i>\n                          Yes\n                        </button>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-default\"\n                          data-dismiss=\"modal\"\n                        >\n                          Close\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </article>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Exchange.jsx",["598","599","600","601","602","603","604","605","606","607"],"import React, { useEffect } from \"react\";\n\nimport ExSide from \"./components/ExSide\";\nimport OrdersTab from \"./components/Orders.tab\";\n// import CandleGraph from \"./components/CandleGraph\";\nimport CandleStick from \"./CandleStick\"\nimport BuyNSell from \"./components/BuyNSell\";\nimport Preloader from \"./components/PreLoader\";\nimport TradeTab from \"./Trade.Tab\";\nimport OrderSystemTab from \"./Order.system.tab\";\n//import \"./exchange.css\";\nimport \"./exchange_new.css\";\nimport { useSelector } from \"react-redux\";\nimport Footer from \"./HomeComp/Footer\";\nimport NewsLater from \"./components/NewsLater\";\nimport { Helmet, helmet } from \"react-helmet\";\nimport Header from \"./ftx_design/Header\";\n\nexport default function Exchange(props) {\n  const { webData } = useSelector((state) => state.websiteDBReducer);\n  var b;\n  const {\n    coins_loading,\n    wallet_loading,\n    pending_order_loading,\n    close_order_loading,\n    user_fav_loading,\n    coins,\n  } = useSelector((state) => state.coinDBReducer);\n  const { isLoggedIn } = useSelector((state) => state.AuthReducer);\n  const [loading, setLoading] = React.useState(true);\n  //if (!props?.match?.params?.id) props.history.replace(\"/exchange/btc-inr\");\n  useEffect(() => {\n    let match = 1;\n    const browser_currency_pair = props?.match?.params?.id.split(\"-\");\n    let vll = Object.values(coins);\n    console.log(\"coins\", coins);\n    if (vll.length) {\n      console.log(\"vll: \", vll, browser_currency_pair);\n      vll.forEach((item) => {\n        //console.log(item, \"item\");\n        b = item.current_price_inr;\n        // console.log(\"checking\",item.current_price_inr);\n        if (item.symbol === browser_currency_pair[0].toUpperCase()) {\n          if (browser_currency_pair[1].toUpperCase() !== \"INR\") {\n            vll.forEach((it) => {\n              if (it.symbol === browser_currency_pair[1].toUpperCase()) {\n                match = 0;\n              }\n            });\n          } else {\n            match = 0;\n          }\n        }\n      });\n      if (match === 1) {\n        props.history.replace(\"/exchange/btc-inr\");\n      }\n      // if (!coins) {\n      //   let nurl = vll[0]\n      //     ? vll[0].symbol + \"-\" + vll[0]?.pairing_currency\n      //     : \"btc-inr\";\n      //   props.history.replace(\"/exchange/btc-inr\");\n      // }\n      if (isLoggedIn) {\n        if (\n          coins_loading == false &&\n          wallet_loading == false &&\n          pending_order_loading == false &&\n          close_order_loading == false &&\n          user_fav_loading == false\n        )\n          document.title =\n            props?.match?.params?.id?.toUpperCase() +\n            \" \" +\n            webData.website_title +\n            \" Exchange\";\n        setLoading(false);\n      } else {\n        if (coins_loading == false) setLoading(false);\n      }\n    }\n  }, [coins_loading, wallet_loading, coins.length, user_fav_loading]);\n\n  return (\n    <>\n      {/* <HeaderNew {...props} /> */}\n      <Header {...props} />\n\n      <NewsLater />\n\n      {loading ? (\n        <Preloader />\n      ) : (\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-12  col-md-3 col-lg-2 p-1\">\n              <ExSide {...props} />\n            </div>\n\n            <div className=\"col-12 col-md-7 col-lg-7 p-1\">\n              {/* <CandleGraph {...props} /> */}\n\n              <CandleStick />\n\n              <div className=\"row\" style={{ margin: \"5px -2px\" }}>\n                <div className=\"col-12 col-lg-8 col-md-8 px-1\">\n                  <OrderSystemTab {...props} />\n                </div>\n                <div className=\"col-12 col-lg-4 col-md-4 px-1 overflow-hidden\">\n                  <TradeTab {...props} />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-12 col-md-3 col-lg-3 p-1\">\n              <div>\n                <OrdersTab {...props} />\n              </div>\n              <div style={{ marginTop: \"10px\" }}>\n                <BuyNSell {...props} />\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      <Footer />\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/PrivacyControl.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Reports.jsx",["608","609","610"],"import React, { useState } from \"react\";\nimport ProfileSidebar from \"./components/ProfileSidebar\";\nimport Header from \"./ftx_design/Header\";\nimport { useSelector } from \"react-redux\";\nimport ReactDatePicker from \"react-datepicker\";\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { NotificationManager } from \"react-notifications\";\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel'\n\nexport default function Reports(props) {\n  const { webData } = useSelector((state) => state.websiteDBReducer);\n  const { close_order_loading, user_order_close } = useSelector(\n    (state) => state.coinDBReducer\n  );\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState(new Date());\n  const [all_report, allReport] = useState();\n  const [downloadb, downloadB] = useState(0);\n\n\n  const downloadReport = () => {\n    console.log(\"user_order_close\", user_order_close);\n    console.log(startDate,endDate);\n    if(close_order_loading == false) {\n      // let raw = {\n      //   user_id : user_id,\n      //   start_date : startDate,\n      //   end_date : endDate,\n      // }\n      allReport(user_order_close);\n        downloadB(1);\n      // getUserTradeHistory(\"get\",\"user_trade_history\",raw).then((data) => {\n      //   console.log(\"data \", data);\n      //     allReport(data);\n      //     downloadB(1);\n      //     NotificationManager.info(\"Report fetch successfull. Now you can Download the report.\");\n          \n      // })\n    } else {\n      NotificationManager.info(\"Report Not Ready\");\n    }\n   \n    \n  }\n\n  return (\n    <div>\n      <Header {...props} />\n      <div className=\"row p-1 \" style={{ margin: 0, marginTop: \"5em\" }}>\n        <div className=\"col-12 col-md-3 col-lg-3 p-0\">\n          <ProfileSidebar {...props} />\n        </div>\n        <div\n          className=\"col-12 col-md-8 col-lg-8 p-0\"\n          style={{ marginTop: \"12px\" }}\n        >\n          <div className={`${webData.bg_color}` + \" p-2 my-sidebox-shadow\"} style={{ backgroundColor: webData.bg_color_code, }}>\n            <div className=\"main-profile-pro d-flex align-items-center bb-1 h-25\">\n            <i className=\"fa fa-file ml-2 mr-2 mt-2\"/>\n              <h4 className=\"px-2 font-weight-bold pt-3\">User Reports</h4>\n            </div>\n            <article>\n              <div className=\"col-md-10 sanfont\">\n                  <div className=\"bold mb-2 \">Get your trading report on your email. </div>\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"bold\">Select Start Date </div>\n                    <ReactDatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\n                  </div>\n                  <div className=\"col-md-4 mb-2\">\n                    <div className=\"bold\">Select End Date </div>\n                    <ReactDatePicker selected={endDate} onChange={(date) => setEndDate(date)} />\n                  </div>\n                  <div className=\"text-secondary\">The report will include: </div>\n                  <ul className=\"text-secondary mb-2\">\n                      <li className=\"ml-3\"><i className=\"fa fa-minus mr-1\" aria-hidden=\"true\"></i>  Exchange Trades</li>\n                      <li className=\"ml-3\"><i className=\"fa fa-minus mr-1\" aria-hidden=\"true\"></i> P2P Trades</li>\n                      <li className=\"ml-3\"><i className=\"fa fa-minus mr-1\" aria-hidden=\"true\"></i> STF Trades</li>\n                      <li className=\"ml-3\"><i className=\"fa fa-minus mr-1\" aria-hidden=\"true\"></i> Current Coin Balance</li>\n                      <li className=\"ml-3\"><i className=\"fa fa-minus mr-1\" aria-hidden=\"true\"></i> Deposit and Withdrawals</li>\n                      <li className=\"ml-3\"><i className=\"fa fa-minus mr-1\" aria-hidden=\"true\"></i> Ledger History</li>\n                      <li className=\"ml-3\"><i className=\"fa fa-minus mr-1\" aria-hidden=\"true\"></i> Airdrops and other distributions</li>\n                  </ul>\n                    <button className=\"btn btn-success mt-2 mb-2 bold mr-3\" onClick={(e) => {downloadReport()}}> Get Report</button>\n                    {downloadb == 1 ? (\n                      <>\n                        <ReactHTMLTableToExcel id=\"test-table-xls-button\" className=\"download-table-xls-button btn btn-secondary mt-2 mb-2 bold\" table=\"table-to-xls\" filename=\"tablexls\" sheet=\"tablexls\" buttonText=\"Download Trading Report\" />\n                      \n                      </>\n                    ) : ''}\n                </div>\n                  <div className=\"\">\n                    <table id=\"table-to-xls\" className=\"h\">\n                        <tr>\n                            <th>#</th>\n                            <th>Price</th>\n                            <th>Volume</th>\n                            <th>Currency</th>\n                            <th>Date</th>\n                        </tr>\n                        {all_report ? all_report.map((item,i) => (\n                          <>\n                            <tr>\n                              <td>{++i}</td>\n                              <td>{item.raw_price}</td>\n                              <td>{item.volume}</td>\n                              <td>{item.currency_type}/{item.compare_currency}</td>\n                              <td>{new Date(Number(item.timestamp)).toLocaleString()}</td>\n                            </tr>\n                          </>\n                        )):null}\n                    </table>\n                  </div>\n            </article>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Notification.jsx",["611","612"],"import React, { useEffect, useState } from \"react\";\nimport ProfileSidebar from \"./components/ProfileSidebar\";\nimport Header from \"./ftx_design/Header\";\nimport { useSelector } from \"react-redux\";\nimport { N_getNotification } from \"./redux/helpers/api_functions_new\";\n\nexport default function GetNotifi(props) {\n  const [getallnoti, getAllNoti] = useState(0);\n  const { user } = useSelector((state) => state.AuthReducer);\n  useEffect(() => {\n    N_getNotification(user?.params ? user.params.user_id : user.user_id).then(\n      (data) => {\n        if (data.status === 200) getAllNoti(data.params.notification);\n      }\n    );\n  }, []);\n  return (\n    <div>\n      <Header {...props} />\n      <div className=\"row p-1 \" style={{ margin: 0, marginTop: \"5em\" }}>\n        <div className=\"col-12 col-md-3 col-lg-3 p-0\">\n          <ProfileSidebar {...props} />\n        </div>\n        <div\n          className=\"col-12 col-md-8 col-lg-8 p-0\"\n          style={{ marginTop: \"12px\" }}\n        >\n          <div className=\"p-2 theme-color my-sidebox-shadow\">\n            <div className=\"main-profile-pro d-flex align-items-center bb-1 h-25\">\n              <i className=\"fa fa-bell ml-2 mr-2 mt-2\" />\n              <h4 className=\"px-2 font-weight-bold pt-3\">Notifications</h4>\n            </div>\n            <article>\n              {getallnoti == 0 ? (\n                <>\n                  <h2 className=\"m-2\">No any Notification.</h2>\n                </>\n              ) : (\n                <>\n                  <div className=\"col-md-12\">\n                    <table className=\"table table-hover table-bordered mdfthemetxt\">\n                      <thead className=\"light-theme-color\">\n                        <tr>\n                          <th className=\"tdCenter\">No.</th>\n                          <th className=\"tdCenter\">Area</th>\n                          <th className=\"tdCenter\">MSG</th>\n                          <th className=\"tdCenter\">Date</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {getallnoti\n                          ? getallnoti.map((item, i) => (\n                              <>\n                                <tr>\n                                  <td className=\"tdCenter\">{++i}</td>\n                                  <td className=\"tdCenter\">{item.name}</td>\n                                  <td className=\"tdCenter\"> {item.msg} </td>\n                                  <td className=\"tdCenter\"> {new Date(item.createdAt).toLocaleString()} </td>\n                                </tr>\n                              </>\n                            ))\n                          : null}\n                      </tbody>\n                    </table>\n                  </div>\n                </>\n              )}\n            </article>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Welcome.jsx",["613","614","615","616","617"],"import React, { useState, useEffect } from \"react\";\nimport Header from \"./ftx_design/Header\";\nimport {  isName } from \"./redux/helpers/form-validator.functions\";\nimport { submitKyc } from \"./redux/actions/authActions\";\n\nimport FullLoader from \"./components/FullLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  N_checkKYCStatus,\n  N_getCity,\n  N_getCountry,\n  N_getState,\n} from \"./redux/helpers/api_functions_new\";\n\nexport default function Welcome(props) {\n  const dispatch = useDispatch();\n  const { isLoggedIn, user } = useSelector((state) => state.AuthReducer);\n  const [loading, setLoading] = useState();\n  const [fullloading, setFullLoader] = useState(true);\n  const [countryData, setCountry] = useState();\n  const [stateData, setState] = useState();\n  const [cityData, setCity] = useState();\n  const [type_of_kyc, setTypeofKyc] = useState(\"Individual\");\n  const [fname, setFname] = useState();\n  const [mname, setMname] = useState();\n  const [lname, setLname] = useState();\n  const [dob, setDob] = useState();\n  const [address, setAddress] = useState();\n  const [pincode, setPincode] = useState();\n  const [visibl, setVisiblity] = useState(\"vis\");\n  if (!isLoggedIn) props.history.replace(\"/login\");\n  else if (user.kyc === 1) props.history.replace(\"/exchage/btc-inr\");\n  const backKyc = () => {\n    props.history.push(\"/exchange/btc-inr\");\n  };\n\n  const comp_btn = (event) => {\n    const kyc_btn = event.target.parentElement;\n    kyc_btn.className = \"signupform-control h\";\n    setVisiblity(\"vis\");\n  };\n  function changeCountry(event) {\n    N_getState(\n      event.target.value,\n      user?.params ? user.params.user_id : user.user_id\n    )\n      .then((res) => {\n        if (res.status === 200) {\n          // console.log(\"resofcountry: \",res);\n          // setCity();\n          setState(res.params.country_data);\n          changeState(\"country\");\n        }\n      })\n      .catch((e) => {\n        console.log(\"con erer:\", e);\n      });\n  }\n\n  function changeState(event) {\n    if (event == \"country\") {\n      N_getCity(\n        document.getElementById(\"country\").value,\n        document.getElementById(\"state\").value,\n        user?.params ? user.params.user_id : user.user_id\n      )\n        .then((res) => {\n          if (res.status === 200) {\n            // console.log(\"resofcountry: \",res);\n            setCity(res.params.country_data);\n          }\n        })\n        .catch((e) => {\n          console.log(\"con erer:\", e);\n        });\n    } else {\n      N_getCity(\n        document.getElementById(\"country\").value,\n        event.target.value,\n        user?.params ? user.params.user_id : user.user_id\n      )\n        .then((res) => {\n          if (res.status === 200) {\n            // console.log(\"resofcountry: \",res);\n            setCity(res.params.country_data);\n          }\n        })\n        .catch((e) => {\n          console.log(\"con erer:\", e);\n        });\n    }\n  }\n\n  useEffect(() => {\n    N_checkKYCStatus(user?.params ? user.params.user_id : user.user_id).then(\n      (d) => {\n        if (d.status === 200) {\n          if (d.params.kyc_status === 1)\n            // console.log(\"kst; \", d);\n            props.history.replace(\"/exchange/btc-inr\");\n        }\n        setFullLoader(false);\n      }\n    );\n    N_getCountry(user?.params ? user.params.user_id : user.user_id)\n      .then((res) => {\n        if (res.status === 200) {\n          // console.log(\"resofcountry: \",res);\n          setCountry(res.params.country_data);\n        }\n      })\n      .catch((e) => {\n        console.log(\"con erer:\", e);\n      });\n\n    N_getState(\"India\", user?.params ? user.params.user_id : user.user_id)\n      .then((res) => {\n        if (res.status === 200) {\n          // console.log(\"resofstate: \",res);\n          setState(res.params.country_data);\n        }\n      })\n      .catch((e) => {\n        console.log(\"erer:\", e);\n      });\n    N_getCity(\n      \"India\",\n      \"Andaman and Nicobar Islands\",\n      user?.params ? user.params.user_id : user.user_id\n    )\n      .then((res) => {\n        if (res.status === 200) {\n          // console.log(\"resofcity: \",res);\n          setCity(res.params.country_data);\n        }\n      })\n      .catch((e) => {\n        console.log(\"erer:\", e);\n      });\n  }, []);\n\n  const submit = (e) => {\n    e.preventDefault();\n    const body = {\n      type_of_kyc: type_of_kyc,\n      fname: fname ? fname : \"\",\n      mname: mname ? mname : \"\",\n      lname: lname ? lname : \"\",\n      dob: dob ? dob : \"\",\n      address: address,\n      country: document.getElementById(\"country\").value,\n      state: document.getElementById(\"state\").value,\n      city: document.getElementById(\"city\").value,\n      pincode: pincode ? pincode : \"\",\n      user_id: user?.params ? user.params.user_id : user.user_id,\n    };\n    console.log(body);\n    setLoading(true);\n    dispatch(\n      submitKyc(\n        body,\n        () => {\n          setLoading(false);\n          props.history.replace(\"/kyc\");\n        },\n        () => setLoading(false)\n      )\n    );\n  };\n  if (fullloading)\n    return (\n      <>\n        <Header {...props} />\n        <FullLoader />\n      </>\n    );\n  else\n    return (\n      <>\n        <Header {...props} />\n        <div className=\"signupContainer mdfthemetxt \">\n          <div className=\"security_header shead-bg\">\n            <div className=\"security_head\">\n              <div className=\"sec_circle bg_check_circle shead-circle\">\n                <i className=\"fas fa-check-circle\"></i>\n                <span color=\"#ffffff\" className=\"email_span\">\n                  Email\n                </span>\n              </div>\n              <div className=\"sec_circle bg_check_circle shead-circle\">\n                <i className=\"fas fa-check-circle\"></i>\n                <span color=\"#ffffff\" className=\"email_span\">\n                  Security\n                </span>\n              </div>\n              <div className=\"sec_circle bg_circle shead-circle\">\n                <i className=\"fas fa-dot-circle\"></i>\n                <span color=\"#ffffff\" className=\"email_span\">\n                  Welcome\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"container shead-bg mt-5\">\n            <div className=\"row\">\n              <div className=\"col-12 col-md-12 col-sm-12\">\n                <form\n                  className=\"signupform\"\n                  onSubmit={submit}\n                  method=\"post\"\n                  id=\"welcome_form\"\n                >\n                  <div className=\"signupform-control\">\n                    <small id=\"msg\" style={{ fontSize: \"15px\" }}>\n                      Error message\n                    </small>\n                  </div>\n                  <div>\n                    <h3>KYC</h3>\n                  </div>\n                  <div className=\"signupform-control\">\n                    <label htmlFor=\"type_of_kyc\">TYPE OF KYC</label>\n                    <select\n                      id=\"type_of_kyc\"\n                      className=\"form-control\"\n                      data-role=\"select-dropdown\"\n                      onChange={(e) => {\n                        setTypeofKyc(e.target.value);\n                      }}\n                    >\n                      <option value=\"Individual\">Individual</option>\n                      <option value=\"Corporate\">Corporate</option>\n                    </select>\n                  </div>\n                  <div id=\"personal_info\" className={visibl}>\n                    <div>\n                      <h3>PERSONAL INFO</h3>\n                    </div>\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"user_fname\">FIRST NAME *</label>\n                      <input\n                        type=\"text\"\n                        name=\"user_fname\"\n                        required=\"required\"\n                        onChange={(e) => {\n                          isName(e);\n                          setFname(e.target.value);\n                        }}\n                        className=\"signupform-control\"\n                        id=\"user_fname\"\n                      />\n                      <i className=\"fas fa-check-circle\"></i>\n                      <i className=\"fas fa-exclamation-circle\"></i>\n                      <small>Error message</small>\n                    </div>\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"user_mname\">MIDDLE NAME</label>\n                      <input\n                        type=\"text\"\n                        name=\"user_mname\"\n                        onChange={(e) => {\n                          isName(e);\n                          setMname(e.target.value);\n                        }}\n                        className=\"signupform-control\"\n                        id=\"user_mname\"\n                      />\n                      <i className=\"fas fa-check-circle\"></i>\n                      <i className=\"fas fa-exclamation-circle\"></i>\n                      <small>Error message</small>\n                    </div>\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"user_lname\">LAST NAME</label>\n                      <input\n                        type=\"text\"\n                        name=\"user_lname\"\n                        onChange={(e) => {\n                          isName(e);\n                          setLname(e.target.value);\n                        }}\n                        className=\"signupform-control\"\n                        id=\"user_lname\"\n                      />\n                      <i className=\"fas fa-check-circle\"></i>\n                      <i className=\"fas fa-exclamation-circle\"></i>\n                      <small>Error message</small>\n                    </div>\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"user_dob\">DATE OF BIRTH *</label>\n                      <input\n                        type=\"date\"\n                        name=\"user_dob\"\n                        id=\"user_dob\"\n                        required=\"required\"\n                        onChange={(e) => {\n                          setDob(e.target.value);\n                        }}\n                        className=\"signupform-control\"\n                        placeholder=\"DD-MM-YYYY\"\n                      />\n                      <i className=\"fas fa-check-circle\"></i>\n                      <i className=\"fas fa-exclamation-circle\"></i>\n                      <small>Error message</small>\n                    </div>\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"user_address\">Address *</label>\n                      <textarea\n                        className=\"form-control\"\n                        style={{\n                          border: \"2px solid #f0f0f0\",\n                          borderRadius: \"4px\",\n                        }}\n                        id=\"user_address\"\n                        required=\"required\"\n                        rows=\"3\"\n                        onChange={(e) => {\n                          setAddress(e.target.value);\n                        }}\n                      ></textarea>\n                    </div>\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"country\">COUNTRY *</label>\n                      <select\n                        id=\"country\"\n                        className=\"form-control\"\n                        onChange={(e) => {\n                          changeCountry(e);\n                        }}\n                        style={{\n                          border: \"2px solid #f0f0f0\",\n                          borderRadius: \"4px\",\n                        }}\n                        data-role=\"select-dropdown\"\n                      >\n                        {countryData\n                          ? countryData.map((country) => (\n                              <option\n                                value={country}\n                                selected={country == \"India\" ? \"selected\" : \"\"}\n                              >\n                                {country}\n                              </option>\n                            ))\n                          : \"\"}\n                      </select>\n                    </div>\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"state\">STATE *</label>\n                      <select\n                        id=\"state\"\n                        className=\"form-control\"\n                        onChange={(e) => {\n                          changeState(e);\n                        }}\n                        style={{\n                          border: \"2px solid #f0f0f0\",\n                          borderRadius: \"4px\",\n                        }}\n                        data-role=\"select-dropdown\"\n                      >\n                        {stateData\n                          ? stateData.map((state) => (\n                              <option value={state}>{state}</option>\n                            ))\n                          : \"\"}\n                      </select>\n                    </div>\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"country\">CITY *</label>\n                      <select\n                        id=\"city\"\n                        className=\"form-control\"\n                        style={{\n                          border: \"2px solid #f0f0f0\",\n                          borderRadius: \"4px\",\n                        }}\n                        data-role=\"select-dropdown\"\n                      >\n                        {cityData\n                          ? cityData?.map((city) => (\n                              <option value={city}>{city}</option>\n                            ))\n                          : \"\"}\n                      </select>\n                    </div>\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"user_pincode\">PINCODE *</label>\n                      <input\n                        type=\"text\"\n                        name=\"user_pincode\"\n                        required=\"required\"\n                        className=\"signupform-control\"\n                        id=\"user_pincode\"\n                        onChange={(e) => {\n                          setPincode(e.target.value);\n                        }}\n                      />\n                      <i className=\"fas fa-check-circle\"></i>\n                      <i className=\"fas fa-exclamation-circle\"></i>\n                      <small>Error message</small>\n                    </div>\n                    <input type=\"hidden\" name=\"session_id\" id=\"session_id\" />\n                    <button type=\"submit\" id=\"btn_submit\" className=\"reg_btn bg-success\">\n                      {loading ? (\n                        <i className=\"loading-icon fas fa-spinner fa-spin mr-2\"></i>\n                      ) : null}\n                      <span id=\"reg\"  >SUBMIT</span>\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/ActivityLog.jsx",["618","619","620"],"import React from \"react\";\nimport ProfileSidebar from \"./components/ProfileSidebar\";\nimport Header from \"./ftx_design/Header\";\nimport {  useSelector } from \"react-redux\";\nimport { N_getActivityReport } from \"./redux/helpers/api_functions_new\";\n\nexport default function ActivityLog(props) {\n  const [activitydata, renderActivityData] = React.useState([]);\n  const { user } = useSelector((state) => state.AuthReducer);\n  const { webData } = useSelector((state) => state.websiteDBReducer);\n  React.useEffect(() => {\n    N_getActivityReport(user?.params ? user.params.user_id : user.user_id).then(\n      (data) => {\n        console.log(\"AL:\",data);\n        renderActivityData(data.params.activity_log);\n      }\n    );\n  }, []);\n\n  return (\n    <div>\n      <Header {...props} />\n      <div className=\"row p-1 \" style={{ margin: 0, marginTop: \"5em\" }}>\n        <div className=\"col-12 col-md-3 col-lg-3 p-0\">\n          <ProfileSidebar />\n        </div>\n        <div\n          className=\"col-12 col-md-8 col-lg-8 p-0\"\n          style={{ marginTop: \"12px\" }}\n        >\n          <div\n            className={`${webData.bg_color} ` + \"p-2 my-sidebox-shadow\"}\n            style={{ backgroundColor: webData.bg_color_code }}\n          >\n            <div className=\"main-profile-pro d-flex align-items-center bb-1 h-25\">\n              <i class=\"fa fa-info ml-2 mr-2 mt-2\" />\n              <h4 className=\"px-2 font-weight-bold pt-3\">Activity Log</h4>\n            </div>\n            <article>\n              {activitydata == 0 ? (\n                <div class=\"row\">\n                  <div class=\"col-lg-8\">\n                    <div class=\"error-msg-wrapper\">\n                      <div class=\"error-msg\">\n                        <h2>Opps! No record found</h2>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n              {activitydata\n                ? activitydata.map((item) => (\n                    <div className=\"bb-1 p-2 mdfthemetxt\">\n                      <div className=\"row m-0 d-flex align-items-center   p-1 justify-content-between\">\n                        <div className=\"col-1\">\n                          <div className=\"h6 p-0 m-0\">Date</div>\n                        </div>\n                        <div className=\"col-4 h6 p-0 m-0 text-secondary\">\n                          {new Date(item.createdAt).toLocaleString()}\n                        </div>\n                      </div>\n                      <div className=\"row m-0 d-flex align-items-center    p-1 justify-content-between\">\n                        <div className=\"col-1\">\n                          <div className=\"h6 p-0 m-0\">IP</div>\n                        </div>\n                        <div className=\"col-4 h6 p-0 m-0 text-secondary\">\n                          {item.ip_address}\n                        </div>\n                      </div>\n                      <div className=\"row m-0 d-flex align-items-center  p-1 justify-content-between\">\n                        <div className=\"col-1\">\n                          <div className=\"h6 p-0 m-0\">Browser</div>\n                        </div>\n                        <div className=\"col-4 h6 p-0 m-0 text-secondary\">\n                          {item.browser_info}\n                        </div>\n                      </div>\n                      <div className=\"row m-0 d-flex align-items-center  p-1 justify-content-between\">\n                        <div className=\"col-1\">\n                          <div className=\"h6 p-0 m-0\">OS</div>\n                        </div>\n                        <div className=\"col-4 h6 p-0 m-0 text-secondary\">\n                          {item.sys_info}\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                : \"\"}\n            </article>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Cupon.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/UpcomingProgram.jsx",["621","622"],"import React from \"react\";\nimport ProfileSidebar from \"./components/ProfileSidebar\";\nimport Header from \"./ftx_design/Header\";\nimport { Link } from \"react-router-dom\";\n\nexport default function UpcomingProgram(props) {\n  return (\n    <div>\n      <Header {...props} />\n      <div className=\"row p-1 \" style={{ margin: 0, marginTop: \"5em\" }}>\n        <div className=\"col-12 col-md-3 col-lg-3 p-0\">\n          <ProfileSidebar {...props} />\n        </div>\n        <div\n          className=\"col-12 col-md-8 col-lg-8 p-0\"\n          style={{ marginTop: \"12px\" }}\n        >\n          <div className=\"p-2 theme-color my-sidebox-shadow\">\n            <div className=\"main-profile-pro d-flex align-items-center bb-1 h-25\">\n            <i className=\"fa fa-lock ml-2 mr-2 mt-2\"/>\n              <h4 className=\"px-2 font-weight-bold pt-3\">Program</h4>\n            </div>\n            <article style={{display: \"flex\",justifyContent: \"space-around\"}}>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <img className=\"card-img-top\" src=\"/theme/img/staking.jpg\" alt=\"Card image cap\" />\n                <Link to=\"/btexstaking\" className=\"btn btn-primary pull-right mt-2\">Staking</Link> \n              </div>\n            </div>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <img className=\"card-img-top\" src=\"/theme/img/airdrop.jpg\" alt=\"Card image cap\" />\n                <Link to=\"/referral\" className=\"btn btn-primary pull-right mt-2\">AirDrop</Link> \n              </div>\n            </div>\n            </article>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/UpdatePassword.jsx",["623","624","625","626","627","628"],"import React, { useState } from \"react\";\nimport Header from \"./ftx_design/Header\";\nimport \"./login.css\";\nimport { isCpass, isPass, setErrorFor1 } from \"./redux/helpers/form-validator.functions\";\nimport { password_update } from \"./redux/actions/authActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkPassword } from \"./redux/helpers/helper_functions\";\nimport NotificationManager from \"react-notifications/lib/NotificationManager\";\n\nexport default function Forget(props) {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState();\n  const [password, setPassword] = useState();\n  const [confPassword, setConfPassword] = useState();\n  const { otp_send, user } = useSelector((state) => state.AuthReducer);\n  if (!otp_send) props.history.push(\"/login\");\n\n  function validatePass() {\n    console.log(password, confPassword);\n    const obj = document.getElementById(\"cpass\");\n    const obj1 = document.getElementById(\"cpasserr\");\n    if (password.length == 0 || confPassword.length == 0) {\n      setErrorFor1(obj, obj1, \"Password cannot be blank\");\n      return false;\n    } else if(!checkPassword(password) || !checkPassword(confPassword)) {\n      setErrorFor1(obj, obj1, \"Not a valid password\");\n      return false;\n    } else if(password != confPassword) {\n      setErrorFor1(obj, obj1, \"Passwords does not match\");\n      return false;\n    }\n    return true;\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (validatePass()) {\n      setLoading(true);\n      dispatch(\n        password_update(\n          user?.params ? user.params.user_id : user.user_id,\n          password,\n          confPassword,\n          () => {\n            setLoading(false);\n            NotificationManager.success(\"Your password has been updated successfully.\");\n            props.history.replace(\"/login\");\n          },\n          () => setLoading(false)\n        )\n      );\n    }\n  };\n  return (\n    <>\n      <Header {...props} />\n      <div className=\"signupContainer mdfthemetxt\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12 col-md-12 col-sm-12\">\n              <form\n                className=\"signupform\"\n                method=\"post\"\n                id=\"signupform\"\n                onSubmit={onSubmit}\n              >\n                <div>\n                  <h2>Update Password</h2>\n                </div>\n                <div className=\"signupform-control\">\n                  <small id=\"msg\" style={{ fontSize: \"15px\" }}>\n                    Error message\n                  </small>\n                </div>\n                <div className={`signupform-control`}>\n                  <label htmlFor=\"user_password\">PASSWORD</label>\n                  <input\n                    type=\"password\"\n                    name=\"user_password\"\n                    required=\"\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    id=\"pass\"\n                    placeholder=\"password\"\n                  />\n                  <i className=\"fas fa-check-circle\"></i>\n                  <i className=\"fas fa-exclamation-circle\"></i>\n                  <p>\n                    Password must be contain atleast 1 Capital charcter , 1\n                    digit , 1 symbol and length should be greater than 8.\n                  </p>\n                  <small className=\"text-danger\" id=\"passerr\"></small>\n                </div>\n                <div className={`signupform-control`}>\n                  <label htmlFor=\"user_cpassword\">CONFIRM PASSWORD</label>\n                  <input\n                    type=\"password\"\n                    name=\"user_cpassword\"\n                    id=\"cpass\"\n                    required=\"\"\n                    value={confPassword}\n                    onChange={(e) => setConfPassword(e.target.value)}\n                    placeholder=\"confirm password\"\n                  />\n                  <i className=\"fas fa-check-circle\"></i>\n                  <i className=\"fas fa-exclamation-circle\"></i>\n                  <small className=\"text-danger\" id=\"cpasserr\"></small>\n                </div>\n                <button type=\"submit\" id=\"btn_submit\" className=\"btn btn-success btn-block\">\n                  <i className=\"loading-icon fas fa-spinner fa-spin h\"></i>\n                  <span id=\"reg\">Change</span>\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/UserKyc.jsx",["629","630","631"],"import React, { useEffect, useState } from \"react\";\nimport ProfileSidebar from \"./components/ProfileSidebar\";\nimport Header from \"./ftx_design/Header\";\nimport { useSelector } from \"react-redux\";\nimport Loader from \"./components/Loader\";\nimport {\n  N_checkKYCStatus,\n} from \"./redux/helpers/api_functions_new\";\nimport NotificationManager from \"react-notifications/lib/NotificationManager\";\nimport { GiMagnifyingGlass } from \"react-icons/gi\";\n\nexport default function UserKYC(props) {\n  const { user } = useSelector((state) => state.AuthReducer);\n  const [loading, setLoading] = React.useState(true);\n  const [kyc, setKyc] = React.useState();\n  const { webData } = useSelector((state) => state.websiteDBReducer);\n\n  useEffect(async () => {\n    N_checkKYCStatus(user?.params ? user.params.user_id : user.user_id)\n      .then((d) => {\n        if (d.status === 200) {\n          if (d.params.kyc_status === 1) {\n            setKyc(d.params.kyc_status);\n            setLoading(false);\n          } else if (d.params.kyc_status === -1) {\n            setKyc(d.params.kyc_status);\n            setLoading(false);\n          }\n          setLoading(false);\n        } else {\n          NotificationManager.error(d.message);\n        }\n      })\n      .catch((e) => console.log(e));\n  }, []);\n\n  return (\n    <>\n      <Header {...props} />\n      <div className=\"row p-1 \" style={{ margin: 0, marginTop: \"5em\" }}>\n        <div className=\"col-12 col-md-3 col-lg-3 p-0\">\n          <ProfileSidebar {...props} />\n        </div>\n        <div\n          className=\"col-12 col-md-8 col-lg-8 p-0\"\n          style={{ marginTop: \"12px\" }}\n        >\n          <div className=\"p-2 theme-color my-sidebox-shadow\">\n            <div className=\"main-profile-pro d-flex align-items-center bb-1 h-25\">\n              <i className=\"fa fa-book ml-2 mr-2 mt-2\" />\n              <h4 className=\"px-2 font-weight-bold pt-3\">KYC</h4>\n            </div>\n            <article>\n              {loading ? (\n                <Loader />\n              ) : kyc === 1 ? (\n                <div className=\"p-4\">\n                  <h5>\n                    Congratulations! Your {webData.website_title} account is\n                    approved.{\" \"}\n                  </h5>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-success\"\n                    onClick={() => props.history.push(\"/exchange/btc-inr\")}\n                  >\n                    Start Trading\n                  </button>\n                </div>\n              ) : kyc === -1 ? (\n                <div\n                  className=\"py-3 px-5 text-secondary d-flex align-content-center\"\n                  style={{ fontWeight: \"bold\", fontSize: \"14px\" }}\n                >\n                  <span className=\"text-info mx-2\" id=\"rv\">\n                    <GiMagnifyingGlass size={26} />\n                  </span>\n                  Your KYC is under Review. please for wait 72 hours.\n                </div>\n              ) : (\n                <div className=\"p-4\">\n                  <h4>Please Complete Your KYC and Start Trading .</h4>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-success\"\n                    onClick={() => props.history.push(\"/kyc-verify\")}\n                  >\n                    KYC\n                  </button>\n                </div>\n              )}\n            </article>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/InrDeposite.jsx",["632","633","634","635"],"import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { NotificationManager } from \"react-notifications\";\nimport { N_addBinficiary, N_getBank } from \"./redux/helpers/api_functions_new\";\n\nexport default function InrDeposite(props) {\n  const [loading, setLoading] = React.useState(true);\n  const [accountNo, setAccountNo] = React.useState();\n  const [reaccountNo, setReAccountNo] = React.useState();\n  const [account_name, setAccountName] = React.useState();\n  const [selectedBank, setSelectedBank] = React.useState();\n  const [bankIFCS, setIFSC] = React.useState([]);\n  const [banklist, setBank] = React.useState();\n  const [accountType, setAccountType] = React.useState();\n  const { user } = useSelector((state) => state.AuthReducer);\n  useEffect(() => {\n    N_getBank(user?.params ? user.params.user_id : user.user_id)\n      .then((d) => {\n        if (d.status === 200) {\n          setBank(d.params.bank);\n          setLoading(false);\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n        setLoading(false);\n      });\n  }, []);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (accountNo !== reaccountNo) {\n      NotificationManager.error(\"Account Number not matched!\");\n    } else {\n      if (accountNo == \"\" && bankIFCS == \"\") {\n        NotificationManager.error(\"Fill all field!\");\n      } else {\n        setLoading(true);\n        N_addBinficiary(\n          accountNo,\n          reaccountNo,\n          selectedBank,\n          account_name,\n          bankIFCS,\n          accountType,\n          user?.params ? user.params.user_id : user.user_id\n        ).then((d) => {\n          console.log(\"AddBenificiery\", d);\n          if (d.status == 200) {\n            window.location.reload();\n            NotificationManager.info(d.message);\n          } else {\n            NotificationManager.error(d.message);\n          }\n          setLoading(false);\n        });\n      }\n    }\n  };\n  return (\n    <>\n      {/* <Header {...props} /> */}\n      <div\n        className=\"\"\n        style={{\n          backgroundColor: \"#ffffff00\",\n          borderRadius: \"5px\",\n          boxShadow: \"0 2px 5px rgb(0 0 0 / 30%)\",\n          overflow: \"hidden\",\n          maxWidth: \"100%\",\n          position: \"relative\",\n          width: \"80%\",\n          margin: \"20px auto\",\n        }}\n      >\n        <div className=\"\">\n          <div className=\"row\">\n            <div className=\"col-12 col-md-12 col-sm-12\">\n              <form\n                className=\"signupform mdfthemetxt\"\n                method=\"post\"\n                id=\"loginForm\"\n                autoComplete=\"off\"\n                onSubmit={onSubmit}\n              >\n                <div>\n                  <h5>Add your bank account details for IMPS payments</h5>\n                </div>\n                <div className=\"form-group\">\n                  <label for=\"exampleInputEmail1\">ACCOUNT NUMBER</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Enter Account no\"\n                    value={accountNo}\n                    onChange={(e) =>\n                      setAccountNo(\n                        e.target.value\n                          .replace(/[^0-9.]/g, \"\")\n                          .replace(/(\\..*?)\\..*/g, \"$1\")\n                      )\n                    }\n                  />\n                  {/* <small id=\"emailHelp\" className=\"form-text text-muted\">\n                We'll never share your email with anyone else.\n              </small> */}\n                </div>\n\n                <div className=\"form-group\">\n                  <label for=\"exampleInputEmail1\">RE-ACCOUNT NUMBER</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Re-Enter Account no\"\n                    value={reaccountNo}\n                    onChange={(e) =>\n                      setReAccountNo(\n                        e.target.value\n                          .replace(/[^0-9.]/g, \"\")\n                          .replace(/(\\..*?)\\..*/g, \"$1\")\n                      )\n                    }\n                  />\n                  {/* <small id=\"emailHelp\" className=\"form-text text-muted\">\n                We'll never share your email with anyone else.\n              </small> */}\n                </div>\n                <div className=\"form-group\">\n                  <label for=\"exampleInputEmail1\">Account Holder Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Enter Account Name\"\n                    value={account_name}\n                    onChange={(e) => setAccountName(e.target.value)}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label for=\"exampleInputEmail1\">BANK NAME</label>\n                  <select\n                    className=\"form-control text-dark\"\n                    onChange={(e) => setSelectedBank(e.target.value)}\n                  >\n                    <option selected>Please Select</option>\n                    {banklist?.map((d) => (\n                      <option className=\"text-dark\">{d.bank_name}</option>\n                    ))}\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <label for=\"exampleInputEmail1\">ACCOUNT TYPE</label>\n                  <select\n                    className=\"form-control text-dark\"\n                    onChange={(e) => setAccountType(e.target.value)}\n                  >\n                    <option selected className=\"text-dark\">\n                      Please Select\n                    </option>\n                    <option className=\"text-dark\">Current</option>\n                    <option className=\"text-dark\">Saving</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <label for=\"exampleInputEmail1\">BANK IFSC</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Enter Bank IFSC\"\n                    value={bankIFCS}\n                    onChange={(e) => setIFSC(e.target.value)}\n                  />\n                </div>\n                <button type=\"submit\" className=\"reg_btn\">\n                  {loading ? (\n                    <i className=\"loading-icon fas fa-spinner fa-spin mr-2\"></i>\n                  ) : null}\n                  <span id=\"reg\">SUBMIT</span>\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/P2P.jsx",["636","637","638","639","640","641"],"import React, { useEffect } from \"react\";\nimport Header from \"./ftx_design/Header\";\nimport OrdersTab from \"./components/Orders.tab\";\nimport P2PBuyNSell from \"./components/p2pBuyNSell\";\nimport Preloader from './components/PreLoader';\nimport TradeTab from \"./Trade.Tab\";\nimport OrderSystemTab from \"./Order.system.tab\";\nimport StaticUSDPage from \"./components/StaticUSDPage\";\nimport \"./exchange.css\";\nimport { useSelector } from \"react-redux\";\nimport Footer from \"./components/Index-components/Footer\";\n\nexport default function P2P(props) {\n    \n  const {\n    coins_loading,\n    pending_order_loading,\n    close_order_loading,\n    coins,\n  } = useSelector((state) => state.coinDBReducer);\n  const { isLoggedIn } = useSelector((state) => state.AuthReducer);\n  const [loading, setLoading] = React.useState(true);\n  // const { webData } = useSelector((state) => state.websiteDBReducer);\n  useEffect(() => {\n    document.title = props?.match?.params?.id?.toUpperCase() + \" P2P\";\n    if (Object.values(coins).length) {\n       if (isLoggedIn) {\n        if (\n          coins_loading == false &&\n          pending_order_loading == false &&\n          close_order_loading == false \n        )\n          setLoading(false);\n      } else {\n        if (coins_loading == false) setLoading(false);\n      }\n    }\n  }, [\n    coins_loading,\n    pending_order_loading,\n    close_order_loading,\n    coins.length,\n  ]);\n  return (\n    <>\n      <Header {...props} />\n      {loading ? (\n        <Preloader />\n      ) : (\n        <div className=\"row p-3\" >\n            <div className=\"col-12 col-md-8 col-lg-8 p-1\">\n                <div className=\"row\" style={{ margin: \"5px -2px\" }}>\n                    <div className=\" col-12 col-lg-6 col-md-8 px-1\">\n                        <OrderSystemTab {...props} type=\"p2p\"/>\n                    </div>\n                    <div className= \"col-12 col-lg-6 col-md-4 px-1\">\n                        <TradeTab {...props} type=\"p2p\"/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-12 col-md-4 col-lg-4 p-1\">\n                <div className=\"row\" style={{ margin: \"-5px -2px\" }}>\n                    <div className=\" col-12 col-lg-12 col-md-12 \">\n                      <StaticUSDPage {...props} />\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-sm-12 col-md-4\">\n                <div className=\"row\">\n                    <div className= \" col col-lg col-md \">\n                        <OrdersTab {...props} type=\"p2p\"/>\n                    </div>\n                    {/* <div className=\"col-12 col-lg-6 col-md-4 px-1\">\n                      \n                    </div> */}\n                </div>\n            </div>\n            <div className=\"col-12 col-md-4 \">\n                <div className=\"row\" >\n                    <div className= \" col-12 col-md-12  \">\n                      <P2PBuyNSell {...props} type=\"p2p\"/>\n                    </div>\n                </div>\n            </div>\n        </div>\n      )}\n      {/* <Footer /> */}\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/MobileVerification.jsx",["642","643","644","645"],"import React, { useState, useEffect } from \"react\";\nimport Header from \"./ftx_design/Header\";\nimport FullLoader from \"./components/FullLoader\";\nimport { useSelector } from \"react-redux\";\nimport \"./login.css\";\nimport { NotificationManager } from \"react-notifications\";\nimport {\n  N_checkMobileStatus,\n  N_sendOTPMobile,\n  N_verifyOTPMobile,\n} from \"./redux/helpers/api_functions_new\";\nexport default function MobileVerification(props) {\n  const { isLoggedIn } = useSelector((state) => state.AuthReducer);\n  const { user } = useSelector((state) => state.AuthReducer);\n  const [mobile, setMobile] = useState();\n  const [disable, setDisable] = useState(true);\n  const [disableSend, setDisableSend] = React.useState(false);\n  const [fullScreenLoader, setFullScreenLoader] = React.useState(true);\n  const [loading, setLoading] = useState(false);\n  const [otploader, setOtpLoader] = useState(false);\n  const [isOtpSend, setOtpSend] = useState(false);\n  const [otp, setOTP] = useState();\n  const [ctime, setctime] = useState(\"01:00\");\n\n  if (!isLoggedIn) props.history.replace(\"/login\");\n\n  useEffect(() => {\n    N_checkMobileStatus(user?.params ? user.params.user_id : user.user_id)\n      .then((d) => {\n        if (d.status === 200 && d.params.is_mobile === 1) {\n          props.history.replace(\"/exchange/btc-inr\");\n        }\n        setFullScreenLoader(false);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, []);\n\n  const renderer = ({ hours, minutes, seconds, completed }) => {\n    if (completed) {\n      // Render a complete state\n      setDisableSend(false);\n      return <></>;\n    } else {\n      // Render a countdown\n      setDisableSend(true);\n      return (\n        <span className=\"text-success text-right h5\">\n          0{minutes}:{seconds}\n        </span>\n      );\n    }\n  };\n\n  const otpCountdown = () => {\n    let duration = 60;\n    // const display = document.getElementById(\"#timer\");\n    let timer = duration,\n      minutes,\n      seconds;\n    const tint = setInterval(function () {\n      minutes = parseInt(timer / 60, 10);\n      seconds = parseInt(timer % 60, 10);\n\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n      setctime(minutes + \":\" + seconds);\n\n      if (--timer < 0) {\n        // timer = duration;\n        clearInterval(tint);\n        setOtpSend(false);\n      }\n    }, 1000);\n  };\n\n  if (fullScreenLoader) return <FullLoader />;\n  else\n    return (\n      <>\n        <Header {...props} />\n        <div className=\"signupContainer\">\n          <div className=\"container shead-bg\">\n            <div className=\"row\">\n              <div className=\"col-12 col-md-12 col-sm-12\">\n                <form\n                  className=\"signupform theme-color-text\"\n                  method=\"post\"\n                  onSubmit={(e) => e.preventDefault()}\n                  id=\"loginForm\"\n                  autoComplete=\"off\"\n                >\n                  <div>\n                    <h2 className=\"g_color\">Verify Your Mobile Number</h2>\n                  </div>\n                  <div className={`signupform-control`}>\n                    <small id=\"msg\" style={{ fontSize: \"15px\" }}>\n                      Error Message\n                    </small>\n                  </div>\n                  <div className=\"signupform-control g_color\">\n                    <label htmlFor=\"user_mobile\">Mobile Number:</label>\n                    <div className=\"input-group\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"user_mobile\"\n                        value={mobile}\n                        maxLength={10}\n                        onChange={(e) =>\n                          setMobile(\n                            e.target.value\n                              .replace(/[^0-9.]/g, \"\")\n                              .replace(/(\\..*?)\\..*/g, \"$1\")\n                          )\n                        }\n                        placeholder=\"Enter your 10 digit mobile number\"\n                      />\n                      <div className=\"input-group-append\">\n                        {!isOtpSend ? (\n                          <button\n                            className=\"btn bg-transparent btn-outline-light text-info\"\n                            type=\"button\"\n                            disabled={disableSend}\n                            onClick={() => {\n                              if (mobile?.length === 10) {\n                                setOtpLoader(true);\n                                N_sendOTPMobile(\n                                  user?.params\n                                    ? user.params.user_id\n                                    : user.user_id,\n                                  mobile\n                                ).then((d) => {\n                                  if (d.status == 200) {\n                                    NotificationManager.success(d.message);\n                                    setDisable(false);\n                                    setOtpSend(true);\n                                    otpCountdown();\n                                  } else {\n                                    NotificationManager.error(d.message);\n                                  }\n                                  setOtpLoader(false);\n                                });\n                              } else {\n                                NotificationManager.error(\n                                  \"Please Enter valid Mobile number\"\n                                );\n                              }\n                            }}\n                            id=\"button-addon2\"\n                          >\n                            {otploader ? (\n                              <span className=\"loading-icon fas fa-spinner fa-spin mr-2\"></span>\n                            ) : (\n                              \"Send\"\n                            )}\n                          </button>\n                        ) : (\n                          <button\n                            type=\"button\"\n                            id=\"button-addon2\"\n                            className=\"btn btn-outline-info btn-outline-light text-info\"\n                          >\n                            {isOtpSend ? ctime : null}\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className={`signupform-control g_color`}>\n                    <label htmlFor=\"user_otp\">OTP</label>\n                    <input\n                      type=\"text\"\n                      name=\"user_otp\"\n                      id=\"otp\"\n                      className=\"bg-white\"\n                      maxLength={6}\n                      disabled={disable}\n                      value={otp}\n                      onChange={(e) =>\n                        setOTP(\n                          e.target.value\n                            .replace(/[^0-9.]/g, \"\")\n                            .replace(/(\\..*?)\\..*/g, \"$1\")\n                        )\n                      }\n                      required=\"\"\n                      placeholder=\"Enter 6 digit otp\"\n                    />\n                    <i className=\"fas fa-check-circle\"></i>\n                    <i className=\"fas fa-exclamation-circle\"></i>\n                    <small></small>\n                  </div>\n                  <button\n                    type=\"submit\"\n                    className=\"reg_btn btn-theme-color\"\n                    onClick={() => {\n                      if (!isNaN(otp) && otp?.length === 6) {\n                        setLoading(true);\n                        N_verifyOTPMobile(\n                          user?.params ? user.params.user_id : user.user_id,\n                          otp\n                        ).then((d) => {\n                          \n                          setLoading(false);\n                          if (d?.status == 200) {\n                            props.history.push(\"/kyc-verify\");\n                          } else {\n                            NotificationManager.error(d.message);\n                          }\n                        });\n                      } else {\n                        NotificationManager.error(\"invalid Otp !\");\n                      }\n                    }}\n                  >\n                    {loading ? (\n                      <i className=\"loading-icon fas fa-spinner fa-spin mr-2\"></i>\n                    ) : null}\n                    <span id=\"reg\">Verify OTP</span>\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/AffiliateScreen.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Authenticator.jsx",["646","647"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./login.css\";\nimport { isOtp } from \"./redux/helpers/form-validator.functions\";\nimport { NotificationManager } from \"react-notifications\";\nimport { Link } from \"react-router-dom\";\nimport { N_verifyOTPMobileLogin } from \"./redux/helpers/api_functions_new\";\nimport { user_Login } from \"./redux/actions/authActions\";\nexport default function Authenticator(props) {\n  const { otp_send, user } = useSelector((state) => state.AuthReducer);\n  const dispatch = useDispatch();\n  const [otp, setOTP] = useState();\n  const [loading, setLoading] = useState(false);\n  if (!otp_send) props.history.push(\"/login\");\n  const submit = (e) => {\n    e.preventDefault();\n    if (isOtp(otp)) {\n      setLoading(true);\n      if (user.authenticator === 1) {\n        N_verifyOTPMobileLogin(user.email, otp).then((d) => {\n          setLoading(false);\n          if (d?.status == 200) {\n            dispatch(\n              user_Login(\n                user.email,\n                user.password,\n                () => {\n                  setLoading(false);\n                  props.history.replace(\"/exchange/btc-inr\");\n                },\n                () => setLoading(false)\n              )\n            );\n          } else {\n            NotificationManager.error(d.msg);\n          }\n        });\n      } else if (user.authenticator === 2) {\n        var speakeasy = require(\"speakeasy-latest\");\n        try {\n          const { base32: secret } = user.authenticator_key;\n          var tokenValidates = speakeasy.totp.verify({\n            secret: secret,\n            encoding: \"base32\",\n            token: otp,\n            window: 6,\n          });\n          if (tokenValidates) {\n            dispatch(\n              user_Login(\n                user.email,\n                user.password,\n                () => {\n                  setLoading(false);\n                  props.history.replace(\"/exchange/btc-inr\");\n                },\n                () => setLoading(false)\n              )\n            );\n          } else {\n            console.log(tokenValidates, otp, secret);\n            NotificationManager.error(\"Somthing Wrong!!\");\n            setLoading(false);\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    } else {\n      NotificationManager.error(\"OTP is Not Correct\");\n    }\n  };\n  return (\n    <>\n      <div className=\"signupContainer\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12 col-md-12 col-sm-12\">\n              <form\n                className=\"signupform mdfthemetxt\"\n                method=\"post\"\n                onSubmit={submit}\n                id=\"loginForm\"\n                autoComplete=\"off\"\n              >\n                <div>\n                  <h2 className=\"text-dark\">\n                    Verify Your{\" \"}\n                    {user.authenticator === 1\n                      ? \"Mobile Authentication\"\n                      : \"Google Authentication\"}\n                  </h2>\n                </div>\n                <div className={`signupform-control`}>\n                  <label htmlFor=\"user_otp\">OTP</label>\n                  <input\n                    type=\"text\"\n                    name=\"user_otp\"\n                    id=\"user_otp\"\n                    maxLength={6}\n                    value={otp}\n                    onChange={(e) =>\n                      setOTP(\n                        e.target.value\n                          .replace(/[^0-9.]/g, \"\")\n                          .replace(/(\\..*?)\\..*/g, \"$1\")\n                      )\n                    }\n                    required=\"\"\n                    placeholder=\"Enter 6 digit otp\"\n                  />\n                  <i className=\"fas fa-check-circle\"></i>\n                  <i className=\"fas fa-exclamation-circle\"></i>\n                  <small></small>\n                </div>\n                <button type=\"submit\" className=\"reg_btn\">\n                  {loading ? (\n                    <i className=\"loading-icon fas fa-spinner fa-spin mr-2\"></i>\n                  ) : null}\n                  <span id=\"reg\">Verify OTP</span>\n                </button>\n                <Link className=\"signupform-login\" to=\"/login\">\n                  Back\n                </Link>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Success.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Notice.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/BuySell.jsx",["648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672"],"import Header from \"./ftx_design/Header\";\nimport Footer from \"./HomeComp/Footer\";\nimport \"./buySell.css\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getFormData } from \"../helpers\";\nimport { NotificationManager } from \"react-notifications\";\n\nexport default function BuySell() {\n  const { isLoggedIn, user } = useSelector((state) => state.AuthReducer);\n  const [selectedCurrency, setSelectedCurrency] = useState();\n  const [selectedWallet, setSelectedWallet] = useState({});\n  const [selectedAction, setSelectedAction] = useState(\"sell\");\n  const [sellAmount, setSellAmount] = useState(0);\n  const [isSelling, setIsSelling] = useState(false);\n  const [btxxWallet, setBtxxWallet] = useState({});\n  const [usdtWallet, setUsdtWallet] = useState({});\n  const [atPrice, setAtPrice] = useState(0);\n  const [amount, setAmount] = useState(0);\n  const coin = [];\n  const { webData } = useSelector((state) => state.websiteDBReducer);\n  const rupeeToUsd = 0.013;\n  const currencies = {\n    BTXX: {\n      icon: \"btxx_sm.png\",\n    },\n  };\n\n  const [wallets, setWallets] = useState([]);\n\n  async function getWallets() {\n    axios\n      //.post(\"https://getwallet.btexapi.cloud/api/get-wallets\", {\n      .post(\"https://api.bitflash.finance/api/get-wallets\", {\n        user_id: user.user_id,\n      })\n      .then((res) => {\n        const w = res.data.params.wallets.filter((i) => i.symbol == \"BTXX\");\n        setWallets([...w]);\n        setBtxxWallet(w[0]);\n        setUsdtWallet({\n          ...res.data.params.wallets.filter((i) => i.symbol == \"USDT\")[0],\n        });\n        //console.log(\"Wallet Data :: \", res.data);\n      })\n      .catch((error) => {\n        console.log(\"BTXX sell :: \", error.message);\n      });\n  }\n\n  async function sellCurrency(e) {\n    e.preventDefault();\n    const formData = getFormData(e.target);\n    //console.log(formData);\n    if (isNaN(formData.sell_amount)) {\n      NotificationManager.error(\"Please enter valid amount\");\n    } else {\n      setIsSelling(true);\n      axios\n        .post(\"https://btexapi.cloud/api/direct-sell\", formData)\n        .then((res) => {\n          setIsSelling(false);\n          const resData = res.data;\n          if (resData.status == 200) {\n            e.target.reset();\n            NotificationManager.success(resData.message);\n            getWallets();\n          } else {\n            NotificationManager.error(resData.message);\n          }\n        })\n        .catch((error) => {\n          setIsSelling(false);\n          NotificationManager.error(\"Something went worong\");\n          console.log(\"BTXX sell :: \", error.message);\n        });\n    }\n  }\n\n  function buySellToken() {\n    if (isNaN(sellAmount)) {\n      NotificationManager.error(\"Please enter valid amount\");\n    } else {\n      let url =\n        selectedAction == \"sell\"\n          ? \"https://api.bitflash.finance/api/direct-sell\"\n          : \"https://api.bitflash.finance/api/direct-buy\";\n      const params = {\n        user_id: user.user_id,\n      };\n      if (selectedAction == \"sell\") {\n        params.sell_token = selectedCurrency;\n        params.sell_amount = sellAmount;\n      } else if (selectedAction == \"buy\") {\n        params.buy_token = selectedCurrency;\n        params.buy_amount = sellAmount;\n      }\n      setIsSelling(true);\n      console.log(\"Params :: \", params);\n      axios\n        .post(url, params)\n        .then((res) => {\n          setIsSelling(false);\n          const resData = res.data;\n          if (resData.status == 200) {\n            //e.target.reset();\n            window.location.reload();\n            NotificationManager.success(resData.message);\n            getWallets();\n          } else {\n            NotificationManager.error(resData.message);\n          }\n        })\n        .catch((error) => {\n          setIsSelling(false);\n          NotificationManager.error(\"Something went worong\");\n          console.log(\"BTXX sell :: \", error.message);\n        });\n    }\n  }\n\n  useEffect(() => {\n    //console.log(webData.direct_btxx_buy, webData.direct_btxx_sell);\n    setAtPrice(\n      selectedAction == \"sell\"\n        ? webData.direct_btxx_sel * rupeeToUsd\n        : webData.direct_btxx_buy * rupeeToUsd\n    );\n  }, [selectedAction]);\n\n  useEffect(() => {\n    getWallets();\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <div className=\"container-fluid\" style={{ minHeight: \"70vh\" }}>\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 col-xl-4 offset-xl-4\">\n            <form onSubmit={(e) => sellCurrency(e)}>\n              <input type=\"hidden\" name=\"user_id\" value={user.user_id} />\n              <div className=\"buy-sell card card-body text-dark text-center mt-4 p-5\">\n                <h1 className=\"text-dark h2 mb-3 text-left\">Buy / Sell</h1>\n\n                {/* <div className=\"\">\n                  <div\n                    className=\"form-radio-check flex-grow-1 border p-2 mx-0\"\n                    style={{ borderRadius: \"10px\" }}\n                  >\n                    <input\n                      className=\"form-radio-check-input\"\n                      type=\"radio\"\n                      id=\"inlineRadio1\"\n                      value=\"buy\"\n                      name=\"action\"\n                      onChange={(e)=>{setSelectedAction(e.target.value)}}\n                    />\n                    <label\n                      className=\"form-radio-check-label h5\"\n                      for=\"inlineRadio1\"\n                    >\n                      Buy\n                    </label>\n                  </div>\n                  <div\n                    className=\"rcontainer form-radio-check flex-grow-1 border p-2 mx-0\"\n                    style={{ borderRadius: \"10px\" }}\n                  >\n                    <input\n                      className=\"form-radio-check-input\"\n                      checked\n                      type=\"radio\"\n                      id=\"inlineRadio2\"\n                      value=\"sell\"\n                      name=\"action\"\n                      onChange={(e)=>{setSelectedAction(e.target.value)}}\n                    />\n                    <label\n                      className=\"form-radio-check-label h5\"\n                      for=\"inlineRadio2\"\n                    >\n                      Sell\n                    </label>\n                  </div>\n                 \n                </div> */}\n\n                <div class=\"form-floating mb-3\">\n                  <select\n                    class=\"form-select\"\n                    id=\"floatingSelect\"\n                    aria-label=\"Floating label select example\"\n                    style={{ borderRadius: \"10px\" }}\n                    onChange={(e) => {\n                      setSelectedCurrency(e.target.value);\n                      setSelectedWallet(\n                        wallets.filter((i) => i.symbol == e.target.value)[0]\n                      );\n                      setSellAmount(selectedWallet.balance);\n                    }}\n                    name=\"sell_token\"\n                  >\n                    <option value=\"\" selected disabled>\n                      Select Currency\n                    </option>\n                    {wallets.map((wallet, index) => (\n                      <option\n                        key={index}\n                        value={wallet.symbol}\n                      >{`${wallet.name} (${wallet.symbol})`}</option>\n                    ))}\n                  </select>\n                  <label for=\"floatingSelect\" className=\"fw-bold\">\n                    {selectedCurrency && (\n                      <img\n                        src={\n                          currencies?.[selectedCurrency]?.icon\n                            ? `/image/${currencies?.[selectedCurrency]?.icon}`\n                            : selectedWallet.icon\n                        }\n                        className=\"me-2\"\n                      />\n                    )}\n                    <span>\n                      {selectedWallet?.name\n                        ? selectedWallet.name\n                        : \"Select Currency\"}\n                    </span>\n                  </label>\n                </div>\n                <div className=\"mb-3\">\n                  <div class=\"form-floating\">\n                    <input\n                      type=\"number\"\n                      class=\"form-control\"\n                      id=\"floatingInput\"\n                      placeholder={`${selectedWallet.symbol} Amount`}\n                      value={sellAmount}\n                      style={{ borderRadius: \"10px\" }}\n                      onChange={(e) => {\n                        setSellAmount(e.target.value);\n                      }}\n                      name=\"sell_amount\"\n                      readOnly={\n                        Object.entries(selectedWallet).length == 0 ||\n                        selectedWallet.balance <= 0\n                      }\n                    />\n                    <label for=\"floatingInput\" className=\"fw-bold\">\n                      {selectedWallet.symbol} Amount\n                    </label>\n                  </div>\n                  {selectedAction == \"buy\" ? (\n                    <div className=\"text-start\">\n                      <small className=\"fw-bold text-success\">\n                        {isNaN(sellAmount * (rupeeToUsd * webData.direct_btxx_buy)) ? 0 : (sellAmount * (rupeeToUsd * webData.direct_btxx_buy))} {usdtWallet.symbol} Needed\n                      </small>\n                    </div>\n                  ) : null}\n                </div>\n\n                {/* Buy Sell dropdown */}\n                <div className=\"\">\n                  {/* <div\n                    className=\"form-radio-check flex-grow-1 border p-2 mx-0\"\n                    style={{ borderRadius: \"10px\" }}\n                  >\n                    <input\n                      className=\"form-radio-check-input\"\n                      type=\"radio\"\n                      id=\"inlineRadio1\"\n                      value=\"buy\"\n                      name=\"action\"\n                      onChange={(e)=>{setSelectedAction(e.target.value)}}\n                    />\n                    <label\n                      className=\"form-radio-check-label h5\"\n                      for=\"inlineRadio1\"\n                    >\n                      Buy\n                    </label>\n                  </div>\n                  <div\n                    className=\"rcontainer form-radio-check flex-grow-1 border p-2 mx-0\"\n                    style={{ borderRadius: \"10px\" }}\n                  >\n                    <input\n                      className=\"form-radio-check-input\"\n                      checked\n                      type=\"radio\"\n                      id=\"inlineRadio2\"\n                      value=\"sell\"\n                      name=\"action\"\n                      onChange={(e)=>{setSelectedAction(e.target.value)}}\n                    />\n                    <label\n                      className=\"form-radio-check-label h5\"\n                      for=\"inlineRadio2\"\n                    >\n                      Sell\n                    </label>\n                  </div> */}\n                  <div class=\"form-floating mb-3\">\n                    <select\n                      class=\"form-select\"\n                      id=\"floatingSelect\"\n                      aria-label=\"Floating label select example\"\n                      style={{ borderRadius: \"10px\" }}\n                      onChange={(e) => {\n                        console.log(e.target.value);\n                        setSelectedAction(e.target.value);\n                      }}\n                      name=\"action\"\n                    >\n                      <option value=\"sell\" selected={selectedAction == \"sell\"}>\n                        Sell {selectedWallet.symbol}\n                      </option>\n                      <option value=\"buy\" selected={selectedAction == \"buy\"}>\n                        Buy {selectedWallet.symbol}\n                      </option>\n                    </select>\n                    <label for=\"floatingSelect\" className=\"fw-bold\">\n                      <span>Buy OR Sell</span>\n                    </label>\n                  </div>\n                </div>\n\n                {/* <div class=\"row\">\n                <div class=\"col-12 mb-4\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"currency\"\n                    placeholder=\"Enter Quantity (BTXX)\"\n                  />\n                </div>\n                <div class=\"col-12 mb-4\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"inputPassword\"\n                    placeholder=\"Enter Amount (USDT)\"\n                  />\n                </div>\n              </div> */}\n\n                {/* <div className=\"buySell-percentage d-flex align-item-center justify-content-around mb-4\">\n                  <div className=\"form-radio-check w-25 mr-2\">\n                    <input\n                      className=\"form-radio-check-input\"\n                      type=\"radio\"\n                      id=\"inlineRadio-1\"\n                      name=\"sell_per\"\n                      value=\"25\"\n                      onChange={() => {\n                        console.log(\"Hello\");\n\n                        const am = selectedAction == \"sell\" ? (selectedWallet.balance * 25) / 100 : ((usdtWallet.balance * 25) / 100) * rupeeToUsd;\n                        //console.log(selectedWallet.balance);\n                        setSellAmount(am);\n                      }}\n                      disabled={\n                        Object.entries(selectedWallet).length == 0 ||\n                        selectedWallet.balance <= 0\n                      }\n                    />\n                    <label\n                      className=\"form-radio-check-label btn btn-block border border-primary\"\n                      for=\"inlineRadio-1\"\n                    >\n                      25%\n                    </label>\n                  </div>\n                  <div className=\"form-radio-check w-25 mr-2\">\n                    <input\n                      className=\"form-radio-check-input\"\n                      type=\"radio\"\n                      id=\"inlineRadio-2\"\n                      name=\"sell_per\"\n                      value=\"50\"\n                      onChange={() => {\n                        const am = selectedAction == \"sell\" ? (selectedWallet.balance * 50) / 100 : ((usdtWallet.balance * 50) / 100) * rupeeToUsd;\n                        //console.log(selectedWallet.balance);\n                        setSellAmount(am);\n                      }}\n                      disabled={\n                        Object.entries(selectedWallet).length == 0 ||\n                        selectedWallet.balance <= 0\n                      }\n                    />\n                    <label\n                      className=\"form-radio-check-label btn btn-block border border-primary\"\n                      for=\"inlineRadio-2\"\n                    >\n                      50%\n                    </label>\n                  </div>\n                  <div className=\"form-radio-check w-25 mr-2\">\n                    <input\n                      className=\"form-radio-check-input\"\n                      type=\"radio\"\n                      id=\"inlineRadio-3\"\n                      name=\"sell_per\"\n                      value=\"75\"\n                      onChange={() => {\n                        const am = selectedAction == \"sell\" ? (selectedWallet.balance * 75) / 100 : ((usdtWallet.balance * 75) / 100) * rupeeToUsd;\n                        //console.log(selectedWallet.balance);\n                        setSellAmount(am);\n                      }}\n                      disabled={\n                        Object.entries(selectedWallet).length == 0 ||\n                        selectedWallet.balance <= 0\n                      }\n                    />\n                    <label\n                      className=\"form-radio-check-label btn btn-block border border-primary\"\n                      for=\"inlineRadio-3\"\n                    >\n                      75%\n                    </label>\n                  </div>\n                  <div className=\"form-radio-check w-25\">\n                    <input\n                      className=\"form-radio-check-input\"\n                      type=\"radio\"\n                      id=\"inlineRadio-4\"\n                      name=\"sell_per\"\n                      value=\"100\"\n                      onChange={() => {\n                        const am = selectedAction == \"sell\" ? (selectedWallet.balance * 100) / 100 : ((usdtWallet.balance * 100) / 100) * rupeeToUsd;\n                        //console.log(selectedWallet.balance);\n                        setSellAmount(am);\n                      }}\n                      disabled={\n                        Object.entries(selectedWallet).length == 0 ||\n                        selectedWallet.balance <= 0\n                      }\n                    />\n                    <label\n                      className=\"form-radio-check-label btn btn-block border border-primary\"\n                      for=\"inlineRadio-4\"\n                    >\n                      100%\n                    </label>\n                  </div>\n                </div> */}\n\n                <div className=\"balance h6 mb-4\">\n                  Available Balance{\" \"}\n                  {selectedAction == \"sell\" ? (\n                    <span>\n                      {\" \"}\n                      {selectedWallet.symbol}\n                      <strong className=\"text-primary mx-2\">\n                        {selectedWallet.balance <= 0\n                          ? \"No Balance\"\n                          : selectedWallet.balance}\n                      </strong>\n                    </span>\n                  ) : (\n                    <span>\n                      {\" \"}\n                      {usdtWallet.symbol}\n                      <strong className=\"text-primary mx-2\">\n                        {usdtWallet.balance <= 0\n                          ? \"No Balance\"\n                          : usdtWallet.balance}{\" \"}\n                        - {isNaN(sellAmount * (rupeeToUsd * webData.direct_btxx_buy)) ? 0 : (sellAmount * (rupeeToUsd * webData.direct_btxx_buy))} ={\" \"}\n                        {Number(usdtWallet.balance) -\n                          (isNaN(sellAmount * (rupeeToUsd * webData.direct_btxx_buy)) ? 0 : (sellAmount * (rupeeToUsd * webData.direct_btxx_buy)))}\n                      </strong>\n                    </span>\n                  )}\n                </div>\n                {/* <div className=\"min-trade h6 mb-4\">Min Trade : <strong>$ 400</strong></div> */}\n\n                <div className=\"d-flex justify-content-end\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-success btn-lg fw-bold btn-block py-3\"\n                    style={{ borderRadius: \"10px\" }}\n                    disabled={\n                      Object.entries(selectedWallet).length == 0 ||\n                      selectedWallet.balance <= 0\n                    }\n                    data-bs-toggle=\"modal\"\n                    data-bs-target={\n                      selectedAction == \"sell\" ? \"#TDSIntro\" : \"#confirmBuy\"\n                    }\n                  >\n                    {isSelling ? (\n                      <>\n                        <span\n                          class=\"spinner-grow spinner-grow-sm\"\n                          role=\"status\"\n                          aria-hidden=\"true\"\n                        ></span>\n                        <span className=\"ms-2\">\n                          {selectedAction == \"sell\" ? \"Selling\" : \"Buying\"}{\" \"}\n                          {selectedWallet.symbol}...\n                        </span>\n                      </>\n                    ) : (\n                      <span>\n                        <span className=\"text-capitalize\">\n                          {selectedAction}\n                        </span>{\" \"}\n                        {selectedWallet.symbol}\n                      </span>\n                    )}\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <Footer />\n\n      {/* ConfirmSell Modal */}\n      <div\n        class=\"modal fade\"\n        id=\"confirmSell\"\n        data-bs-backdrop=\"static\"\n        data-bs-keyboard=\"false\"\n        tabindex=\"-1\"\n        aria-labelledby=\"confirmSellLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog modal-dialog-centered\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"confirmSellLabel\">\n                Confirm Sell\n              </h5>\n            </div>\n            <div class=\"modal-body\">\n              <div className=\"d-flex justify-content-between py-2\">\n                <div>At Price : </div>\n                <div>\n                  <strong>{atPrice}</strong>\n                </div>\n              </div>\n              <div className=\"d-flex justify-content-between py-2\">\n                <div>Amount : </div>\n                <div>\n                  <strong>\n                    {sellAmount}{\" \"}\n                    <span className=\"text-uppercase\">{selectedCurrency}</span>\n                  </strong>\n                </div>\n              </div>\n              <div className=\"d-flex justify-content-between py-2\">\n                <div>Total : </div>\n                <div>\n                  <strong>{sellAmount * atPrice}</strong>\n                </div>\n              </div>\n              <div className=\"d-flex justify-content-between py-2\">\n                <div>Total after TDS (1%) : </div>\n                <div>\n                  <strong>\n                    {sellAmount * atPrice - (sellAmount * atPrice) / 100}\n                  </strong>\n                </div>\n              </div>\n              <div className=\"m-0\">\n                Fee: Maker fee: 0.1% Taker fee: 0.1% TDS: 1%\n              </div>\n            </div>\n            <div class=\"modal-footer border-0 d-flex justify-content-center\">\n              <div className=\"flex-grow-1\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-danger w-100\"\n                  data-bs-dismiss=\"modal\"\n                >\n                  Cancel\n                </button>\n              </div>\n              <div className=\"flex-grow-1\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-success w-100\"\n                  data-bs-dismiss=\"modal\"\n                  onClick={() => {\n                    if (isLoggedIn) {\n                      buySellToken();\n                    } else {\n                      NotificationManager.error(\n                        \"First login then perform buy/sell\"\n                      );\n                    }\n                  }}\n                >\n                  Confirm Sell\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* TDS Intro Modal */}\n      <div\n        class=\"modal fade\"\n        id=\"TDSIntro\"\n        data-bs-backdrop=\"static\"\n        data-bs-keyboard=\"false\"\n        tabindex=\"-1\"\n        aria-labelledby=\"TDSIntroLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog modal-dialog-centered\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"TDSIntroLabel\">\n                TDS On Crypto Trades\n              </h5>\n              {/* <button\n                type=\"button\"\n                class=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              ></button> */}\n            </div>\n            <div class=\"modal-body\">\n              <p className=\"text-light\">\n                From 1 July 2022, TDS (Tax Deducted at Source) of 1% (5% in\n                exceptional cases) of the trade value will be deducted on each\n                trade as per the Government's guidelines issued on Virtual\n                Digital Asset (VDA) transfers. This TDS can be claimed while\n                filing your ITR.\n              </p>\n              <a href=\"\">Know more..</a>\n            </div>\n            <div class=\"modal-footer border-0 d-flex justify-content-center\">\n              <div className=\"flex-grow-1\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-success w-100\"\n                  data-bs-target=\"#confirmSell\"\n                  data-bs-toggle=\"modal\"\n                >\n                  GOT IT\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* ConfirmBuy Modal */}\n      <div\n        class=\"modal fade\"\n        id=\"confirmBuy\"\n        data-bs-backdrop=\"static\"\n        data-bs-keyboard=\"false\"\n        tabindex=\"-1\"\n        aria-labelledby=\"confirmBuyLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog modal-dialog-centered\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"confirmBuyLabel\">\n                Confirm Buy\n              </h5>\n              {/* <button\n                type=\"button\"\n                class=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              ></button> */}\n            </div>\n            <div class=\"modal-body\">\n              <div className=\"d-flex justify-content-between py-2\">\n                <div>At Price : </div>\n                <div>\n                  <strong>{atPrice}</strong>\n                </div>\n              </div>\n              <div className=\"d-flex justify-content-between py-2\">\n                <div>Amount : </div>\n                <div>\n                  <strong>\n                    {sellAmount}{\" \"}\n                    <span className=\"text-uppercase\">{selectedCurrency}</span>\n                  </strong>\n                </div>\n              </div>\n              <div className=\"d-flex justify-content-between py-2\">\n                <div>Total : </div>\n                <div>\n                  <strong>{sellAmount * atPrice}</strong>\n                </div>\n              </div>\n              <div className=\"m-0\">Fee: Maker fee: 0.1% Taker fee: 0.1%</div>\n            </div>\n            <div class=\"modal-footer border-0 d-flex justify-content-center\">\n              <div className=\"flex-grow-1\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-danger w-100\"\n                  data-bs-dismiss=\"modal\"\n                >\n                  Cancel\n                </button>\n              </div>\n              <div className=\"flex-grow-1\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-success w-100\"\n                  data-bs-dismiss=\"modal\"\n                  onClick={() => {\n                    if (isLoggedIn) {\n                      buySellToken();\n                    } else {\n                      NotificationManager.error(\n                        \"First login then perform buy/sell\"\n                      );\n                    }\n                  }}\n                >\n                  Confirm Buy\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/KYCVerification.jsx",["673","674","675","676","677","678","679"],"import React, { useState, useEffect } from \"react\";\nimport Header from \"./ftx_design/Header\";\nimport FullLoader from \"./components/FullLoader\";\nimport { useSelector } from \"react-redux\";\nimport \"./login.css\";\nimport { NotificationManager } from \"react-notifications\";\nimport {\n  N_checkKYCStatus,\n  N_panVerify,\n  N_sendAADHAROTPMobile,\n  N_verifyAADHAROTPMobile,\n} from \"./redux/helpers/api_functions_new\";\nimport { Link } from \"react-router-dom\";\nexport default function KYCVerification(props) {\n  const { isLoggedIn } = useSelector((state) => state.AuthReducer);\n  const { user } = useSelector((state) => state.AuthReducer);\n  const [mobile, setMobile] = useState();\n  const [aadhar_no, setAadharNo] = useState();\n  const [type_of_kyc, setTypeofKyc] = useState(\"Individual\");\n  const [client_id, setClientId] = useState();\n  const [disable, setDisable] = useState(true);\n  const [visibl, setVisiblity] = useState(\"h\");\n  const [disableSend, setDisableSend] = useState(false);\n  const [fullScreenLoader, setFullScreenLoader] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [otploader, setOtpLoader] = useState(false);\n  const [isverifypan, isVerifyPan] = useState(false);\n  const [isOtpSend, setOtpSend] = useState(false);\n  const [aadharVerify, setAadharVerify] = useState(false);\n  const [otp, setOTP] = useState();\n  const [ctime, setctime] = useState(\"10:00\");\n  const [personalData, setPersnalData] = useState();\n  const [ispanverify, setPanVerify] = useState(false);\n  const [pan_no, setPanNo] = useState();\n  if (!isLoggedIn) props.history.replace(\"/login\");\n  const otpCountdown = () => {\n    let duration = 600;\n    // const display = document.getElementById(\"#timer\");\n    let timer = duration,\n      minutes,\n      seconds;\n    const tint = setInterval(function () {\n      minutes = parseInt(timer / 60, 10);\n      seconds = parseInt(timer % 60, 10);\n\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n      setctime(minutes + \":\" + seconds);\n\n      if (--timer < 0) {\n        // timer = duration;\n        clearInterval(tint);\n        setOtpSend(false);\n      }\n    }, 1000);\n  };\n  useEffect(() => {\n    N_checkKYCStatus(user?.params ? user.params.user_id : user.user_id).then(\n      (d) => {\n        if (d.status === 200) {\n          if (d.params.kyc_status === 1)\n            props.history.replace(\"/exchange/btc-inr\");\n        }\n        setFullScreenLoader(false);\n      }\n    );\n  }, []);\n  if (fullScreenLoader) return <FullLoader />;\n  else\n    return (\n      <>\n        <Header {...props} />\n        <div className=\"signupContainer mdfthemetxt\">\n          <div className=\"container shead-bg\">\n            <div className=\"row\">\n              <div className=\"col-12 col-md-12 col-sm-12\">\n                <form\n                  className=\"signupform theme-color-text\"\n                  method=\"post\"\n                  id=\"loginForm\"\n                  autoComplete=\"off\"\n                >\n                  <div>\n                    <h2 className=\"g_color\">KYC Form</h2>\n                  </div>\n                  <div className=\"signupform-control\">\n                    <label htmlFor=\"type_of_kyc\">TYPE OF KYC</label>\n                    <select\n                      id=\"type_of_kyc\"\n                      name=\"type_of_kyc\"\n                      className=\"form-control\"\n                      data-role=\"select-dropdown\"\n                      onChange={(e) => {\n                        setTypeofKyc(e.target.value);\n                      }}\n                    >\n                      <option value=\"Individual\">Individual</option>\n                      <option value=\"Corporate\">Corporate</option>\n                    </select>\n                  </div>\n                  <div className=\"signupform-control\" id=\"kyc_btn\">\n                    <div className=\"feature_checklist\">\n                      <div className=\"feature_checklist_section partial\">\n                        <div className=\"feature_checklist_section_title\">\n                          WITHOUT KYC\n                        </div>\n                        <ul className=\"feature_checklist_section_list\">\n                          <li className=\"feature_checklist_section_item\">\n                            <svg\n                              viewBox=\"0 0 48 48\"\n                              width=\"12\"\n                              height=\"12\"\n                              fill=\"#FFC800\"\n                            >\n                              <path\n                                d=\"m24 48c-13.254834 0-24-10.745166-24-24s10.745166-24 24-24 24 10.745166 24 24-10.745166 24-24 24zm12.5693021-33.5729524c-.5066705-.502545-1.3281286-.502545-1.8349005 0l-15.5444523 15.4164894-5.9750331-5.9257883c-.5066706-.502545-1.3281287-.5024947-1.8349006 0-.5067213.5024947-.5067213 1.3171825 0 1.8197275l6.8924834 6.8355767c.5065185.5024947 1.3285848.5021429 1.8349006 0l16.4619025-16.3262275c.5067213-.5024947.5066706-1.3172328 0-1.8197778z\"\n                                fill=\"#55bd6c\"\n                              ></path>\n                            </svg>\n                            <span className=\"feature_checklist_section_item_text\">\n                              Deposit\n                            </span>\n                          </li>\n                          <li className=\"feature_checklist_section_item\">\n                            <svg\n                              viewBox=\"0 0 48 48\"\n                              width=\"12\"\n                              height=\"12\"\n                              fill=\"#FFC800\"\n                            >\n                              <path\n                                d=\"m24 48c-13.254834 0-24-10.745166-24-24s10.745166-24 24-24 24 10.745166 24 24-10.745166 24-24 24zm12.5693021-33.5729524c-.5066705-.502545-1.3281286-.502545-1.8349005 0l-15.5444523 15.4164894-5.9750331-5.9257883c-.5066706-.502545-1.3281287-.5024947-1.8349006 0-.5067213.5024947-.5067213 1.3171825 0 1.8197275l6.8924834 6.8355767c.5065185.5024947 1.3285848.5021429 1.8349006 0l16.4619025-16.3262275c.5067213-.5024947.5066706-1.3172328 0-1.8197778z\"\n                                fill=\"#55bd6c\"\n                              ></path>\n                            </svg>\n                            <span className=\"feature_checklist_section_item_text\">\n                              Trade\n                            </span>\n                          </li>\n                          <li className=\"feature_checklist_section_item\">\n                            <svg\n                              viewBox=\"0 0 48 48\"\n                              width=\"12\"\n                              height=\"12\"\n                              fill=\"rgba(28, 27, 33, 0.24)\"\n                            >\n                              <path d=\"m24 48c-13.254834 0-24-10.745166-24-24s10.745166-24 24-24 24 10.745166 24 24-10.745166 24-24 24zm2.5259167-23.5067083 9.039-9.039c.5615833-.5611042.5615833-1.4715209 0-2.032625-.5615834-.5615834-1.4710417-.5615834-2.032625 0l-9.039 9.039-9.0394792-9.039c-.5615833-.5615834-1.4710417-.5615834-2.032625 0-.5615833.5611041-.5615833 1.4715208 0 2.032625l9.0394792 9.039-9.0394792 9.039c-.5615833.5611041-.5615833 1.4715208 0 2.032625.2807917.2803125.6487917.4207083 1.0163125.4207083s.7355208-.1403958 1.0163125-.4211875l9.0394792-9.039 9.039 9.039c.2807916.2807917.6487916.4211875 1.0163125.4211875.3675208 0 .7355208-.1403958 1.0163125-.4211875.5615833-.5611042.5615833-1.4715208 0-2.032625z\"></path>\n                            </svg>\n                            <span className=\"feature_checklist_section_item_text disabled\">\n                              Withdrawal\n                            </span>\n                          </li>\n                          <li className=\"feature_checklist_section_item\">\n                            <svg\n                              viewBox=\"0 0 48 48\"\n                              width=\"12\"\n                              height=\"12\"\n                              fill=\"rgba(28, 27, 33, 0.24)\"\n                            >\n                              <path d=\"m24 48c-13.254834 0-24-10.745166-24-24s10.745166-24 24-24 24 10.745166 24 24-10.745166 24-24 24zm2.5259167-23.5067083 9.039-9.039c.5615833-.5611042.5615833-1.4715209 0-2.032625-.5615834-.5615834-1.4710417-.5615834-2.032625 0l-9.039 9.039-9.0394792-9.039c-.5615833-.5615834-1.4710417-.5615834-2.032625 0-.5615833.5611041-.5615833 1.4715208 0 2.032625l9.0394792 9.039-9.0394792 9.039c-.5615833.5611041-.5615833 1.4715208 0 2.032625.2807917.2803125.6487917.4207083 1.0163125.4207083s.7355208-.1403958 1.0163125-.4211875l9.0394792-9.039 9.039 9.039c.2807916.2807917.6487916.4211875 1.0163125.4211875.3675208 0 .7355208-.1403958 1.0163125-.4211875.5615833-.5611042.5615833-1.4715208 0-2.032625z\"></path>\n                            </svg>\n                            <span className=\"feature_checklist_section_item_text disabled\">\n                              P2P\n                            </span>\n                          </li>\n                        </ul>\n                      </div>\n                      <div className=\"feature_checklist_section\">\n                        <div className=\"feature_checklist_section_title\">\n                          WITH KYC\n                        </div>\n                        <ul className=\"feature_checklist_section_list\">\n                          <li className=\"feature_checklist_section_item\">\n                            <svg\n                              viewBox=\"0 0 48 48\"\n                              width=\"12\"\n                              height=\"12\"\n                              fill=\"#FFC800\"\n                            >\n                              <path\n                                d=\"m24 48c-13.254834 0-24-10.745166-24-24s10.745166-24 24-24 24 10.745166 24 24-10.745166 24-24 24zm12.5693021-33.5729524c-.5066705-.502545-1.3281286-.502545-1.8349005 0l-15.5444523 15.4164894-5.9750331-5.9257883c-.5066706-.502545-1.3281287-.5024947-1.8349006 0-.5067213.5024947-.5067213 1.3171825 0 1.8197275l6.8924834 6.8355767c.5065185.5024947 1.3285848.5021429 1.8349006 0l16.4619025-16.3262275c.5067213-.5024947.5066706-1.3172328 0-1.8197778z\"\n                                fill=\"#55bd6c\"\n                              ></path>\n                            </svg>\n                            <span className=\"feature_checklist_section_item_text\">\n                              Deposit\n                            </span>\n                          </li>\n                          <li className=\"feature_checklist_section_item\">\n                            <svg\n                              viewBox=\"0 0 48 48\"\n                              width=\"12\"\n                              height=\"12\"\n                              fill=\"#FFC800\"\n                            >\n                              <path\n                                d=\"m24 48c-13.254834 0-24-10.745166-24-24s10.745166-24 24-24 24 10.745166 24 24-10.745166 24-24 24zm12.5693021-33.5729524c-.5066705-.502545-1.3281286-.502545-1.8349005 0l-15.5444523 15.4164894-5.9750331-5.9257883c-.5066706-.502545-1.3281287-.5024947-1.8349006 0-.5067213.5024947-.5067213 1.3171825 0 1.8197275l6.8924834 6.8355767c.5065185.5024947 1.3285848.5021429 1.8349006 0l16.4619025-16.3262275c.5067213-.5024947.5066706-1.3172328 0-1.8197778z\"\n                                fill=\"#55bd6c\"\n                              ></path>\n                            </svg>\n                            <span className=\"feature_checklist_section_item_text\">\n                              Trade\n                            </span>\n                          </li>\n                          <li className=\"feature_checklist_section_item\">\n                            <svg\n                              viewBox=\"0 0 48 48\"\n                              width=\"12\"\n                              height=\"12\"\n                              fill=\"#FFC800\"\n                            >\n                              <path\n                                d=\"m24 48c-13.254834 0-24-10.745166-24-24s10.745166-24 24-24 24 10.745166 24 24-10.745166 24-24 24zm12.5693021-33.5729524c-.5066705-.502545-1.3281286-.502545-1.8349005 0l-15.5444523 15.4164894-5.9750331-5.9257883c-.5066706-.502545-1.3281287-.5024947-1.8349006 0-.5067213.5024947-.5067213 1.3171825 0 1.8197275l6.8924834 6.8355767c.5065185.5024947 1.3285848.5021429 1.8349006 0l16.4619025-16.3262275c.5067213-.5024947.5066706-1.3172328 0-1.8197778z\"\n                                fill=\"#55bd6c\"\n                              ></path>\n                            </svg>\n                            <span className=\"feature_checklist_section_item_text\">\n                              Withdrawal\n                            </span>\n                          </li>\n                          <li className=\"feature_checklist_section_item\">\n                            <svg\n                              viewBox=\"0 0 48 48\"\n                              width=\"12\"\n                              height=\"12\"\n                              fill=\"#FFC800\"\n                            >\n                              <path\n                                d=\"m24 48c-13.254834 0-24-10.745166-24-24s10.745166-24 24-24 24 10.745166 24 24-10.745166 24-24 24zm12.5693021-33.5729524c-.5066705-.502545-1.3281286-.502545-1.8349005 0l-15.5444523 15.4164894-5.9750331-5.9257883c-.5066706-.502545-1.3281287-.5024947-1.8349006 0-.5067213.5024947-.5067213 1.3171825 0 1.8197275l6.8924834 6.8355767c.5065185.5024947 1.3285848.5021429 1.8349006 0l16.4619025-16.3262275c.5067213-.5024947.5066706-1.3172328 0-1.8197778z\"\n                                fill=\"#55bd6c\"\n                              ></path>\n                            </svg>\n                            <span className=\"feature_checklist_section_item_text\">\n                              P2P\n                            </span>\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                    <button\n                      type=\"button\"\n                      className=\"backbtn\"\n                      onClick={() => {\n                        props.history.push(\"/exchange/btc-inr\");\n                      }}\n                    >\n                      SKIP FOR NOW\n                    </button>\n                    <button\n                      type=\"button\"\n                      id=\"proceed_btn\"\n                      className=\"sendbtn bg-success \"\n                      onClick={(e) => {\n                        const kyc_btn = e.target.parentElement;\n                        kyc_btn.className = \"signupform-control h\";\n                        document.getElementById(\"verify_pan\").style.display =\n                          \"block\";\n                      }}\n                    >\n                      Auto Kyc Approval\n                      {/* COMPLETE KYC */}\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      id=\"proceed_btn\"\n                      className=\"sendbtn bg-primary px-4  \"\n                      onClick={(e) => {\n                      // alert(e);\n                        const kyc_btn = e.target.parentElement;\n                        kyc_btn.className = \"signupform-control h\";\n                        props.history.replace('/welcome')\n                      }}\n                    >\n                     Manual Kyc\n                    </button>\n                  </div>\n                  <div id=\"verify_pan\" style={{ display: \"none\" }}>\n                    <div className=\"signupform-control g_color\">\n                      <label htmlFor=\"user_mobile\">PAN Number:</label>\n                      <div className=\"input-group\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"pan_no\"\n                          name=\"pan_no\"\n                          value={pan_no}\n                          maxLength={10}\n                          minLength={10}\n                          onChange={(e) => setPanNo(e.target.value)}\n                          placeholder=\"Enter your PAN number\"\n                        />\n                        <div className=\"input-group-append\">\n                          {!ispanverify ? (\n                            <button\n                              className=\"btn bg-transparent btn-outline-light text-info\"\n                              type=\"button\"\n                              disabled={disableSend}\n                              onClick={() => {\n                                if (pan_no?.length === 10) {\n                                  isVerifyPan(true);\n                                  N_panVerify(\n                                    pan_no,\n                                    user?.params\n                                      ? user.params.user_id\n                                      : user.user_id\n                                  ).then((d) => {\n                                    if (d.status == 200) {\n                                      NotificationManager.success(d.message);\n                                      setPanVerify(true);\n                                    } else {\n                                      NotificationManager.error(d.message);\n                                      setPanNo(\"\");\n                                      document.getElementById(\n                                        \"pan_id\"\n                                      ).style.display = \"block\";\n                                    }\n                                    isVerifyPan(false);\n                                  });\n                                } else {\n                                  NotificationManager.error(\n                                    \"Please Enter valid PAN number\"\n                                  );\n                                }\n                              }}\n                              id=\"button-addon2\"\n                            >\n                              {isverifypan ? (\n                                <span className=\"loading-icon fas fa-spinner fa-spin mr-2\"></span>\n                              ) : (\n                                \"Verify\"\n                              )}\n                            </button>\n                          ) : (\n                            <button\n                              type=\"button\"\n                              id=\"button-addon2\"\n                              disabled=\"disabled\"\n                              className=\"btn bg-transparent btn-outline-light text-danger\"\n                            >\n                              Verified\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                      <div\n                        id=\"pan_id\"\n                        className=\"mt-2\"\n                        style={{ display: \"none\" }}\n                      >\n                        If Your Pan is Not Valid then{\" \"}\n                        <Link to=\"/welcome\">Click here</Link> to fill Manual\n                        Record\n                        <p>\n                          <b\n                            style={{ fontSize: \"15px\" }}\n                            className=\" text-danger\"\n                          >\n                            Note:\n                          </b>\n                          <strong\n                            style={{ fontSize: \"12px\", fontWeight: \"500\" }}\n                          >\n                            &nbsp;&nbsp;&nbsp;If you fill kyc manually, then you\n                            have to wait for 72 hours for KYC verification.\n                          </strong>\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  <div id=\"verify_aadhar\" className={ispanverify ? \"vis\" : \"h\"}>\n                    <div className=\"signupform-control g_color\">\n                      <label htmlFor=\"user_aadhar\">AADHAR Number:</label>\n                      <div className=\"input-group\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"user_aadhar\"\n                          name=\"user_aadhar\"\n                          value={aadhar_no}\n                          maxLength={12}\n                          minLength={12}\n                          onChange={(e) =>\n                            setAadharNo(\n                              e.target.value\n                                .replace(/[^0-9.]/g, \"\")\n                                .replace(/(\\..*?)\\..*/g, \"$1\")\n                            )\n                          }\n                          placeholder=\"Enter your AADHAR number\"\n                        />\n                        <div className=\"input-group-append\">\n                          {!isOtpSend ? (\n                            <button\n                              className=\"btn bg-transparent btn-outline-light text-info\"\n                              type=\"button\"\n                              disabled={disableSend}\n                              onClick={() => {\n                                if (aadhar_no?.length === 12) {\n                                  setOtpLoader(true);\n                                  N_sendAADHAROTPMobile(\n                                    aadhar_no,\n                                    user?.params\n                                      ? user.params.user_id\n                                      : user.user_id\n                                  ).then((d) => {\n                                    console.log(d);\n                                    if (d.status == 200) {\n                                      NotificationManager.success(d.message);\n                                      setClientId(d.result);\n                                      setDisable(false);\n                                      setOtpSend(true);\n                                      otpCountdown();\n                                    } else {\n                                      NotificationManager.error(d.message);\n                                      setAadharNo(\"\");\n                                      document.getElementById(\n                                        \"pan_id\"\n                                      ).style.display = \"block\";\n                                    }\n                                    setOtpLoader(false);\n                                  });\n                                } else {\n                                  NotificationManager.error(\n                                    \"Please Enter valid AADHAR number\"\n                                  );\n                                }\n                              }}\n                              id=\"button-addon2\"\n                            >\n                              {otploader ? (\n                                <span className=\"loading-icon fas fa-spinner fa-spin mr-2\"></span>\n                              ) : (\n                                \"Send\"\n                              )}\n                            </button>\n                          ) : (\n                            <button\n                              type=\"button\"\n                              id=\"button-addon2\"\n                              disabled=\"disabled\"\n                              className=\"btn btn-outline-info btn-outline-light text-danger\"\n                            >\n                              {isOtpSend ? ctime : null}\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className={`signupform-control g_color`}>\n                      <label htmlFor=\"user_mobile\">MOBILE Number</label>\n                      <input\n                        type=\"text\"\n                        name=\"user_mobile\"\n                        id=\"user_mobile\"\n                        className=\"bg-white\"\n                        maxLength={10}\n                        disabled={disable}\n                        value={mobile}\n                        onChange={(e) =>\n                          setMobile(\n                            e.target.value\n                              .replace(/[^0-9.]/g, \"\")\n                              .replace(/(\\..*?)\\..*/g, \"$1\")\n                          )\n                        }\n                        required=\"\"\n                        placeholder=\"Enter your mobile number\"\n                      />\n                      <i className=\"fas fa-check-circle\"></i>\n                      <i className=\"fas fa-exclamation-circle\"></i>\n                      <small></small>\n                    </div>\n                    <div\n                      className={`signupform-control g_color ${\n                        aadharVerify ? \"h\" : \"vis\"\n                      }`}\n                    >\n                      <label htmlFor=\"user_otp\">OTP</label>\n                      <input\n                        type=\"text\"\n                        name=\"user_otp\"\n                        id=\"user_otp\"\n                        className=\"bg-white\"\n                        maxLength={6}\n                        disabled={disable}\n                        value={otp}\n                        onChange={(e) =>\n                          setOTP(\n                            e.target.value\n                              .replace(/[^0-9.]/g, \"\")\n                              .replace(/(\\..*?)\\..*/g, \"$1\")\n                          )\n                        }\n                        required=\"\"\n                        placeholder=\"Enter 6 digit otp\"\n                      />\n                      <i className=\"fas fa-check-circle\"></i>\n                      <i className=\"fas fa-exclamation-circle\"></i>\n                      <small></small>\n                    </div>\n                    <button\n                      type=\"button\"\n                      id=\"aadhar_otp\"\n                      className={`reg_btn bg-success`}\n                      onClick={() => {\n                        if (\n                          !isNaN(otp) &&\n                          !isNaN(mobile) &&\n                          otp?.length === 6 &&\n                          mobile?.length === 10\n                        ) {\n                          setLoading(true);\n                          N_verifyAADHAROTPMobile(\n                            client_id,\n                            mobile,\n                            otp,\n                            user?.params ? user.params.user_id : user.user_id\n                          ).then((d) => {\n                            console.log(d);\n                            setLoading(false);\n                            if (d.status == 200) {\n                              setVisiblity(\"vis\");\n                              setPersnalData(d.result);\n                              setAadharVerify(true);\n                              document.getElementById(\n                                \"aadhar_otp\"\n                              ).style.display = \"none\";\n                              NotificationManager.success(d.message);\n                            } else {\n                              NotificationManager.error(d.message);\n                            }\n                          });\n                        } else {\n                          NotificationManager.error(\"invalid input !\");\n                        }\n                      }}\n                    >\n                      {loading ? (\n                        <i className=\"loading-icon fas fa-spinner bg-success fa-spin mr-2\"></i>\n                      ) : null}\n                      <span id=\"reg\">Verify OTP</span>\n                    </button>\n                  </div>\n                  <div id=\"personal_info\" className={visibl}>\n                    <div>\n                      <h3>PERSONAL INFO</h3>\n                    </div>\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"user_fname\">FIRST NAME *</label>\n                      <input\n                        type=\"text\"\n                        name=\"user_name\"\n                        readOnly\n                        className=\"signupform-control\"\n                        id=\"user_name\"\n                        value={personalData?.full_name}\n                      />\n                      <img\n                        src={`data:image/png;base64,${personalData?.profile_image}`}\n                        height=\"150px\"\n                        width=\"200px\"\n                        id=\"aadhar_selfie\"\n                        name=\"aadhar_selfie\"\n                        alt=\"adhar pic\"\n                      />\n                    </div>\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"gender\">Gender *</label>\n                      <input\n                        type=\"text\"\n                        name=\"gender\"\n                        className=\"signupform-control\"\n                        id=\"gender\"\n                        readOnly\n                        value={personalData?.gender == \"M\" ? \"MALE\" : \"FEMALE\"}\n                      />\n                    </div>\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"user_dob\">DATE OF BIRTH *</label>\n                      <input\n                        type=\"date\"\n                        name=\"user_dob\"\n                        id=\"user_dob\"\n                        readOnly\n                        className=\"signupform-control\"\n                        value={personalData?.dob}\n                      />\n                    </div>\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"user_address\">Address *</label>\n                      <textarea\n                        className=\"form-control\"\n                        style={{\n                          border: \"2px solid #f0f0f0\",\n                          borderRadius: \"4px\",\n                        }}\n                        id=\"user_address\"\n                        name=\"user_address\"\n                        readOnly\n                        rows=\"3\"\n                        value={\n                          personalData?.address.house +\n                          \" \" +\n                          personalData?.address.vtc +\n                          \" \" +\n                          personalData?.address.po +\n                          \" \" +\n                          personalData?.address.landmark +\n                          \" \" +\n                          personalData?.address.loc\n                        }\n                      ></textarea>\n                    </div>\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"country\">COUNTRY *</label>\n                      <input\n                        type=\"text\"\n                        name=\"country\"\n                        className=\"signupform-control\"\n                        id=\"country\"\n                        readOnly\n                        value={personalData?.address.country}\n                      />\n                    </div>\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"state\">STATE *</label>\n                      <input\n                        type=\"text\"\n                        name=\"state\"\n                        className=\"signupform-control\"\n                        id=\"state\"\n                        readOnly\n                        value={personalData?.address.state}\n                      />\n                    </div>\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"country\">CITY *</label>\n                      <input\n                        type=\"text\"\n                        name=\"city\"\n                        className=\"signupform-control\"\n                        id=\"city\"\n                        readOnly\n                        value={personalData?.address.dist}\n                      />\n                    </div>\n                    <div className=\"signupform-control\">\n                      <label htmlFor=\"user_pincode\">PINCODE *</label>\n                      <input\n                        type=\"text\"\n                        name=\"user_pincode\"\n                        className=\"signupform-control\"\n                        id=\"user_pincode\"\n                        readOnly\n                        value={personalData?.zip}\n                      />\n                    </div>\n                    <button\n                      type=\"button\"\n                      id=\"btn_submit\"\n                      className=\"reg_btn\"\n                      onClick={() => {\n                        props.history.replace(\"/exchange/btc-inr\");\n                      }}\n                    >\n                      {loading ? (\n                        <i className=\"loading-icon fas bg-success fa-spinner fa-spin mr-2\"></i>\n                      ) : null}\n                      <span id=\"reg\">SUBMIT</span>\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Account_Authenticator.jsx",["680"],"import React, { useState, useEffect } from \"react\";\nimport {  useSelector } from \"react-redux\";\nimport \"./login.css\";\nimport { NotificationManager } from \"react-notifications\";\nimport {  NavLink } from \"react-router-dom\";\nimport {\n  N_get_settings,\n  N_setGoogleAuthOtp,\n} from \"./redux/helpers/api_functions_new\";\nexport default function Account_Authenticator(props) {\n  const { user } = useSelector((state) => state.AuthReducer);\n  const [otp, setOTP] = useState();\n  const [authenticator_key, setAuthenticator] = useState();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    N_get_settings(user?.params ? user.params.user_id : user.user_id)\n      .then((d) => {\n        console.log(\"get setting: \", d);\n        if (d.status === 200) {\n          setAuthenticator(d.params.authenticator_key);\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, []);\n\n  const submit = (e) => {\n    e.preventDefault();\n    var speakeasy = require(\"speakeasy-latest\");\n    try {\n      const { base32: secret } = authenticator_key;\n      var tokenValidates = speakeasy.totp.verify({\n        secret: secret,\n        encoding: \"base32\",\n        token: otp,\n        window: 6,\n      });\n      if (tokenValidates) {\n        N_setGoogleAuthOtp(user?.params ? user.params.user_id : user.user_id, 2)\n          .then((res) => {\n            // if (res.status === 200) {\n            console.log(\"set gauth: \", res);\n            NotificationManager.success(res.message);\n            props.history.replace(\"/exchange/btc-inr\");\n\n            // }\n          })\n          .catch((e) => {\n            console.log(e);\n          });\n      } else {\n        console.log(tokenValidates, otp, secret);\n        NotificationManager.error(\"Somthing Wrong!!\");\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <>\n      <div className=\"signupContainer\">\n        <div className=\"container text-dark\">\n          <div className=\"row\">\n            <div className=\"col-12 col-md-12 col-sm-12\">\n              <form\n                className=\"signupform\"\n                method=\"post\"\n                onSubmit={submit}\n                id=\"loginForm\"\n                autoComplete=\"off\"\n              >\n                <div>\n                  <h2 className=\"text-dark\">Verify Your Google Authentication</h2>\n                </div>\n                <div className={`signupform-control`}>\n                  <label htmlFor=\"user_otp\">OTP</label>\n                  <input\n                    type=\"text\"\n                    name=\"user_otp\"\n                    id=\"user_otp\"\n                    maxLength={6}\n                    value={otp}\n                    onChange={(e) =>\n                      setOTP(\n                        e.target.value\n                          .replace(/[^0-9.]/g, \"\")\n                          .replace(/(\\..*?)\\..*/g, \"$1\")\n                      )\n                    }\n                    required=\"\"\n                    placeholder=\"Enter 6 digit otp\"\n                  />\n                  <i className=\"fas fa-check-circle\"></i>\n                  <i className=\"fas fa-exclamation-circle\"></i>\n                  <small></small>\n                </div>\n                <button type=\"submit\" className=\"reg_btn btn btn-success\">\n                  {loading ? (\n                    <i className=\"loading-icon fas fa-spinner fa-spin mr-2\"></i>\n                  ) : null}\n                  <span id=\"reg\">Verify OTP</span>\n                </button>\n                <NavLink className=\"signupform-login\" to=\"/2fa\">\n                  Back\n                </NavLink>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/RegisterNew.jsx",["681","682","683","684","685","686","687","688","689","690","691","692","693","694","695"],"import React, { useState } from \"react\";\nimport Header from \"./ftx_design/Header\";\nimport { Link } from \"react-router-dom\";\nimport {\n  isCpass,\n  isEmail,\n  isPass,\n} from \"./redux/helpers/form-validator.functions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { user_Register } from \"./redux/actions/authActions\";\nimport $ from \"jquery\";\nimport { NotificationManager } from \"react-notifications\";\nimport { getElementError } from \"@testing-library/react\";\nimport { checkEmail, checkPassword } from \"./redux/helpers/helper_functions\";\n\nexport default function RegisterNew(props) {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const [showCPassword, setShowCPassword] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [passError, setPassError] = useState(false);\n  const [cPassError, setCPassError] = useState(false);\n  const { isLoggedIn } = useSelector((state) => state.AuthReducer);\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [confPassword, setConfPassword] = useState();\n  const [referral_code, setReferral] = useState(\n    props?.match?.params?.id ? props?.match?.params?.id : \"\"\n  );\n\n  const [hasUCaseL, setUCaseL] = useState(false);\n  const [hasLCaseL, setLCaseL] = useState(false);\n  const [hasDgt, setDgt] = useState(false);\n  const [hasSS, setSS] = useState(false);\n  const [hasL, setL] = useState(false);\n\n  const [showPass, setShowPass] = useState(false);\n  const [showCPass, setShowCPass] = useState(false);\n  const [agree, setAgree] = useState(false);\n  const [loading, setLoading] = useState();\n  const { webData } = useSelector((state) => state.websiteDBReducer);\n  if (isLoggedIn) props.history.replace(\"/exchange/btc-inr\");\n  const hsPassword = (_id) => {\n    var _idv = document.querySelector(\"#\" + _id);\n    if (_idv.getAttribute(\"type\") == \"text\") {\n      _idv.setAttribute(\"type\", \"password\");\n    } else {\n      _idv.setAttribute(\"type\", \"text\");\n    }\n  };\n\n  function validatePass(pass) {\n    const uCaseL = /^(?=.*?[A-Z])/;\n    const lCaseL = /^(?=.*?[a-z])/;\n    const dgts = /^(?=.*?[0-9])/;\n    const ss = /^(?=.*?[#?!@$%^&*-])/;\n    setUCaseL(uCaseL.test(pass));\n    setLCaseL(lCaseL.test(pass));\n    setDgt(dgts.test(pass));\n    setSS(ss.test(pass));\n    setL(pass.length >= 8);\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!checkEmail(email)) {\n      setEmailError(\"Not a valid email OR email should be in small letters\");\n    }\n    if (!checkPassword(password)) {\n      setPassError(\"Not a valid password\");\n    }\n    if (!checkPassword(confPassword)) {\n      setCPassError(\"Not a valid password\");\n    }\n    if (password != confPassword) {\n      console.log(\"p failed\", cPassError, !cPassError);\n      setCPassError(\"Password confirmation failed.\");\n    }\n\n    if (\n      (!emailError && !passError && !cPassError) ||\n      password != confPassword\n    ) {\n      if (agree) {\n        console.log(\"Register\");\n        //$(\".main_terms\").removeClass(\"border-danger\");\n        setLoading(true);\n        dispatch(\n          user_Register(\n            email,\n            password,\n            confPassword,\n            referral_code,\n            () => {\n              setLoading(false);\n              props.history.replace(\"/otp\");\n            },\n            () => setLoading(false)\n          )\n        );\n      } else {\n        NotificationManager.error(\"Please Agree with term condition !\");\n        //$(\".main_terms\").addClass(\"border-danger\");\n      }\n    }\n  };\n  return (\n    <>\n      <Header {...props} />\n      <div\n        className=\"container-fluid mvh-100\"\n        style={{\n          backgroundImage:\n            \"url(/newimages/bitcoin-safety-and-security-Ment-Tech.jpeg)\",\n          backgroundPosition: \"center center\",\n          backgroundSize: \"cover\",\n        }}\n      >\n        <div className=\"container mvh-100\">\n          <div className=\"row align-items-center mvh-100\">\n            <div className=\"col-lg py-5\">\n              <h1 className=\"main-title\">Create an account,</h1>\n              <h3 className=\"main-title\">start your crypto journey with us.</h3>\n              <div className=\"my-3\">\n                <a\n                  href=\"/exchange/btc-inr\"\n                  className=\"btn btn-warning fw-bold px-5 py-3\"\n                >\n                  Let's Start\n                </a>\n              </div>\n            </div>\n            <div className=\"col-lg-4 py-5\">\n              <div\n                className=\"card card-body\"\n                style={{ background: \"rgba(0,0,0,0.7)\" }}\n              >\n                <h1 className=\"\">Register</h1>\n                <form className=\"my-form\" onSubmit={onSubmit}>\n                  <div className=\"form-group mb-3\">\n                    <div class=\"form-floating\">\n                      <input\n                        id=\"user_email\"\n                        name=\"user_email\"\n                        type=\"email\"\n                        class=\"form-control bg-dark text-light\"\n                        placeholder=\"name@example.com\"\n                        autoFocus\n                        required\n                        defaultValue={email}\n                        onChange={(e) => setEmail(e.target.value.toLowerCase())}\n                      />\n                      <label for=\"email\">\n                        <span className=\"fas fa-envelope\"></span> Email address\n                      </label>\n                    </div>\n                    {emailError && (\n                      <div className=\"text-danger\">{emailError}</div>\n                    )}\n                  </div>\n\n                  <div className=\"form-group mb-3\">\n                    <div class=\"form-floating\">\n                      <input\n                        id=\"pass\"\n                        name=\"user_password\"\n                        type={showPassword ? \"text\" : \"password\"}\n                        class=\"form-control bg-dark text-light\"\n                        placeholder=\"Password\"\n                        required\n                        defaultValue={password}\n                        onChange={(e) => {\n                          setPassword(e.target.value);\n                          validatePass(e.target.value);\n                        }}\n                      />\n                      <label for=\"password\">\n                        <span className=\"fas fa-unlock-alt\"></span> Password\n                      </label>\n                      <div\n                        class=\"position-absolute top-50 end-0 translate-middle-y mx-3\"\n                        style={{ cursor: \"pointer\" }}\n                        onClick={(e) => {\n                          setShowPassword(!showPassword);\n                        }}\n                      >\n                        <span\n                          className={\n                            showPassword ? \"fas fa-eye-slash\" : \"fas fa-eye\"\n                          }\n                        ></span>\n                      </div>\n                    </div>\n                    <ul className=\"list-unstyled my-1 bg-dark rounded p-2\">\n                      <li className={hasL ? \"text-success\" : \"text-warning\"}>\n                        <span className=\"fas fa-check-circle\"></span> 8\n                        Character long\n                      </li>\n                      <li\n                        className={hasUCaseL ? \"text-success\" : \"text-warning\"}\n                      >\n                        <span className=\"fas fa-check-circle\"></span> One\n                        Uppercase letter\n                      </li>\n                      <li\n                        className={hasLCaseL ? \"text-success\" : \"text-warning\"}\n                      >\n                        <span className=\"fas fa-check-circle\"></span> One\n                        Lowercase letter\n                      </li>\n                      <li className={hasDgt ? \"text-success\" : \"text-warning\"}>\n                        <span className=\"fas fa-check-circle\"></span> One Digit\n                      </li>\n                      <li className={hasSS ? \"text-success\" : \"text-warning\"}>\n                        <span className=\"fas fa-check-circle\"></span> One\n                        Special symbol\n                      </li>\n                    </ul>\n                    {passError && (\n                      <div className=\"text-danger\">{passError}</div>\n                    )}\n                  </div>\n\n                  <div className=\"form-group mb-3\">\n                    <div class=\"form-floating\">\n                      <input\n                        id=\"cpass\"\n                        name=\"user_cpassword\"\n                        type={showCPassword ? \"text\" : \"password\"}\n                        class=\"form-control bg-dark text-light\"\n                        placeholder=\"Confirm Password\"\n                        required\n                        defaultValue={confPassword}\n                        onChange={(e) => setConfPassword(e.target.value)}\n                      />\n                      <label for=\"password\">\n                        <span className=\"fas fa-unlock-alt\"></span> Confirm\n                        Password\n                      </label>\n                      <div\n                        class=\"position-absolute top-50 end-0 translate-middle-y mx-3\"\n                        style={{ cursor: \"pointer\" }}\n                        onClick={(e) => {\n                          setShowCPassword(!showCPassword);\n                        }}\n                      >\n                        <span\n                          className={\n                            showCPassword ? \"fas fa-eye-slash\" : \"fas fa-eye\"\n                          }\n                        ></span>\n                      </div>\n                    </div>\n                    {cPassError && (\n                      <div className=\"text-danger\">{cPassError}</div>\n                    )}\n                  </div>\n\n                  <div className=\"form-group mb-3\">\n                    <div class=\"form-floating\">\n                      <input\n                        id=\"refercode\"\n                        name=\"refercode\"\n                        type=\"text\"\n                        class=\"form-control bg-dark text-light\"\n                        placeholder=\"Referral Code\"\n                        defaultValue={referral_code}\n                        onChange={(e) => setReferral(e.target.value)}\n                      />\n                      <label for=\"email\">\n                        <span className=\"fas fa-envelope\"></span> Referral Code\n                      </label>\n                    </div>\n                    {/* {emailError && (\n                      <div className=\"text-danger\">{emailError}</div>\n                    )} */}\n                  </div>\n\n                  <div className=\"form-group mb-3\">\n                    <div class=\"form-check\">\n                      <input\n                        class=\"form-check-input\"\n                        type=\"checkbox\"\n                        id=\"agree_terms\"\n                        name=\"agree_terms\"\n                        checked={agree}\n                        onChange={(e) => setAgree(e.target.checked)}\n                      />\n                      <label\n                        class=\"form-check-label\"\n                        for=\"flexCheckIndeterminate\"\n                      >\n                        I agree to Bitflash's{\" \"}\n                        <a href=\"/terms-condition\">Terms of service.</a>\n                      </label>\n                    </div>\n                  </div>\n\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-block btn-primary w-100 mb-3 d-flex align-items-center justify-content-center\"\n                    disabled={loading ? true : false}\n                  >\n                    {loading && (\n                      <span\n                        class=\"spinner-border spinner-border-sm mx-2\"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                      ></span>\n                    )}\n                    Register\n                  </button>\n                </form>\n              </div>\n\n              <div\n                className=\"card card-body text-center my-2\"\n                style={{ background: \"rgba(0,0,0,0.7)\" }}\n              >\n                <span>Allready have an account. </span>\n                <a\n                  className=\"d-inline-block text-decoration-none\"\n                  href=\"/\"\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#exampleModal\"\n                >\n                  Login\n                </a>\n              </div>\n            </div>\n\n            {/* <div class=\"col-md\">\n              <div\n                className=\"col img_hider\"\n                style={{\n                  backgroundImage: \"url(./image/BG_5.png)\",\n                  height: \"100vh\",\n                  backgroundSize: \"cover\",\n                }}\n              ></div>\n            </div> */}\n          </div>\n        </div>\n      </div>\n\n      {/* <div class=\"container-fluid bg-white p-4\">\n        <div class=\"row\">\n          <div class=\"col-sm-12 col-md-6  \">\n            <div className=\"row d-flex justify-content-center mdfthemetxt\">\n              <div\n                className={\" container\"}\n                style={{ backgroundColor: \" tranparent\" }}\n              >\n                <div className=\"row d-flex justify-content-center\">\n                  <div className=\"col-12 col-md-11 col-sm-12 \">\n                    <form\n                      className=\"signupform theme-color-text\"\n                      method=\"post\"\n                      id=\"signupform\"\n                      onSubmit={onSubmit}\n                    >\n                      <div>\n                        <h2 className=\"text-center\">\n                          Register\n                        </h2>\n                      </div>\n                      <div className=\"signupform-control\">\n                        <small id=\"msg\" style={{ fontSize: \"15px\" }}>\n                          Error Message\n                        </small>\n                      </div>\n                      <div className={`signupform-control`}>\n                        <label htmlFor=\"user_email\">EMAIL</label>\n                        <input\n                          type=\"email\"\n                          name=\"user_email\"\n                          required=\"\"\n                          value={email}\n                          onChange={(e) => setEmail(e.target.value)}\n                          className=\"signupform-control\"\n                          id=\"user_email\"\n                          placeholder=\"example@gmail.com\"\n                        />\n                        <i className=\"fas fa-check-circle\"></i>\n                        <i className=\"fas fa-exclamation-circle\"></i>\n                        <small></small>\n                      </div>\n                      <div className={`signupform-control`}>\n                        <label htmlFor=\"user_password\">PASSWORD</label>\n                        <div className=\"input-group mb-3\">\n                          <input\n                            type={showPass ? \"text\" : \"password\"}\n                            className=\"form-control\"\n                            name=\"user_password\"\n                            required=\"\"\n                            value={password}\n                            onChange={function (e) {\n                              setPassword(e.target.value);\n                            }}\n                            // onChange={(e) => }\n                            //id=\"pass\"\n                            placeholder=\"password\"\n                          />\n                          <div className=\"input-group-append\">\n                            <button className=\"btn btn-outline-success\" onClick={(e)=>{setShowPass(!showPass)}}>\n                              <span className={showPass ? \"fas fa-eye-slash\" : \"fas fa-eye\"}></span>\n                            </button>\n                            <a\n                        href=\"#view_qr\"\n                        className=\"input-group-text\"\n                        style={{ border: \"1px\" }}\n                        onClick={(e) => {\n                          hsPassword(\"pass\");\n                        }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"16\"\n                          height=\"16\"\n                          fill=\"#28a745\"\n                          className=\"bi bi-eye\"\n                          viewBox=\"0 0 16 16\"\n                        >\n                          <path d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z\" />\n                          <path d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\" />\n                        </svg>\n                      </a>\n                          </div>\n                        </div>\n                        <ul className=\"text-dark\" style={{ fontSize: \"13px\" }}>\n                          <li id=\"list_1\"> 1 Uppercase Character</li>\n                          <li id=\"list_2\"> 1 Numeric Value</li>\n                          <li id=\"list_3\"> 1 Special Symbol eg:@#</li>\n                          <li id=\"list_4\"> length should be greater than 8 </li>\n                        </ul>\n\n                        <small\n                          id=\"passerr\"\n                          className=\"text-danger\"\n                          style={{ top: \"53%\" }}\n                        ></small>\n                      </div>\n                      <div className={`signupform-control`}>\n                        <label htmlFor=\"user_cpassword\">CONFIRM PASSWORD</label>\n                        <div className=\"input-group mb-3\">\n                          <input\n                            type={showCPass ? \"text\" : \"password\"}\n                            className=\"form-control\"\n                            name=\"user_cpassword\"\n                            id=\"cpass\"\n                            required=\"\"\n                            value={confPassword}\n                            onChange={(e) => setConfPassword(e.target.value)}\n                            placeholder=\"confirm password\"\n                          />\n                          <div className=\"input-group-append\">\n                            <button className=\"btn btn-outline-success\" onClick={(e)=>{setShowCPass(!showCPass)}}>\n                              <span className={showCPass ? \"fas fa-eye-slash\" : \"fas fa-eye\"}></span>\n                            </button>\n                            <a\n                        href=\"#view_qr\"\n                        className=\"input-group-text\"\n                        style={{ border: \"1px\" }}\n                        onClick={(e) => {\n                          hsPassword(\"cpass\");\n                        }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"16\"\n                          height=\"16\"\n                          fill=\"#28a745\"\n                          className=\"bi bi-eye\"\n                          viewBox=\"0 0 16 16\"\n                        >\n                          <path d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z\" />\n                          <path d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\" />\n                        </svg>\n                      </a>\n                          </div>\n                        </div>\n                        <small\n                          id=\"cpasserr\"\n                          className=\"text-danger\"\n                          style={{ top: \"70%\" }}\n                        ></small>\n                      </div>\n                      <div className={`signupform-control`}>\n                        <label htmlFor=\"refercode\">\n                          REFERRAL CODE (OPTIONAL)\n                        </label>\n                        <input\n                          type=\"text\"\n                          name=\"refercode\"\n                          id=\"refercode\"\n                          required=\"\"\n                          value={referral_code}\n                          onChange={(e) => setReferral(e.target.value)}\n                          placeholder=\"Referral code\"\n                        />\n                        <i className=\"fas fa-check-circle\"></i>\n                        <i className=\"fas fa-exclamation-circle\"></i>\n                        <small></small>\n                      </div>\n                      <div className=\"main_terms\">\n                        <input\n                          type=\"checkbox\"\n                          id=\"agree_terms\"\n                          name=\"agree_terms\"\n                          checked={agree}\n                          onChange={(e) => setAgree(e.target.checked)}\n                        />\n                        <span className=\"terms\">\n                          I agree to {webData.website_title}'s\n                          <Link to=\"/terms-condition\">\n                            {\" \"}\n                            <span className=\"terms_condition\">\n                              {\" \"}\n                              Terms of Service\n                            </span>\n                          </Link>\n                        </span>\n                      </div>\n                      <button\n                        type=\"submit\"\n                        id=\"btn_submit\"\n                        className=\"reg_btn bg-success w-50 \"\n                        style={{ marginLeft: \"10vw\" }}\n                      >\n                        {loading ? (\n                          <i className=\"loading-icon fas fa-spinner fa-spin mr-2 \"></i>\n                        ) : null}\n                        <span id=\"reg\">REGISTER</span>\n                      </button>\n                      <Link className=\"signupform-login text-dark\" to=\"/login\">\n                        <b>Have an Account ? </b>{\" \"}\n                        <b className=\"text-success\"> LOGIN </b>\n                      </Link>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-sm\">\n            <div\n              className=\"col img_hider\"\n              style={{\n                backgroundImage: \"url(./image/BG_5.png)\",\n                height: \"100vh\",\n                backgroundSize: \"cover\",\n              }}\n            ></div>\n          </div>\n        </div>\n      </div> */}\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/BtexStaking.jsx",["696","697","698","699"],"import React, { useState, useEffect } from \"react\";\nimport Header from \"./ftx_design/Header\";\nimport \"./staking.css\";\nimport \"./stak.css\";\nimport \"./index.css\";\nimport NewsLater from \"./components/NewsLater\";\nimport { useSelector } from \"react-redux\";\nimport {div, round} from \"./redux/helpers/Math\"\nimport {\n  N_getHarvest,\n  N_getStake,\n  N_setStake,\n} from \"./redux/helpers/api_functions_new\";\nimport NotificationManager from \"react-notifications/lib/NotificationManager\";\nexport default function BtexStaking(props) {\n  const [data, setData] = useState();\n  const [oneusdtValue, setoneUsdtValue] = useState();\n  const [onebtexValue, setoneBtexValue] = useState(0);\n  const [secondusdtValue, setsecondUsdtValue] = useState();\n  const [secondbtexValue, setsecondBtexValue] = useState(0);\n  const [thirdusdtValue, setthirdUsdtValue] = useState();\n  const [thirdbtexValue, setthirdBtexValue] = useState(0);\n  const [fourthusdtValue, setfourthUsdtValue] = useState();\n  const [fourthbtexValue, setfourthBtexValue] = useState(0);\n  const [oneinrValue, setoneInrValue] = useState();\n  const [fifthbtexValue, setfifthBtexValue] = useState(0);\n  const [secondinrValue, setsecondInrValue] = useState();\n  const [sixbtexValue, setsixBtexValue] = useState(0);\n  const [thirdinrValue, setthirdInrValue] = useState();\n  const [sevenbtexValue, setsevenBtexValue] = useState(0);\n  const [fourthinrValue, setfourthInrValue] = useState();\n  const [eightbtexValue, seteightBtexValue] = useState(0);\n  const invest_type1 = 'USDT';\n  const invest_type2 = 'INR'; \n  const { user, isLoggedIn } = useSelector((state) => state.AuthReducer);\n  let { coins } = useSelector((state) => state.coinDBReducer);\n  let { webData } = useSelector((state) => state.websiteDBReducer);\n  let coins_data = Object.values(coins);\n  const usdtprice =\n    coins_data && coins_data.find((coin) => coin.symbol == \"USDT\");\n  const usdtinrprice = round(\n    usdtprice && usdtprice.raw_current_price_inr\n      ? usdtprice.raw_current_price_inr\n      : 0\n  );\n  const btexprice =\n    coins_data && coins_data.find((coin) => coin.symbol == \"BTEX\");\n  // const btexusdtprice = round(\n  //   btexprice && btexprice.current_price_usdt\n  //     ? btexprice.current_price_usdt\n  //     : 0\n  // );\n  const btexinrprice = round(\n    btexprice && btexprice.raw_current_price_inr\n      ? btexprice.current_price_inr\n      : 0\n  );\n  const btexusdtprice = div(btexinrprice,usdtinrprice);\n  useEffect(() => {\n    // function startStaking() {\n    //     stak()\n    // }\n\n    if(user?.params ? user.params.user_id : user.user_id)\n     startStaking();\n  }, []);\n\n  \n  function startStaking() {\n    // setTimeout(function () {\n      N_getStake(user?.params ? user.params.user_id : user.user_id)\n        .then((d) => {\n          if (d.status === 200 || d.status === 300) {\n            setData(d.result);\n            // stak()\n          }\n        })\n        .catch((e) => console.log(e));\n    // }, 5000);\n  }\n\n  return (\n    <>\n      <Header {...props} />\n      <NewsLater />\n\n      <div className=\"page content\">\n        <div className=\"staking-view background-mode\" >\n          <div className=\"stak-container\">\n            <div className=\"banner-stake\">\n              <div className=\"banner-stake--container\">\n                <div className=\"banner-stake__title\">\n                  <div className=\"bg-shadow\">\n                    <h3>BITFLASH Pools</h3>\n                    <div className=\"banner-stake__desc\">Stake to earn more</div>\n                  </div>\n                </div>\n                <div className=\"banner-stake__right\">\n                  <div className=\"banner-stake__total-lock\">\n                    <div className=\"label\">Total Value Locked</div>\n                    <div className=\"value\">\n                      <span>{data?.total ? round(data.total) : 0}</span>\n                    </div>\n                  </div>\n                  <div className=\"banner-stake__price-wana\">\n                    <div className=\"label\">Price BTEX</div>\n                    <div className=\"value\">\n                      <span>{round(btexusdtprice)} $</span>\n                    </div>\n                  </div>\n                  <div className=\"banner-stake__price-wana\">\n                    <div className=\"label\">Price BTEX</div>\n                    <div className=\"value\">\n                      <span>{round(btexinrprice)} ₹</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"list-staking\">\n              <div\n                className=\"row ant-row-center\"\n                style={{\n                  rowGap: \"30px\",\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                 <div className=\"col col-md-12 col-sm-12 banner-stake\" style={\n                   {    height: \"100px\",background: \"#60a7ab\"}}>\n                  <div className=\"banner-stake--container\">\n                    <div className=\"\">\n                      <div className=\"bg-shadow\">\n                        <h3>USDT Pools Minimum Stake 100 $</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-6 col-sm-12\">\n                  <div className=\"item-staking\">\n                    <div className=\"header-item\">\n                      <div className=\"logo-token\">\n                        <img src=\"/theme/img/favicon.png\" alt=\"logo-token\" />\n                      </div>\n                      <div className=\"info-pool textmode\">\n                        <h2 className=\"textmode\"> BITFLASH FARM</h2>(\n                        {webData?.stake?webData.stake[0].days : 0} days locked\n                        reward)\n                      </div>\n                    </div>\n                    <div className=\"content-item\">\n                      <div className=\"show-apr textmode\">\n                        <div className=\"title-apr\">Reward</div>\n                        <div className=\"apr\">\n                          <span>\n                            {webData?.stake?webData.stake[0].percent\n                              : 0}\n                            % of Stake Tokens\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"show-earn textmode\">\n                        <div className=\"title-earn\">Earn: </div>\n                        <div className=\"token-earn\">\n                          <h3 className=\"textmode\">BTEX</h3>\n                        </div>\n                      </div>\n                      <div className=\"wrap-amount-stake wrap-earn textmode\">\n                        <div className=\"title-amount-stake textmode\">\n                          BTEX\n                          <span className=\"badge\"> EARNED</span>\n                        </div>\n                        <div className=\"token-earn\">\n                          <h3 className=\"textmode\">\n                            {data?.one_daily_ry\n                              ? round(data.one_daily_ry)\n                              : 0}\n                          </h3>\n                        </div>\n                      </div>\n                      <div className=\"wrap-detail-and-harvest textmode\">\n                        <div className=\"btn-show-detail\">Claim Reward</div>\n                        {/* <div className=\"harvest\">\n                          <button\n                            disabled={data?.one_daily_ry > 0 ? \"\" : \"disabled\"}\n                            type=\"button\"\n                            className=\"ant-btn\"\n                            style={{ cursor: \"pointer\" }}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              if (data.one_daily_ry > 0) {\n                                N_getHarvest(\n                                  user?.params\n                                    ? user.params.user_id\n                                    : user.user_id,\n                                  webData.stake[0].days,\n                                  round(data.one_daily_ry),\n                                  invest_type1,\n                                  1\n                                ).then((d) => {\n                                  if (d.status === 200) {\n                                    N_getStake(\n                                      user?.params\n                                        ? user.params.user_id\n                                        : user.user_id\n                                    ).then((d) => {\n                                      if (d.status === 200) {\n                                        setData(d.result);\n                                      }\n                                    });\n                                    NotificationManager.success(d.message);\n                                  } else {\n                                    NotificationManager.error(d.message);\n                                  }\n                                });\n                              } else {\n                                NotificationManager.info(\"You Have not Earn\");\n                              }\n                            }}\n                          >\n                            <span>Harvest</span>\n                          </button>\n                        </div> */}\n                      </div>\n                      <div className=\"symbol-staked textmode\">\n                        {invest_type1}{\" \"}\n                        <span className=\"blur-text textmode\">\n                          AVAILABLE - BTEX STAKED{\" \"}\n                        </span>\n                      </div>\n                      <div class=\"wrap-amount-stake textmode\">\n                        <div class=\"input-stake-withdraw\">\n                          <div class=\"balance-lp-and-staked\">\n                            <div class=\"balance-lp\">\n                              <span class=\"blur-text textmode\">\n                                Available {invest_type1}:{\" \"}\n                              </span>\n                              <span\n                                class=\"textmode balance-lp-amount\"\n                                style={{ cursor: \"pointer\" }}\n                              >\n                                {data?.balance ? round(data.balance) : 0}\n                              </span>\n                            </div>\n                            <div class=\"staked-lp\">\n                              <span class=\"blur-text textmode\">Staked: </span>\n                              <span\n                                class=\"textmode staked-lp-amount\"\n                                style={{ cursor: \"pointer\" }}\n                              >\n                                {data?.one_total_stak\n                                  ? round(data.one_total_stak)\n                                  : 0}\n                              </span>\n                            </div>\n                          </div>\n                          <div class=\"input-amount\">\n                            <div class=\"input-amount-stake\">\n                              <div class=\"ant-input-number ant-input-number-lg ant-input-number-borderless\">\n                                <div class=\"ant-input-number-input-wrap\">\n                                  <input\n                                    autoComplete=\"off\"\n                                    role=\"spinbutton\"\n                                    ariaValuemin=\"0.0001\"\n                                    step=\"1\"\n                                    placeholder=\"Enter USD\"\n                                    value={oneusdtValue}\n                                    class=\"ant-input-number-input\"\n                                    onChange={(e) => {\n                                      setoneUsdtValue(\n                                        e.target.value\n                                          .replace(/[^0-9.]/g, \"\")\n                                          .replace(/(\\..*?)\\..*/g, \"$1\")\n                                      );\n                                      setoneBtexValue(\n                                        e.target.value\n                                          .replace(/[^0-9.]/g, \"\")\n                                          .replace(/(\\..*?)\\..*/g, \"$1\") /\n                                          (btexusdtprice)\n                                      );\n                                    }}\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"btn-max\">{invest_type1}</div>\n                            </div>\n                            <div class=\"input-amount-unstakek\">\n                              <div class=\"btn-max\">\n                                {round(onebtexValue)}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      {!isLoggedIn ? (\n                        <button\n                          type=\"button\"\n                          style={{ cursor: \"pointer\" }}\n                          className=\"ant-btn ant-btn-primary ant-btn-lg btn-stake\"\n                          onClick={() => {\n                            props.history.replace(\"/login\");\n                          }}\n                        >\n                          <span>Login</span>\n                        </button>\n                      ) : (\n                        <button\n                          type=\"button\"\n                          style={{ cursor: \"pointer\" }}\n                          id=\"first_stake\"\n                          className=\"ant-btn ant-btn-primary ant-btn-lg btn-stake\"\n                          onClick={(e) => {\n                            e.preventDefault();\n                            if (data.balance >= oneusdtValue) {\n                              N_setStake(\n                                user?.params\n                                  ? user.params.user_id\n                                  : user.user_id,\n                                round(oneusdtValue),\n                                round(onebtexValue),\n                                webData.stake[0].days,\n                                webData.stake[0].percent,\n                                usdtinrprice,\n                                btexusdtprice,\n                                invest_type1,\n                                1\n                              ).then((d) => {\n                                if (d.status === 200) {\n                                  N_getStake(\n                                    user?.params\n                                      ? user.params.user_id\n                                      : user.user_id\n                                  ).then((d) => {\n                                    if (d.status === 200) {\n                                      setData(d.result);\n                                    }\n                                  });\n                                  NotificationManager.success(d.message);\n                                } else {\n                                  NotificationManager.error(d.message)\n                                }\n                              });\n                            } else {\n                              NotificationManager.info(\"Your Amount too Low\");\n                            }\n                          }}\n                        >\n                          <span>Stake</span>\n                        </button>\n                      )\n                      }\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-6 col-sm-12\">\n                  <div className=\"item-staking\">\n                    <div className=\"header-item\">\n                      <div className=\"logo-token\">\n                        <img src=\"/theme/img/favicon.png\" alt=\"logo-token\" />\n                      </div>\n                      <div className=\"info-pool textmode\">\n                        <h2 className=\"textmode\"> BITFLASH FARM</h2>(\n                        {webData?.stake?webData.stake[1].days : 0} days locked\n                        reward)\n                      </div>\n                    </div>\n                    <div className=\"content-item\">\n                      <div className=\"show-apr textmode\">\n                        <div className=\"title-apr\">Reward</div>\n                        <div className=\"apr\">\n                          <span>\n                            {webData?.stake?webData.stake[1].percent\n                              : 0}\n                            % of Stake Tokens\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"show-earn textmode\">\n                        <div className=\"title-earn\">Earn: </div>\n                        <div className=\"token-earn\">\n                          <h3 className=\"textmode\">BTEX</h3>\n                        </div>\n                      </div>\n                      <div className=\"wrap-amount-stake wrap-earn textmode\">\n                        <div className=\"title-amount-stake textmode\">\n                          BTEX\n                          <span className=\"badge\"> EARNED</span>\n                        </div>\n                        <div className=\"token-earn\">\n                          <h3 className=\"textmode\">\n                            {data?.second_daily_ry\n                              ? round(data?.second_daily_ry)\n                              : 0}\n                          </h3>\n                        </div>\n                      </div>\n                      <div className=\"wrap-detail-and-harvest textmode\">\n                        <div className=\"btn-show-detail\">Claim Reward</div>\n                        {/* <div className=\"harvest\">\n                          <button\n                            disabled={\n                              data?.second_daily_ry > 0 ? \"\" : \"disabled\"\n                            }\n                            type=\"button\"\n                            className=\"ant-btn\"\n                            style={{ cursor: \"pointer\" }}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              if (data.second_daily_ry > 0) {\n                                N_getHarvest(\n                                  user?.params\n                                    ? user.params.user_id\n                                    : user.user_id,\n                                  webData.stake[1].days,\n                                  round(data.second_daily_ry),\n                                  invest_type1,\n                                  2\n                                ).then((d) => {\n                                  if (d.status === 200) {\n                                    N_getStake(\n                                      user?.params\n                                        ? user.params.user_id\n                                        : user.user_id\n                                    ).then((d) => {\n                                      if (d.status === 200) {\n                                        setData(d.result);\n                                      }\n                                    });\n                                    NotificationManager.success(d.message);\n                                  } else {\n                                    NotificationManager.error(d.message);\n                                  }\n                                });\n                              } else {\n                                NotificationManager.info(\"You Have not Earn\");\n                              }\n                            }}\n                          >\n                            <span>Harvest</span>\n                          </button>\n                        </div> */}\n                      </div>\n                      <div className=\"symbol-staked textmode\">\n                        USDT{\" \"}\n                        <span className=\"blur-text textmode\">\n                          AVAILABLE - BTEX STAKED{\" \"}\n                        </span>\n                      </div>\n                      <div class=\"wrap-amount-stake textmode\">\n                        <div class=\"input-stake-withdraw\">\n                          <div class=\"balance-lp-and-staked\">\n                            <div class=\"balance-lp\">\n                              <span class=\"blur-text textmode\">\n                                Available USDT:{\" \"}\n                              </span>\n                              <span\n                                class=\"textmode balance-lp-amount\"\n                                style={{ cursor: \"pointer\" }}\n                              >\n                                {data?.balance ? round(data.balance) : 0}\n                              </span>\n                            </div>\n                            <div class=\"staked-lp\">\n                              <span class=\"blur-text textmode\">Staked: </span>\n                              <span\n                                class=\"textmode staked-lp-amount\"\n                                style={{ cursor: \"pointer\" }}\n                              >\n                                {data?.second_total_stak\n                                  ? round(data.second_total_stak)\n                                  : 0}\n                              </span>\n                            </div>\n                          </div>\n                          <div class=\"input-amount\">\n                            <div class=\"input-amount-stake\">\n                              <div class=\"ant-input-number ant-input-number-lg ant-input-number-borderless\">\n                                <div class=\"ant-input-number-input-wrap\">\n                                  <input\n                                    autoComplete=\"off\"\n                                    role=\"spinbutton\"\n                                    ariaValuemin=\"0.0001\"\n                                    step=\"1\"\n                                    placeholder=\"Enter USD\"\n                                    value={secondusdtValue}\n                                    class=\"ant-input-number-input\"\n                                    onChange={(e) => {\n                                      setsecondUsdtValue(\n                                        e.target.value\n                                          .replace(/[^0-9.]/g, \"\")\n                                          .replace(/(\\..*?)\\..*/g, \"$1\")\n                                      );\n                                      setsecondBtexValue(\n                                        e.target.value\n                                          .replace(/[^0-9.]/g, \"\")\n                                          .replace(/(\\..*?)\\..*/g, \"$1\") /\n                                          (btexusdtprice)\n                                      );\n                                    }}\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"btn-max\">USDT</div>\n                            </div>\n                            <div class=\"input-amount-unstakek\">\n                              <div class=\"btn-max\">\n                                {round(secondbtexValue)}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      {!isLoggedIn ? (\n                        <button\n                          type=\"button\"\n                          style={{ cursor: \"pointer\" }}\n                          className=\"ant-btn ant-btn-primary ant-btn-lg btn-stake\"\n                          onClick={() => {\n                            props.history.replace(\"/login\");\n                          }}\n                        >\n                          <span>Login</span>\n                        </button>\n                      ) : (\n                        <button\n                          type=\"button\"\n                          id=\"second_stake\"\n                          style={{ cursor: \"pointer\" }}\n                          className={`ant-btn ant-btn-primary ant-btn-lg btn-stake`}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            if (data.balance >= secondusdtValue) {\n                              N_setStake(\n                                user?.params\n                                  ? user.params.user_id\n                                  : user.user_id,\n                                round(secondusdtValue),\n                                round(secondbtexValue),\n                                webData.stake[1].days,\n                                webData.stake[1].percent,\n                                usdtinrprice,\n                                btexusdtprice,\n                                invest_type1,\n                                2\n                              ).then((d) => {\n                                if (d.status === 200) {\n                                  N_getStake(\n                                    user?.params\n                                      ? user.params.user_id\n                                      : user.user_id\n                                  ).then((d) => {\n                                    if (d.status === 200) {\n                                      setData(d.result);\n                                    }\n                                  });\n                                  NotificationManager.success(d.message);\n                                } else {\n                                  NotificationManager.error(d.message)\n                                }\n                              });\n                            } else {\n                              NotificationManager.info(\"Your Amount too Low\");\n                            }\n                          }}\n                        >\n                          <span>Stake</span>\n                        </button>\n                        )\n                        }\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-6 col-sm-12\">\n                  <div className=\"item-staking\">\n                    <div className=\"header-item\">\n                      <div className=\"logo-token\">\n                        <img src=\"/theme/img/favicon.png\" alt=\"logo-token\" />\n                      </div>\n                      <div className=\"info-pool textmode\">\n                        <h2 className=\"textmode\"> BITFLASH FARM</h2>(\n                        {webData?.stake?webData.stake[2].days : 0} days locked\n                        reward)\n                      </div>\n                    </div>\n                    <div className=\"content-item\">\n                      <div className=\"show-apr textmode\">\n                        <div className=\"title-apr\">Reward</div>\n                        <div className=\"apr\">\n                          <span>\n                            {webData?.stake?webData.stake[2].percent\n                              : 0}\n                            % of Stake Tokens\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"show-earn textmode\">\n                        <div className=\"title-earn\">Earn: </div>\n                        <div className=\"token-earn\">\n                          <h3 className=\"textmode\">BTEX</h3>\n                        </div>\n                      </div>\n                      <div className=\"wrap-amount-stake wrap-earn textmode\">\n                        <div className=\"title-amount-stake textmode\">\n                          BTEX\n                          <span className=\"badge\"> EARNED</span>\n                        </div>\n                        <div className=\"token-earn\">\n                          <h3 className=\"textmode\">\n                            {data?.third_daily_ry\n                              ? round(data?.third_daily_ry)\n                              : 0}\n                          </h3>\n                        </div>\n                      </div>\n                      <div className=\"wrap-detail-and-harvest textmode\">\n                        <div className=\"btn-show-detail\">Claim Reward</div>\n                        {/* <div className=\"harvest\">\n                          <button\n                            disabled={\n                              data?.third_daily_ry > 0 ? \"\" : \"disabled\"\n                            }\n                            type=\"button\"\n                            style={{ cursor: \"pointer\" }}\n                            className=\"ant-btn\"\n                            onClick={(e) => {\n                              e.preventDefault();\n                              if (data.third_daily_ry > 0) {\n                                N_getHarvest(\n                                  user?.params\n                                    ? user.params.user_id\n                                    : user.user_id,\n                                  webData.stake[2].days,\n                                  round(data.third_daily_ry),\n                                  invest_type1,\n                                  3\n                                ).then((d) => {\n                                  if (d.status === 200) {\n                                    N_getStake(\n                                      user?.params\n                                        ? user.params.user_id\n                                        : user.user_id\n                                    ).then((d) => {\n                                      if (d.status === 200) {\n                                        setData(d.result);\n                                      }\n                                    });\n                                    NotificationManager.success(d.message);\n                                  } else {\n                                    NotificationManager.error(d.message);\n                                  }\n                                });\n                              } else {\n                                NotificationManager.info(\"You Have not Earn\");\n                              }\n                            }}\n                          >\n                            <span>Harvest</span>\n                          </button>\n                        </div> */}\n                      </div>\n                      <div className=\"symbol-staked textmode\">\n                        USDT{\" \"}\n                        <span className=\"blur-text textmode\">\n                          AVAILABLE - BTEX STAKED{\" \"}\n                        </span>\n                      </div>\n                      <div class=\"wrap-amount-stake textmode\">\n                        <div class=\"input-stake-withdraw\">\n                          <div class=\"balance-lp-and-staked\">\n                            <div class=\"balance-lp\">\n                              <span class=\"blur-text textmode\">\n                                Available USDT:{\" \"}\n                              </span>\n                              <span\n                                class=\"textmode balance-lp-amount\"\n                                style={{ cursor: \"pointer\" }}\n                              >\n                                {data?.balance ? round(data.balance) : 0}\n                              </span>\n                            </div>\n                            <div class=\"staked-lp\">\n                              <span class=\"blur-text textmode\">Staked: </span>\n                              <span\n                                class=\"textmode staked-lp-amount\"\n                                style={{ cursor: \"pointer\" }}\n                              >\n                                {data?.third_total_stak\n                                  ? round(data.third_total_stak)\n                                  : 0}\n                              </span>\n                            </div>\n                          </div>\n                          <div class=\"input-amount\">\n                            <div class=\"input-amount-stake\">\n                              <div class=\"ant-input-number ant-input-number-lg ant-input-number-borderless\">\n                                <div class=\"ant-input-number-input-wrap\">\n                                  <input\n                                    autoComplete=\"off\"\n                                    role=\"spinbutton\"\n                                    ariaValuemin=\"0.0001\"\n                                    step=\"1\"\n                                    placeholder=\"Enter USD\"\n                                    value={thirdusdtValue}\n                                    class=\"ant-input-number-input\"\n                                    onChange={(e) => {\n                                      setthirdUsdtValue(\n                                        e.target.value\n                                          .replace(/[^0-9.]/g, \"\")\n                                          .replace(/(\\..*?)\\..*/g, \"$1\")\n                                      );\n                                      setthirdBtexValue(\n                                        e.target.value\n                                          .replace(/[^0-9.]/g, \"\")\n                                          .replace(/(\\..*?)\\..*/g, \"$1\") /\n                                          (btexusdtprice)\n                                      );\n                                    }}\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"btn-max\">USDT</div>\n                            </div>\n                            <div class=\"input-amount-unstakek\">\n                              <div class=\"btn-max\">\n                                {round(thirdbtexValue)}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      {!isLoggedIn ? (\n                        <button\n                          type=\"button\"\n                          style={{ cursor: \"pointer\" }}\n                          className=\"ant-btn ant-btn-primary ant-btn-lg btn-stake\"\n                          onClick={() => {\n                            props.history.replace(\"/login\");\n                          }}\n                        >\n                          <span>Login</span>\n                        </button>\n                      ) : (\n                        <button\n                          type=\"button\"\n                          id=\"third_stake\"\n                          style={{ cursor: \"pointer\" }}\n                          className=\"ant-btn ant-btn-primary ant-btn-lg btn-stake\"\n                          onClick={(e) => {\n                            e.preventDefault();\n                            if (data.balance >= thirdusdtValue) {\n                              N_setStake(\n                                user?.params\n                                  ? user.params.user_id\n                                  : user.user_id,\n                                round(thirdusdtValue),\n                                round(thirdbtexValue),\n                                webData.stake[2].days,\n                                webData.stake[2].percent,\n                                usdtinrprice,\n                                btexusdtprice,\n                                invest_type1,\n                                3\n                              ).then((d) => {\n                                if (d.status === 200) {\n                                  N_getStake(\n                                    user?.params\n                                      ? user.params.user_id\n                                      : user.user_id\n                                  ).then((d) => {\n                                    if (d.status === 200) {\n                                      setData(d.result);\n                                    }\n                                  });\n                                  NotificationManager.success(d.message);\n                                } else {\n                                  NotificationManager.error(d.message)\n                                }\n                              });\n                            } else {\n                              NotificationManager.info(\"Your Amount too Low\");\n                            }\n                          }}\n                        >\n                          <span>Stake</span>\n                        </button>\n                      )\n                      }\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-6 col-sm-12\">\n                  <div className=\"item-staking\">\n                    <div className=\"header-item\">\n                      <div className=\"logo-token\">\n                        <img src=\"/theme/img/favicon.png\" alt=\"logo-token\" />\n                      </div>\n                      <div className=\"info-pool textmode\">\n                        <h2 className=\"textmode\"> BITFLASH FARM</h2>(\n                        {webData?.stake?webData.stake[3].days : 0} days locked\n                        reward)\n                      </div>\n                    </div>\n                    <div className=\"content-item\">\n                      <div className=\"show-apr textmode\">\n                        <div className=\"title-apr\">Reward</div>\n                        <div className=\"apr\">\n                          <span>\n                            {webData?.stake?webData.stake[3].percent\n                              : 0}\n                            % of Stake Tokens\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"show-earn textmode\">\n                        <div className=\"title-earn\">Earn: </div>\n                        <div className=\"token-earn\">\n                          <h3 className=\"textmode\">BTEX</h3>\n                        </div>\n                      </div>\n                      <div className=\"wrap-amount-stake wrap-earn textmode\">\n                        <div className=\"title-amount-stake textmode\">\n                          BTEX\n                          <span className=\"badge\"> EARNED</span>\n                        </div>\n                        <div className=\"token-earn\">\n                          <h3 className=\"textmode\">\n                            {data?.fourth_daily_ry\n                              ? round(data?.fourth_daily_ry)\n                              : 0}\n                          </h3>\n                        </div>\n                      </div>\n                      <div className=\"wrap-detail-and-harvest textmode\">\n                        <div className=\"btn-show-detail\">Claim Reward</div>\n                        {/* <div className=\"harvest\">\n                          <button\n                            disabled={\n                              data?.fourth_daily_ry > 0 ? \"\" : \"disabled\"\n                            }\n                            type=\"button\"\n                            className=\"ant-btn\"\n                            style={{ cursor: \"pointer\" }}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              if (data.fourth_daily_ry > 0) {\n                                N_getHarvest(\n                                  user?.params\n                                    ? user.params.user_id\n                                    : user.user_id,\n                                  webData.stake[3].days,\n                                  round(data.fourth_daily_ry),\n                                  invest_type1,\n                                  4\n                                ).then((d) => {\n                                  if (d.status === 200) {\n                                    N_getStake(\n                                      user?.params\n                                        ? user.params.user_id\n                                        : user.user_id\n                                    ).then((d) => {\n                                      if (d.status === 200) {\n                                        setData(d.result);\n                                      }\n                                    });\n                                    NotificationManager.success(d.message);\n                                  } else {\n                                    NotificationManager.error(d.message);\n                                  }\n                                });\n                              } else {\n                                NotificationManager.info(\"You Have not Earn\");\n                              }\n                            }}\n                          >\n                            <span>Harvest</span>\n                          </button>\n                        </div> */}\n                      </div>\n                      <div className=\"symbol-staked textmode\">\n                        USDT{\" \"}\n                        <span className=\"blur-text textmode\">\n                          AVAILABLE - BTEX STAKED{\" \"}\n                        </span>\n                      </div>\n                      <div class=\"wrap-amount-stake textmode\">\n                        <div class=\"input-stake-withdraw\">\n                          <div class=\"balance-lp-and-staked\">\n                            <div class=\"balance-lp\">\n                              <span class=\"blur-text textmode\">\n                                Available USDT:{\" \"}\n                              </span>\n                              <span\n                                class=\"textmode balance-lp-amount\"\n                                style={{ cursor: \"pointer\" }}\n                              >\n                                {data?.balance ? round(data.balance) : 0}\n                              </span>\n                            </div>\n                            <div class=\"staked-lp\">\n                              <span class=\"blur-text textmode\">Staked: </span>\n                              <span class=\"textmode staked-lp-amount\">\n                                {data?.fourth_total_stak\n                                  ? round(data.fourth_total_stak)\n                                  : 0}\n                              </span>\n                            </div>\n                          </div>\n                          <div class=\"input-amount\">\n                            <div class=\"input-amount-stake\">\n                              <div class=\"ant-input-number ant-input-number-lg ant-input-number-borderless\">\n                                <div class=\"ant-input-number-input-wrap\">\n                                  <input\n                                    autoComplete=\"off\"\n                                    role=\"spinbutton\"\n                                    ariaValuemin=\"0.0001\"\n                                    step=\"1\"\n                                    placeholder=\"Enter USD\"\n                                    value={fourthusdtValue}\n                                    class=\"ant-input-number-input\"\n                                    onChange={(e) => {\n                                      setfourthUsdtValue(\n                                        e.target.value\n                                          .replace(/[^0-9.]/g, \"\")\n                                          .replace(/(\\..*?)\\..*/g, \"$1\")\n                                      );\n                                      setfourthBtexValue(\n                                        e.target.value\n                                          .replace(/[^0-9.]/g, \"\")\n                                          .replace(/(\\..*?)\\..*/g, \"$1\") /\n                                          (btexusdtprice)\n                                      );\n                                    }}\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"btn-max\">USDT</div>\n                            </div>\n                            <div class=\"input-amount-unstakek\">\n                              <div class=\"btn-max\">\n                                {round(fourthbtexValue)}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      {!isLoggedIn ? (\n                        <button\n                          type=\"button\"\n                          style={{ cursor: \"pointer\" }}\n                          className=\"ant-btn ant-btn-primary ant-btn-lg btn-stake\"\n                          onClick={() => {\n                            props.history.replace(\"/login\");\n                          }}\n                        >\n                          <span>Login</span>\n                        </button>\n                      ) : (\n                        <button\n                          type=\"button\"\n                          id=\"fourth_stake\"\n                          style={{ cursor: \"pointer\" }}\n                          className=\"ant-btn ant-btn-primary ant-btn-lg btn-stake\"\n                          onClick={(e) => {\n                            e.preventDefault();\n                            if (data.balance >= fourthusdtValue) {\n                              N_setStake(\n                                user?.params\n                                  ? user.params.user_id\n                                  : user.user_id,\n                                  round(fourthusdtValue),\n                                  round(fourthbtexValue),\n                                webData.stake[3].days,\n                                webData.stake[3].percent,\n                                usdtinrprice,\n                                btexusdtprice,\n                                invest_type1,\n                                4\n                              ).then((d) => {\n                                if (d.status === 200) {\n                                  N_getStake(\n                                    user?.params\n                                      ? user.params.user_id\n                                      : user.user_id\n                                  ).then((d) => {\n                                    if (d.status === 200) {\n                                      setData(d.result);\n                                    }\n                                  });\n                                  NotificationManager.success(d.message);\n                                } else {\n                                  NotificationManager.error(d.message)\n                                }\n                              });\n                            } else {\n                              NotificationManager.info(\"Your Amount too Low\");\n                            }\n                          }}\n                        >\n                          <span>Stake</span>\n                        </button>\n                      )\n                      }\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col col-md-12 col-sm-12 banner-stake\" style={\n                   {    height: \"100px\",background: \"#60a7ab\"}}>\n                  <div className=\"banner-stake--container\">\n                    <div className=\"\">\n                      <div className=\"bg-shadow\">\n                        <h3>INR Pools Minimum Stake 1000 ₹</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-6 col-sm-12\">\n                  <div className=\"item-staking\">\n                    <div className=\"header-item\">\n                      <div className=\"logo-token\">\n                        <img src=\"/theme/img/favicon.png\" alt=\"logo-token\" />\n                      </div>\n                      <div className=\"info-pool textmode\">\n                        <h2 className=\"textmode\"> BITFLASH FARM</h2>(\n                        {webData?.stake?webData.stake[0].days : 0} days locked\n                        reward)\n                      </div>\n                    </div>\n                    <div className=\"content-item\">\n                      <div className=\"show-apr textmode\">\n                        <div className=\"title-apr\">Reward</div>\n                        <div className=\"apr\">\n                          <span>\n                            {webData?.stake?webData.stake[0].percent\n                              : 0}\n                            % of Stake Tokens\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"show-earn textmode\">\n                        <div className=\"title-earn\">Earn: </div>\n                        <div className=\"token-earn\">\n                          <h3 className=\"textmode\">BTEX</h3>\n                        </div>\n                      </div>\n                      <div className=\"wrap-amount-stake wrap-earn textmode\">\n                        <div className=\"title-amount-stake textmode\">\n                          BTEX\n                          <span className=\"badge\"> EARNED</span>\n                        </div>\n                        <div className=\"token-earn\">\n                          <h3 className=\"textmode\">\n                            {data?.fifth_daily_ry\n                              ? round(data?.fifth_daily_ry)\n                              : 0}\n                          </h3>\n                        </div>\n                      </div>\n                      <div className=\"wrap-detail-and-harvest textmode\">\n                        <div className=\"btn-show-detail\">Claim Reward</div>\n                        {/* <div className=\"harvest\">\n                          <button\n                            disabled={\n                              data?.fifth_daily_ry > 0 ? \"\" : \"disabled\"\n                            }\n                            type=\"button\"\n                            className=\"ant-btn\"\n                            style={{ cursor: \"pointer\" }}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              if (data.fifth_daily_ry > 0) {\n                                N_getHarvest(\n                                  user?.params\n                                    ? user.params.user_id\n                                    : user.user_id,\n                                  webData.stake[0].days,\n                                  round(data.fifth_daily_ry),\n                                  invest_type2,\n                                  1\n                                ).then((d) => {\n                                  if (d.status === 200) {\n                                    N_getStake(\n                                      user?.params\n                                        ? user.params.user_id\n                                        : user.user_id\n                                    ).then((d) => {\n                                      if (d.status === 200) {\n                                        setData(d.result);\n                                      }\n                                    });\n                                    NotificationManager.success(d.message);\n                                  } else {\n                                    NotificationManager.error(d.message);\n                                  }\n                                });\n                              } else {\n                                NotificationManager.info(\"You Have not Earn\");\n                              }\n                            }}\n                          >\n                            <span>Harvest</span>\n                          </button>\n                        </div> */}\n                      </div>\n                      <div className=\"symbol-staked textmode\">\n                        {invest_type2}{\" \"}\n                        <span className=\"blur-text textmode\">\n                          AVAILABLE - BTEX STAKED{\" \"}\n                        </span>\n                      </div>\n                      <div class=\"wrap-amount-stake textmode\">\n                        <div class=\"input-stake-withdraw\">\n                          <div class=\"balance-lp-and-staked\">\n                            <div class=\"balance-lp\">\n                              <span class=\"blur-text textmode\">\n                                Available {invest_type2}:{\" \"}\n                              </span>\n                              <span\n                                class=\"textmode balance-lp-amount\"\n                                style={{ cursor: \"pointer\" }}\n                              >\n                                {data?.inrbalance ? round(data.inrbalance) : 0}\n                              </span>\n                            </div>\n                            <div class=\"staked-lp\">\n                              <span class=\"blur-text textmode\">Staked: </span>\n                              <span class=\"textmode staked-lp-amount\">\n                                {data?.fifth_total_stak\n                                  ? round(data.fifth_total_stak)\n                                  : 0}\n                              </span>\n                            </div>\n                          </div>\n                          <div class=\"input-amount\">\n                            <div class=\"input-amount-stake\">\n                              <div class=\"ant-input-number ant-input-number-lg ant-input-number-borderless\">\n                                <div class=\"ant-input-number-input-wrap\">\n                                  <input\n                                    autoComplete=\"off\"\n                                    role=\"spinbutton\"\n                                    ariaValuemin=\"0.0001\"\n                                    step=\"1\"\n                                    placeholder=\"Enter INR\"\n                                    value={oneinrValue}\n                                    class=\"ant-input-number-input\"\n                                    onChange={(e) => {\n                                      setoneInrValue(\n                                        e.target.value\n                                          .replace(/[^0-9.]/g, \"\")\n                                          .replace(/(\\..*?)\\..*/g, \"$1\")\n                                      );\n                                      setfifthBtexValue(\n                                        e.target.value\n                                          .replace(/[^0-9.]/g, \"\")\n                                          .replace(/(\\..*?)\\..*/g, \"$1\") /\n                                          (btexinrprice)\n                                      );\n                                    }}\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"btn-max\">{invest_type2}</div>\n                            </div>\n                            <div class=\"input-amount-unstakek\">\n                              <div class=\"btn-max\">\n                                {round(fifthbtexValue)}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      {!isLoggedIn ? (\n                        <button\n                          type=\"button\"\n                          style={{ cursor: \"pointer\" }}\n                          className=\"ant-btn ant-btn-primary ant-btn-lg btn-stake\"\n                          onClick={() => {\n                            props.history.replace(\"/login\");\n                          }}\n                        >\n                          <span>Login</span>\n                        </button>\n                      ) : (\n                        <button\n                          type=\"button\"\n                          id=\"fifth_stake\"\n                          style={{ cursor: \"pointer\" }}\n                          className=\"ant-btn ant-btn-primary ant-btn-lg btn-stake\"\n                          onClick={(e) => {\n                            e.preventDefault();\n                            if (data.inrbalance >= oneinrValue) {\n                              N_setStake(\n                                user?.params\n                                  ? user.params.user_id\n                                  : user.user_id,\n                                  round(oneinrValue),\n                                  round(fifthbtexValue),\n                                webData.stake[0].days,\n                                webData.stake[0].percent,\n                                usdtinrprice,\n                                btexinrprice,\n                                invest_type2,\n                                1\n                              ).then((d) => {\n                                if (d.status === 200) {\n                                  N_getStake(\n                                    user?.params\n                                      ? user.params.user_id\n                                      : user.user_id\n                                  ).then((d) => {\n                                    if (d.status === 200) {\n                                      setData(d.result);\n                                    }\n                                  });\n                                  NotificationManager.success(d.message);\n                                } else {\n                                  NotificationManager.error(d.message)\n                                }\n                              });\n                            } else {\n                              NotificationManager.info(\"Your Amount too Low\");\n                            }\n                          }}\n                        >\n                          <span>Stake</span>\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-6 col-sm-12\">\n                  <div className=\"item-staking\">\n                    <div className=\"header-item\">\n                      <div className=\"logo-token\">\n                        <img src=\"/theme/img/favicon.png\" alt=\"logo-token\" />\n                      </div>\n                      <div className=\"info-pool textmode\">\n                        <h2 className=\"textmode\"> BITFLASH FARM</h2>(\n                        {webData?.stake?webData.stake[1].days : 0} days locked\n                        reward)\n                      </div>\n                    </div>\n                    <div className=\"content-item\">\n                      <div className=\"show-apr textmode\">\n                        <div className=\"title-apr\">Reward</div>\n                        <div className=\"apr\">\n                          <span>\n                            {webData?.stake?webData.stake[1].percent\n                              : 0}\n                            % of Stake Tokens\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"show-earn textmode\">\n                        <div className=\"title-earn\">Earn: </div>\n                        <div className=\"token-earn\">\n                          <h3 className=\"textmode\">BTEX</h3>\n                        </div>\n                      </div>\n                      <div className=\"wrap-amount-stake wrap-earn textmode\">\n                        <div className=\"title-amount-stake textmode\">\n                          BTEX\n                          <span className=\"badge\"> EARNED</span>\n                        </div>\n                        <div className=\"token-earn\">\n                          <h3 className=\"textmode\">\n                            {data?.six_daily_ry\n                              ? round(data?.six_daily_ry)\n                              : 0}\n                          </h3>\n                        </div>\n                      </div>\n                      <div className=\"wrap-detail-and-harvest textmode\">\n                        <div className=\"btn-show-detail\">Claim Reward</div>\n                        {/* <div className=\"harvest\">\n                          <button\n                            disabled={\n                              data?.six_daily_ry > 0 ? \"\" : \"disabled\"\n                            }\n                            type=\"button\"\n                            className=\"ant-btn\"\n                            style={{ cursor: \"pointer\" }}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              if (data.six_daily_ry > 0) {\n                                N_getHarvest(\n                                  user?.params\n                                    ? user.params.user_id\n                                    : user.user_id,\n                                  webData.stake[1].days,\n                                  round(data.six_daily_ry),\n                                  invest_type2,\n                                  2\n                                ).then((d) => {\n                                  if (d.status === 200) {\n                                    N_getStake(\n                                      user?.params\n                                        ? user.params.user_id\n                                        : user.user_id\n                                    ).then((d) => {\n                                      if (d.status === 200) {\n                                        setData(d.result);\n                                      }\n                                    });\n                                    NotificationManager.success(d.message);\n                                  } else {\n                                    NotificationManager.error(d.message);\n                                  }\n                                });\n                              } else {\n                                NotificationManager.info(\"You Have not Earn\");\n                              }\n                            }}\n                          >\n                            <span>Harvest</span>\n                          </button>\n                        </div> */}\n                      </div>\n                      <div className=\"symbol-staked textmode\">\n                        {invest_type2}{\" \"}\n                        <span className=\"blur-text textmode\">\n                          AVAILABLE - BTEX STAKED{\" \"}\n                        </span>\n                      </div>\n                      <div class=\"wrap-amount-stake textmode\">\n                        <div class=\"input-stake-withdraw\">\n                          <div class=\"balance-lp-and-staked\">\n                            <div class=\"balance-lp\">\n                              <span class=\"blur-text textmode\">\n                                Available {invest_type2}:{\" \"}\n                              </span>\n                              <span\n                                class=\"textmode balance-lp-amount\"\n                                style={{ cursor: \"pointer\" }}\n                              >\n                                {data?.inrbalance ? round(data.inrbalance) : 0}\n                              </span>\n                            </div>\n                            <div class=\"staked-lp\">\n                              <span class=\"blur-text textmode\">Staked: </span>\n                              <span class=\"textmode staked-lp-amount\">\n                                {data?.six_total_stak\n                                  ? round(data.six_total_stak)\n                                  : 0}\n                              </span>\n                            </div>\n                          </div>\n                          <div class=\"input-amount\">\n                            <div class=\"input-amount-stake\">\n                              <div class=\"ant-input-number ant-input-number-lg ant-input-number-borderless\">\n                                <div class=\"ant-input-number-input-wrap\">\n                                  <input\n                                    autoComplete=\"off\"\n                                    role=\"spinbutton\"\n                                    ariaValuemin=\"0.0001\"\n                                    step=\"1\"\n                                    placeholder=\"Enter INR\"\n                                    value={secondinrValue}\n                                    class=\"ant-input-number-input\"\n                                    onChange={(e) => {\n                                      setsecondInrValue(\n                                        e.target.value\n                                          .replace(/[^0-9.]/g, \"\")\n                                          .replace(/(\\..*?)\\..*/g, \"$1\")\n                                      );\n                                      setsixBtexValue(\n                                        e.target.value\n                                          .replace(/[^0-9.]/g, \"\")\n                                          .replace(/(\\..*?)\\..*/g, \"$1\") /\n                                          (btexinrprice)\n                                      );\n                                    }}\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"btn-max\">{invest_type2}</div>\n                            </div>\n                            <div class=\"input-amount-unstakek\">\n                              <div class=\"btn-max\">\n                                {round(sixbtexValue)}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      {!isLoggedIn ? (\n                        <button\n                          type=\"button\"\n                          style={{ cursor: \"pointer\" }}\n                          className=\"ant-btn ant-btn-primary ant-btn-lg btn-stake\"\n                          onClick={() => {\n                            props.history.replace(\"/login\");\n                          }}\n                        >\n                          <span>Login</span>\n                        </button>\n                      ) : (\n                        <button\n                          type=\"button\"\n                          id=\"six_stake\"\n                          style={{ cursor: \"pointer\" }}\n                          className=\"ant-btn ant-btn-primary ant-btn-lg btn-stake\"\n                          onClick={(e) => {\n                            e.preventDefault();\n                            if (data.inrbalance >= secondinrValue) {\n                              N_setStake(\n                                user?.params\n                                  ? user.params.user_id\n                                  : user.user_id,\n                                  round(secondinrValue),\n                                  round(sixbtexValue),\n                                webData.stake[1].days,\n                                webData.stake[1].percent,\n                                usdtinrprice,\n                                btexinrprice,\n                                invest_type2,\n                                2\n                              ).then((d) => {\n                                if (d.status === 200) {\n                                  N_getStake(\n                                    user?.params\n                                      ? user.params.user_id\n                                      : user.user_id\n                                  ).then((d) => {\n                                    if (d.status === 200) {\n                                      setData(d.result);\n                                    }\n                                  });\n                                  NotificationManager.success(d.message);\n                                } else {\n                                  NotificationManager.error(d.message)\n                                }\n                              });\n                            } else {\n                              NotificationManager.info(\"Your Amount too Low\");\n                            }\n                          }}\n                        >\n                          <span>Stake</span>\n                        </button>\n                      )\n                      }\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-6 col-sm-12\">\n                  <div className=\"item-staking\">\n                    <div className=\"header-item\">\n                      <div className=\"logo-token\">\n                        <img src=\"/theme/img/favicon.png\" alt=\"logo-token\" />\n                      </div>\n                      <div className=\"info-pool textmode\">\n                        <h2 className=\"textmode\"> BITFLASH FARM</h2>(\n                        {webData?.stake?webData.stake[2].days : 0} days locked\n                        reward)\n                      </div>\n                    </div>\n                    <div className=\"content-item\">\n                      <div className=\"show-apr textmode\">\n                        <div className=\"title-apr\">Reward</div>\n                        <div className=\"apr\">\n                          <span>\n                            {webData?.stake?webData.stake[2].percent\n                              : 0}\n                            % of Stake Tokens\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"show-earn textmode\">\n                        <div className=\"title-earn\">Earn: </div>\n                        <div className=\"token-earn\">\n                          <h3 className=\"textmode\">BTEX</h3>\n                        </div>\n                      </div>\n                      <div className=\"wrap-amount-stake wrap-earn textmode\">\n                        <div className=\"title-amount-stake textmode\">\n                          BTEX\n                          <span className=\"badge\"> EARNED</span>\n                        </div>\n                        <div className=\"token-earn\">\n                          <h3 className=\"textmode\">\n                            {data?.seven_daily_ry\n                              ? round(data?.seven_daily_ry)\n                              : 0}\n                          </h3>\n                        </div>\n                      </div>\n                      <div className=\"wrap-detail-and-harvest textmode\">\n                        <div className=\"btn-show-detail\">Claim Reward</div>\n                        {/* <div className=\"harvest\">\n                          <button\n                            disabled={\n                              data?.seven_daily_ry > 0 ? \"\" : \"disabled\"\n                            }\n                            type=\"button\"\n                            className=\"ant-btn\"\n                            style={{ cursor: \"pointer\" }}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              if (data.seven_daily_ry > 0) {\n                                N_getHarvest(\n                                  user?.params\n                                    ? user.params.user_id\n                                    : user.user_id,\n                                  webData.stake[2].days,\n                                  round(data.seven_daily_ry),\n                                  invest_type2,\n                                  3\n                                ).then((d) => {\n                                  if (d.status === 200) {\n                                    N_getStake(\n                                      user?.params\n                                        ? user.params.user_id\n                                        : user.user_id\n                                    ).then((d) => {\n                                      if (d.status === 200) {\n                                        setData(d.result);\n                                      }\n                                    });\n                                    NotificationManager.success(d.message);\n                                  } else {\n                                    NotificationManager.error(d.message);\n                                  }\n                                });\n                              } else {\n                                NotificationManager.info(\"You Have not Earn\");\n                              }\n                            }}\n                          >\n                            <span>Harvest</span>\n                          </button>\n                        </div> */}\n                      </div>\n                      <div className=\"symbol-staked textmode\">\n                        {invest_type2}{\" \"}\n                        <span className=\"blur-text textmode\">\n                          AVAILABLE - BTEX STAKED{\" \"}\n                        </span>\n                      </div>\n                      <div class=\"wrap-amount-stake textmode\">\n                        <div class=\"input-stake-withdraw\">\n                          <div class=\"balance-lp-and-staked\">\n                            <div class=\"balance-lp\">\n                              <span class=\"blur-text textmode\">\n                                Available {invest_type2}:{\" \"}\n                              </span>\n                              <span\n                                class=\"textmode balance-lp-amount\"\n                                style={{ cursor: \"pointer\" }}\n                              >\n                                {data?.inrbalance ? round(data.inrbalance) : 0}\n                              </span>\n                            </div>\n                            <div class=\"staked-lp\">\n                              <span class=\"blur-text textmode\">Staked: </span>\n                              <span class=\"textmode staked-lp-amount\">\n                                {data?.seven_total_stak\n                                  ? round(data.seven_total_stak)\n                                  : 0}\n                              </span>\n                            </div>\n                          </div>\n                          <div class=\"input-amount\">\n                            <div class=\"input-amount-stake\">\n                              <div class=\"ant-input-number ant-input-number-lg ant-input-number-borderless\">\n                                <div class=\"ant-input-number-input-wrap\">\n                                  <input\n                                    autoComplete=\"off\"\n                                    role=\"spinbutton\"\n                                    ariaValuemin=\"0.0001\"\n                                    step=\"1\"\n                                    placeholder=\"Enter INR\"\n                                    value={thirdinrValue}\n                                    class=\"ant-input-number-input\"\n                                    onChange={(e) => {\n                                      setthirdInrValue(\n                                        e.target.value\n                                          .replace(/[^0-9.]/g, \"\")\n                                          .replace(/(\\..*?)\\..*/g, \"$1\")\n                                      );\n                                      setsevenBtexValue(\n                                        e.target.value\n                                          .replace(/[^0-9.]/g, \"\")\n                                          .replace(/(\\..*?)\\..*/g, \"$1\") /\n                                          (btexinrprice)\n                                      );\n                                    }}\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"btn-max\">{invest_type2}</div>\n                            </div>\n                            <div class=\"input-amount-unstakek\">\n                              <div class=\"btn-max\">\n                                {sevenbtexValue.toFixed(4)}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      {!isLoggedIn ? (\n                        <button\n                          type=\"button\"\n                          style={{ cursor: \"pointer\" }}\n                          className=\"ant-btn ant-btn-primary ant-btn-lg btn-stake\"\n                          onClick={() => {\n                            props.history.replace(\"/login\");\n                          }}\n                        >\n                          <span>Login</span>\n                        </button>\n                      ) : (\n                        <button\n                          type=\"button\"\n                          id=\"seven_stake\"\n                          style={{ cursor: \"pointer\" }}\n                          className=\"ant-btn ant-btn-primary ant-btn-lg btn-stake\"\n                          onClick={(e) => {\n                            e.preventDefault();\n                            if (data.inrbalance >= thirdinrValue) {\n                              N_setStake(\n                                user?.params\n                                  ? user.params.user_id\n                                  : user.user_id,\n                                  round(thirdinrValue),\n                                  round(sevenbtexValue),\n                                webData.stake[2].days,\n                                webData.stake[2].percent,\n                                usdtinrprice,\n                                btexinrprice,\n                                invest_type2,\n                                3\n                              ).then((d) => {\n                                if (d.status === 200) {\n                                  N_getStake(\n                                    user?.params\n                                      ? user.params.user_id\n                                      : user.user_id\n                                  ).then((d) => {\n                                    if (d.status === 200) {\n                                      setData(d.result);\n                                    }\n                                  });\n                                  NotificationManager.success(d.message);\n                                } else {\n                                  NotificationManager.error(d.message)\n                                }\n                              });\n                            } else {\n                              NotificationManager.info(\"Your Amount too Low\");\n                            }\n                          }}\n                        >\n                          <span>Stake</span>\n                        </button>\n                      )\n                      }\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-3 col-md-6 col-sm-12\">\n                  <div className=\"item-staking\">\n                    <div className=\"header-item\">\n                      <div className=\"logo-token\">\n                        <img src=\"/theme/img/favicon.png\" alt=\"logo-token\" />\n                      </div>\n                      <div className=\"info-pool textmode\">\n                        <h2 className=\"textmode\"> BITFLASH FARM</h2>(\n                        {webData?.stake?webData.stake[3].days : 0} days locked\n                        reward)\n                      </div>\n                    </div>\n                    <div className=\"content-item\">\n                      <div className=\"show-apr textmode\">\n                        <div className=\"title-apr\">Reward</div>\n                        <div className=\"apr\">\n                          <span>\n                            {webData?.stake?webData.stake[3].percent\n                              : 0}\n                            % of Stake Tokens\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"show-earn textmode\">\n                        <div className=\"title-earn\">Earn: </div>\n                        <div className=\"token-earn\">\n                          <h3 className=\"textmode\">BTEX</h3>\n                        </div>\n                      </div>\n                      <div className=\"wrap-amount-stake wrap-earn textmode\">\n                        <div className=\"title-amount-stake textmode\">\n                          BTEX\n                          <span className=\"badge\"> EARNED</span>\n                        </div>\n                        <div className=\"token-earn\">\n                          <h3 className=\"textmode\">\n                            {data?.eight_daily_ry\n                              ? round(data?.eight_daily_ry)\n                              : 0}\n                          </h3>\n                        </div>\n                      </div>\n                      <div className=\"wrap-detail-and-harvest textmode\">\n                        <div className=\"btn-show-detail\">Claim Reward</div>\n                        {/* <div className=\"harvest\">\n                          <button\n                            disabled={\n                              data?.eight_daily_ry > 0 ? \"\" : \"disabled\"\n                            }\n                            type=\"button\"\n                            className=\"ant-btn\"\n                            style={{ cursor: \"pointer\" }}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              if (data.eight_daily_ry > 0) {\n                                N_getHarvest(\n                                  user?.params\n                                    ? user.params.user_id\n                                    : user.user_id,\n                                  webData.stake[3].days,\n                                  round(data.eight_daily_ry),\n                                  invest_type2,\n                                  4\n                                ).then((d) => {\n                                  if (d.status === 200) {\n                                    N_getStake(\n                                      user?.params\n                                        ? user.params.user_id\n                                        : user.user_id\n                                    ).then((d) => {\n                                      if (d.status === 200) {\n                                        setData(d.result);\n                                      }\n                                    });\n                                    NotificationManager.success(d.message);\n                                  } else {\n                                    NotificationManager.error(d.message);\n                                  }\n                                });\n                              } else {\n                                NotificationManager.info(\"You Have not Earn\");\n                              }\n                            }}\n                          >\n                            <span>Harvest</span>\n                          </button>\n                        </div> */}\n                      </div>\n                      <div className=\"symbol-staked textmode\">\n                        {invest_type2}{\" \"}\n                        <span className=\"blur-text textmode\">\n                          AVAILABLE - BTEX STAKED{\" \"}\n                        </span>\n                      </div>\n                      <div class=\"wrap-amount-stake textmode\">\n                        <div class=\"input-stake-withdraw\">\n                          <div class=\"balance-lp-and-staked\">\n                            <div class=\"balance-lp\">\n                              <span class=\"blur-text textmode\">\n                                Available {invest_type2}:{\" \"}\n                              </span>\n                              <span\n                                class=\"textmode balance-lp-amount\"\n                                style={{ cursor: \"pointer\" }}\n                              >\n                                {data?.inrbalance ? round(data.inrbalance) : 0}\n                              </span>\n                            </div>\n                            <div class=\"staked-lp\">\n                              <span class=\"blur-text textmode\">Staked: </span>\n                              <span class=\"textmode staked-lp-amount\">\n                                {data?.eight_total_stak\n                                  ? round(data.eight_total_stak)\n                                  : 0}\n                              </span>\n                            </div>\n                          </div>\n                          <div class=\"input-amount\">\n                            <div class=\"input-amount-stake\">\n                              <div class=\"ant-input-number ant-input-number-lg ant-input-number-borderless\">\n                                <div class=\"ant-input-number-input-wrap\">\n                                  <input\n                                    autoComplete=\"off\"\n                                    role=\"spinbutton\"\n                                    ariaValuemin=\"0.0001\"\n                                    step=\"1\"\n                                    placeholder=\"Enter INR\"\n                                    value={fourthinrValue}\n                                    class=\"ant-input-number-input\"\n                                    onChange={(e) => {\n                                      setfourthInrValue(\n                                        e.target.value\n                                          .replace(/[^0-9.]/g, \"\")\n                                          .replace(/(\\..*?)\\..*/g, \"$1\")\n                                      );\n                                      seteightBtexValue(\n                                        e.target.value\n                                          .replace(/[^0-9.]/g, \"\")\n                                          .replace(/(\\..*?)\\..*/g, \"$1\") /\n                                          (btexinrprice)\n                                      );\n                                    }}\n                                  />\n                                </div>\n                              </div>\n                              <div class=\"btn-max\">{invest_type2}</div>\n                            </div>\n                            <div class=\"input-amount-unstakek\">\n                              <div class=\"btn-max\">\n                                {round(eightbtexValue)}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      {!isLoggedIn ? (\n                        <button\n                          type=\"button\"\n                          style={{ cursor: \"pointer\" }}\n                          className=\"ant-btn ant-btn-primary ant-btn-lg btn-stake\"\n                          onClick={() => {\n                            props.history.replace(\"/login\");\n                          }}\n                        >\n                          <span>Login</span>\n                        </button>\n                      ) : (\n                        <button\n                          type=\"button\"\n                          id=\"eight_stake\"\n                          style={{ cursor: \"pointer\" }}\n                          className=\"ant-btn ant-btn-primary ant-btn-lg btn-stake\"\n                          onClick={(e) => {\n                            e.preventDefault();\n                            if (data.inrbalance >= fourthinrValue) {\n                              N_setStake(\n                                user?.params\n                                  ? user.params.user_id\n                                  : user.user_id,\n                                  round(fourthinrValue),\n                                  round(eightbtexValue),\n                                webData.stake[3].days,\n                                webData.stake[3].percent,\n                                usdtinrprice,\n                                btexinrprice,\n                                invest_type2,\n                                4\n                              ).then((d) => {\n                                if (d.status === 200) {\n                                  N_getStake(\n                                    user?.params\n                                      ? user.params.user_id\n                                      : user.user_id\n                                  ).then((d) => {\n                                    if (d.status === 200) {\n                                      setData(d.result);\n                                    }\n                                  });\n                                  NotificationManager.success(d.message);\n                                } else {\n                                  NotificationManager.error(d.message)\n                                }\n                              });\n                            } else {\n                              NotificationManager.info(\"Your Amount too Low\");\n                            }\n                          }}\n                        >\n                          <span>Stake</span>\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/ConfimationPopup.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/Privacy.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/Terms.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/NftMarketPlace.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/BtextCryptoBank.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/BtextLaunched.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/Career.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/BtextExplorer.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/BusinessContact.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/refer.jsx",["700"],"import React from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"../HomeComp/Footer\";\n\n\n\nexport default function Refer() {\n\n    return (\n        <>\n        <Header/>\n            <div className=\"container-fluid  bg-success\">\n                <div className=\"row px-5 \">\n                    <div className=\"col-sm \" style={{ marginTop:\"100px\", marginLeft:\"50px\" }}  >\n                     <div style={{fontSize:\"62PX\", fontWeight:\"500\" }}>  Refer Friends </div>\n                     <div style={{fontSize:\"55PX\", fontWeight:\"500\" }}>  Earn Crypto Together</div>\n                    <div className=\"text-dark w-75 h4 my-5\">  Earn up to 40% commission on every trade across Bitflash Spot, Futures, and Pool.</div>\n                     <div>\n                    <a href=\"#\"  ><span className=\"text-white h5\"><u> View referral rules</u> </span></a>\n                    </div>\n                    </div>\n                  \n                    <div className=\"col-sm\">\n                       <img src=\"./image/reffer friends.png\" className=\"h-100 pt-5\" alt=\"\" />\n                    </div>\n                  \n                </div>\n            </div>\n\n\n\n<div className=\"container-fluid bg-white text-dark p-5\">\n            <div className=\"container my-5\">\n    <h1 className=\"my-5 py-5\" >How Referral Works  </h1> \n\n  <div className=\"row\">\n    <div className=\"col-sm\">\n      <img src=\"./image/tutorial.png\" alt=\"\" />\n      <div className=\"h3 fw-bold my-5\">Share Commission</div>\n      <div>Set how much referral commission you want to share with your friends.</div>\n    </div>\n    <div className=\"col-sm\">\n    <img src=\"./image/tutorial1.png\" alt=\"\" />\n    <div className=\"h3 fw-bold my-5\">Refer Friends</div>\n      <div>Share your referral link or QR code with your friends and social media.</div>\n    </div>\n    <div className=\"col-sm  \">\n    <img src=\"./image/tutoria3.png\" alt=\"\" />\n    <div className=\"h3 fw-bold my-5\">Earn Crypto!</div>\n      <div>Earn up to 40% commission when your friends start trading.</div>\n    </div>\n  </div>\n</div>\n        <div className=\"container text-center\">\n            <h1>Start Earning Now</h1>\n                <input type=\"button\" className=\"btn btn-warning\" style={{width:\"100px\"}} value=\" Log In \" />\n        </div>\n\n</div>\n\n<Footer/>\n\n        </>\n\n    )\n}","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/About.jsx",["701","702","703","704"],"import React, { useEffect } from \"react\";\nimport Banner from \"./Banner\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport \"../../css/ecosystem.scss\";\n\n\nexport default function About() {\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  });\n  return (\n    <>\n      <Header />\n      <Banner image={\"about_us.png\"} />\n      <div className=\"container-fluid bg-white\" style={{overflow:\"hidden\"}}>\n        <div className=\"container-fluid\" >\n          <div className=\"row \">\n            <div className=\"col-sm text-dark my-5 py-5\">\n              <h1 className=\"text-center\">\n                {/* Ecosystem */}\n\n\n                <div class=\"centerer\">\n                  <div class=\"window \">\n                    <div class=\"flex-cont\">\n                      {/* <h2 class=\"title\">Activity on <span class=\"site-name\">Showcase</span></h2> */}\n                      <div class=\"columns\">\n\n                   \n                          \n                            \n                        <div class=\"name-column\">\n                          <div class=\"name\">\n                            <ul>\n                              <li>Blockchain</li>\n                              <li>Swap</li>\n                              <li>Crosschain</li>\n                              <li>Wallet and Extension</li>\n                            </ul>\n                          </div>\n                      </div>\n\n                       \n                        <div class=\"bar-column\">\n                          <div class=\"bar u\">\n                            <div class=\"fill fill-u\">\n                            </div>\n                          </div>\n                          <div class=\"c-bar-p\">\n                            <div class=\"bar p\">\n                              <div class=\"fill fill-p\">\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"c-bar-ns\">\n                            <div class=\"bar ns\">\n                              <div class=\"fill fill-ns\">\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"c-bar-br\">\n                            <div class=\"bar br\">\n                              <div class=\"fill fill-br\">\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"num-column\">\n                          <div class=\"number\">\n                            <ul>\n                              <li>17,387</li>\n                              <li>32,581</li>\n                              <li>8,132</li>\n                              <li>77%</li>\n                            </ul>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </h1>\n            </div>\n            <div className=\"col-sm \" style={{ overflow: \"hidden\" }} >\n              <div className=\"infographic-wrapper\" style={{ paddingRight: \"100px\", }} id=\"graph\"></div>\n            </div>\n          </div>\n        </div>\n        <div className=\" container-fluid \">\n          <ul className=\"list-members bg-white text-warning\">\n            <li className=\"member\">\n              <div className=\"member-image\">\n                <img src=\"./image/sanjay sir.jpeg\" />\n              </div>\n              <div className=\"member-info\">\n                <h3>Sanjay Kumar</h3>\n                <p>Managing Director</p>\n                <div className=\"social-link\">\n                  <i className=\"fab fa-facebook-f\"></i>\n                  <i className=\"fab fa-twitter\"></i>\n                  <i className=\"fab fa-linkedin-in\"></i>\n                </div>\n              </div>\n            </li>\n            <li className=\"member\">\n              <div className=\"member-image\">\n                <img src=\"./image/a.png\" />\n              </div>\n              <div className=\"member-info\">\n                <h3>Aman Vaths</h3>\n                <p>CEO</p>\n                <div className=\"social-link\">\n                  <i className=\"fab fa-facebook-f\"></i>\n                  <i className=\"fab fa-twitter\"></i>\n                  <i className=\"fab fa-linkedin-in\"></i>\n                </div>\n              </div>\n            </li>\n            <li className=\"member\">\n              <div className=\"member-image\">\n                <img src=\"./image/nn.png\" />\n              </div>\n              <div className=\"member-info\">\n                <h3>Neeraj Kumar</h3>\n                <p>Marketing Head</p>\n                <div className=\"social-link\">\n                  <i className=\"fab fa-facebook-f\"></i>\n                  <i className=\"fab fa-twitter\"></i>\n                  <i className=\"fab fa-linkedin-in\"></i>\n                </div>\n              </div>\n            </li>\n            <li className=\"member\">\n              <div className=\"member-image\">\n              <img src=\"./image/nn.png\" />\n              </div>\n              <div className=\"member-info\">\n                <h3>Shailendra Kumar</h3>\n                <p>Affiliate Manager</p>\n                <div className=\"social-link\">\n                  <i className=\"fab fa-facebook-f\"></i>\n                  <i className=\"fab fa-twitter\"></i>\n                  <i className=\"fab fa-linkedin-in\"></i>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n\n\n\n      <Footer />\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/download.jsx",["705","706","707","708","709","710"],"import React from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"../HomeComp/Footer\";\n\n\nexport default function Download() {\n\n    return (\n        <>\n            <Header/>\n            <div className=\"container-fluid text-dark bg-white \" style={{ paddingBlock: \"100px\", fontFamily: \" times\", fontWeight: \"600\" }}>\n                <div className=\"container\">\n                    <div className=\"row \">\n                        <div className=\"col-sm-6\">\n                            <h1 className=\"h1 py-3\">Trade Anywhere</h1>\n                            <span className=\"h4\">All the power of Bitflash's cryptocurrency exchange, in the palm of your hand. Download the Bitflash mobile crypto trading app today.</span>\n                            <div className=\"\">\n                                <div className=\"row\">\n                                    <div className=\"col-sm-6\">\n                                        <a href=\"\"> <div className=\"my-2 px-5   py-3 text-white  bg-dark\" >  Download From Appstore</div></a>\n                                        <a href=\"https://play.google.com/store/apps/details?id=com.bitflash.exchange\"><div className=\"my-2 p-3  text-white  bg-dark\"> <b className=\"ml-5 text-white\"> Download for Android </b></div></a>\n                                       \n                                        <a href=\" https://play.google.com/store/apps/details?id=com.bitflash.exchange\">  <div className=\"my-2 px-5     py-3 text-white  bg-dark\"> Download From Googleplay</div></a>\n                                    </div>\n                                    <div className=\"col-sm-6\">\n                                        <img src=\"./img/bitt.png\" className=\"h-75\" alt=\"\" srcset=\"\" />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <img src=\"./image/download-img-1-1.png\" alt=\"\" />\n                        </div>\n                    </div>\n                </div>\n\n\n                <div className=\"container\">\n                    <div className=\"row \">\n                        <div className=\"col-sm-6  px-5    \">\n                            <img src=\"./image/download-img-2.png\" className=\"\" alt=\"\" />\n                        </div>\n                        <div className=\"col-sm-6 px-5\">\n                            <h1 className=\"h1 py-3\">Desktop</h1>\n                            <span className=\"h4\" >Powerful crypto trading platform for those who mean business. The Bitflash crypto trading experience, tailor-made for your Windows or MacOS device.</span>\n                            <div className=\"\">\n                                <div className=\"row\">\n                                    <div className=\"col-sm-6\">\n                                        <a href=\"\">    <div className=\"my-2 p-3  text-white  bg-dark\">Download For Mac</div></a>\n                                        <a href=\"\">  <div className=\"my-2 p-3  text-white  bg-dark\"> Download for Windows</div></a>\n                                        <a href=\"\">   <div className=\"my-2 p-3  text-white  bg-dark\"> Download for Linux</div></a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div className=\"container my-5 py-5\">\n                    <div className=\"row \">\n\n                        <div className=\"col-sm-6 px-5\">\n                            <h1 className=\"h1 py-3\">Integration with ease</h1>\n                            <span className=\"h4\">The Bitflash API is designed to provide an easy and efficient way to integrate your trading application into our platform.</span>\n                            <div>\n                                <a href=\"\"> Official Bitflash API Documentation</a>\n                            </div>\n\n                        </div>\n                        <div className=\"col-sm-6  px-5 \">\n                            <img src=\"./image/download-img-2.png\" className=\"\" alt=\"\" />\n                        </div>\n                    </div>\n                </div>\n\n\n                <div className=\"container\">\n                    <div className=\"row \">\n                        <div className=\"col-sm-6  px-5    \">\n                            <img src=\"./image/mob-2.png\" className=\"\" alt=\"\" />\n                        </div>\n                        <div className=\"col-sm-6  px-5\">\n                            <img src=\"./image/auth.png\" alt=\"\" /> <h1 className=\"h1 pb-3\">Bitflash Authenticator</h1>\n                            <span className=\"h4\">Bitflash authenticator generates 2-Step verification codes. Increase your account safety by downloading the Bitflash authenticator for a second step of verification.</span>\n                            <div className=\"\">\n                                <div className=\"row\">\n                                    <div className=\"col-sm-6\">\n                                        <a href=\"\"><div className=\"my-2 p-3  text-white  bg-dark\">Download For Iphone</div></a>\n                                        <a href=\"https://play.google.com/store/apps/details?id=com.bitflash.exchange\"><div className=\"my-2 p-3  text-white  bg-dark\"> Download for Android</div></a>\n\n                                    </div>\n                                    <div className=\"col-sm-6\">\n                                        <img src=\"./image/qr.png\" className=\"h-75\" alt=\"\" srcset=\"\" />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Footer/>\n        </>\n    )\n}","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/Home_page.jsx",["711","712","713","714","715","716","717"],"import Header from \"./Header\";\nimport Footer from \"../HomeComp/Footer\";\nimport Banner from \"../HomeComp/Banner\";\nimport $ from 'jquery';\nimport { useEffect } from \"react\";\n\n\nexport default function Home_page() {\n\n \n\n  return (\n    <>\n      <div className=\"containers text-dark\">\n        <svg aria-labelledby=\"moneytitle\" className=\"money-sm money\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 40 26.1\">\n          <title id=\"moneytitle\" lang=\"en\">Monetary Illustration</title>\n          <g className=\"one\" fill=\"#23262C\"><path d=\"M7.9,10.1H5.7V9.4h2.2c0.2,0,0.3-0.1,0.3-0.3S8.1,8.8,7.9,8.8H7V8.5c0-0.2-0.1-0.3-0.3-0.3 c-0.2,0-0.3,0.1-0.3,0.3v0.3H5.4C5.2,8.8,5.1,9,5.1,9.1v1.2c0,0.2,0.1,0.3,0.3,0.3h2.2v0.6H5.4c-0.2,0-0.3,0.1-0.3,0.3 c0,0.2,0.1,0.3,0.3,0.3h0.9v0.3c0,0.2,0.1,0.3,0.3,0.3c0.2,0,0.3-0.1,0.3-0.3v-0.3h0.9c0.2,0,0.3-0.1,0.3-0.3v-1.2 C8.2,10.2,8.1,10.1,7.9,10.1z\" /><path d=\"M10.5,8.3c-0.4-0.7-1-1.4-1.5-1.9C8.7,6,8.4,5.7,8.3,5.4C8.5,5.3,8.6,5.1,8.7,5c0.1-0.1,0.1-0.3,0-0.4 c-0.1-0.1-0.3-0.1-0.4,0c0.1-0.4,0.4-0.9,1-1.4c0.1-0.1,0.2-0.3,0.1-0.4C9.4,2.8,9,2,8.2,2C7.7,2,7.5,2.3,7.5,2.5 C7.4,2.6,7.4,2.6,7.3,2.6C7,2.6,6.8,2.5,6.5,2.3C6.1,2.2,5.8,2,5.4,2h0C4.7,2,4,2.6,4,2.7C3.9,2.8,3.9,2.9,3.9,3 C3.9,3,3.9,3.1,4,3.2C4.4,3.5,4.8,4,5,4.5c0,0,0,0,0,0c-0.1-0.1-0.3-0.1-0.4,0C4.5,4.7,4.5,4.9,4.6,5C4.7,5.1,4.8,5.3,5,5.4 c-0.1,0.3-0.5,0.6-0.8,1c-0.5,0.5-1,1.1-1.5,1.9C2.3,9.2,2,10.1,2,11c0,1.3,0.5,2.2,1.4,2.7c0.8,0.5,1.8,0.7,3.3,0.7 s2.5-0.2,3.3-0.7c0.9-0.6,1.4-1.5,1.4-2.7C11.3,10.1,11,9.2,10.5,8.3L10.5,8.3z M4.7,2.9c0.2-0.2,0.5-0.3,0.8-0.3h0 c0.2,0,0.5,0.1,0.8,0.3c0.3,0.2,0.7,0.3,1.1,0.3c0.5,0,0.7-0.3,0.7-0.5c0.1-0.1,0.1-0.1,0.2-0.1c0.2,0,0.4,0.1,0.5,0.3 C7.9,3.6,7.6,4.6,7.6,5c-0.2,0.1-0.5,0.1-1,0.1s-0.7,0-1-0.1C5.6,4.6,5.5,3.7,4.7,2.9L4.7,2.9z M6.6,13.8c-2.8,0-4-0.8-4-2.8 c0-1.9,1.2-3.2,2.1-4.2C5.1,6.4,5.5,6,5.6,5.6c0.3,0.1,0.6,0.1,1,0.1s0.8,0,1-0.1C7.8,6,8.2,6.4,8.6,6.8c0.9,1,2.1,2.3,2.1,4.2 C10.7,13,9.5,13.8,6.6,13.8L6.6,13.8z\" /></g><g className=\"two\" fill=\"#23262C\"><path d=\"M21.2,10.1h-2.2V9.4h2.2c0.2,0,0.3-0.1,0.3-0.3s-0.1-0.3-0.3-0.3h-0.9V8.5c0-0.2-0.1-0.3-0.3-0.3 c-0.2,0-0.3,0.1-0.3,0.3v0.3h-0.9c-0.2,0-0.3,0.1-0.3,0.3v1.2c0,0.2,0.1,0.3,0.3,0.3h2.2v0.6h-2.2c-0.2,0-0.3,0.1-0.3,0.3 c0,0.2,0.1,0.3,0.3,0.3h0.9v0.3c0,0.2,0.1,0.3,0.3,0.3c0.2,0,0.3-0.1,0.3-0.3v-0.3h0.9c0.2,0,0.3-0.1,0.3-0.3v-1.2 C21.5,10.2,21.4,10.1,21.2,10.1z\" /><path d=\"M23.9,8.3c-0.4-0.7-1-1.4-1.5-1.9c-0.3-0.4-0.7-0.7-0.8-1c0.2-0.1,0.3-0.3,0.5-0.4c0.1-0.1,0.1-0.3,0-0.4 c-0.1-0.1-0.3-0.1-0.4,0c0.1-0.4,0.4-0.9,1-1.4c0.1-0.1,0.2-0.3,0.1-0.4c0,0-0.4-0.8-1.2-0.8c-0.5,0-0.7,0.3-0.7,0.5 c-0.1,0.1-0.1,0.1-0.2,0.1c-0.2,0-0.5-0.1-0.8-0.3C19.5,2.2,19.1,2,18.8,2h0c-0.7,0-1.4,0.6-1.5,0.7c-0.1,0.1-0.1,0.2-0.1,0.2 s0.1,0.2,0.1,0.2c0.5,0.3,0.8,0.8,1,1.3c0,0,0,0,0,0c-0.1-0.1-0.3-0.1-0.4,0c-0.1,0.1-0.1,0.3,0,0.4c0.1,0.1,0.3,0.3,0.5,0.4 c-0.1,0.3-0.5,0.6-0.8,1c-0.5,0.5-1,1.1-1.5,1.9c-0.5,0.9-0.8,1.8-0.8,2.7c0,1.3,0.5,2.2,1.4,2.7c0.8,0.5,1.8,0.7,3.3,0.7 c1.5,0,2.5-0.2,3.3-0.7c0.9-0.6,1.4-1.5,1.4-2.7C24.6,10.1,24.4,9.2,23.9,8.3L23.9,8.3z M18,2.9c0.2-0.2,0.5-0.3,0.8-0.3h0 c0.2,0,0.5,0.1,0.8,0.3c0.3,0.2,0.7,0.3,1.1,0.3c0.5,0,0.7-0.3,0.7-0.5c0.1-0.1,0.1-0.1,0.2-0.1c0.2,0,0.4,0.1,0.5,0.3 C21.2,3.6,21,4.6,20.9,5c-0.2,0.1-0.5,0.1-1,0.1c-0.4,0-0.7,0-1-0.1C19,4.6,18.8,3.7,18,2.9L18,2.9z M20,13.8c-2.8,0-4-0.8-4-2.8 c0-1.9,1.2-3.2,2.1-4.2C18.5,6.4,18.8,6,19,5.6c0.3,0.1,0.6,0.1,1,0.1c0.4,0,0.8,0,1-0.1c0.2,0.4,0.5,0.7,0.9,1.2 c0.9,1,2.1,2.3,2.1,4.2C24,13,22.8,13.8,20,13.8L20,13.8z\" /></g><g className=\"three\" fill=\"#23262C\"><path d=\"M34.7,10.1h-2.2V9.4h2.2c0.2,0,0.3-0.1,0.3-0.3c0-0.2-0.1-0.3-0.3-0.3h-0.9V8.5c0-0.2-0.1-0.3-0.3-0.3 s-0.3,0.1-0.3,0.3v0.3h-0.9c-0.2,0-0.3,0.1-0.3,0.3v1.2c0,0.2,0.1,0.3,0.3,0.3h2.2v0.6h-2.2c-0.2,0-0.3,0.1-0.3,0.3 s0.1,0.3,0.3,0.3h0.9v0.3c0,0.2,0.1,0.3,0.3,0.3s0.3-0.1,0.3-0.3v-0.3h0.9c0.2,0,0.3-0.1,0.3-0.3v-1.2C35,10.2,34.9,10.1,34.7,10.1 z\" /><path d=\"M37.3,8.3c-0.4-0.7-1-1.4-1.5-1.9c-0.3-0.4-0.7-0.7-0.8-1c0.2-0.1,0.3-0.3,0.5-0.4c0.1-0.1,0.1-0.3,0-0.4 c-0.1-0.1-0.3-0.1-0.4,0c0.1-0.4,0.4-0.9,1-1.4c0.1-0.1,0.2-0.3,0.1-0.4c0,0-0.4-0.8-1.2-0.8c-0.5,0-0.7,0.3-0.7,0.5 c-0.1,0.1-0.1,0.1-0.2,0.1c-0.2,0-0.5-0.1-0.8-0.3C33,2.2,32.6,2,32.3,2h0c-0.7,0-1.4,0.6-1.5,0.7c-0.1,0.1-0.1,0.2-0.1,0.2 c0,0.1,0.1,0.2,0.1,0.2c0.5,0.3,0.8,0.8,1,1.3c0,0,0,0,0,0c-0.1-0.1-0.3-0.1-0.4,0c-0.1,0.1-0.1,0.3,0,0.4c0.1,0.1,0.3,0.3,0.5,0.4 c-0.1,0.3-0.5,0.6-0.8,1c-0.5,0.5-1,1.1-1.5,1.9c-0.5,0.9-0.8,1.8-0.8,2.7c0,1.3,0.5,2.2,1.4,2.7c0.8,0.5,1.8,0.7,3.3,0.7 c1.5,0,2.5-0.2,3.3-0.7c0.9-0.6,1.4-1.5,1.4-2.7C38.1,10.1,37.9,9.2,37.3,8.3L37.3,8.3z M31.5,2.9c0.2-0.2,0.5-0.3,0.8-0.3h0 c0.2,0,0.5,0.1,0.8,0.3c0.3,0.2,0.7,0.3,1.1,0.3c0.5,0,0.7-0.3,0.7-0.5c0.1-0.1,0.1-0.1,0.2-0.1c0.2,0,0.4,0.1,0.5,0.3 c-0.9,0.8-1.1,1.7-1.1,2.1c-0.2,0.1-0.5,0.1-1,0.1c-0.4,0-0.7,0-1-0.1C32.5,4.6,32.3,3.7,31.5,2.9L31.5,2.9z M33.5,13.8 c-2.8,0-4-0.8-4-2.8c0-1.9,1.2-3.2,2.1-4.2C32,6.4,32.3,6,32.5,5.6c0.3,0.1,0.6,0.1,1,0.1c0.4,0,0.8,0,1-0.1 C34.7,6,35,6.4,35.4,6.8c0.9,1,2.1,2.3,2.1,4.2C37.5,13,36.3,13.8,33.5,13.8L33.5,13.8z\" /></g><g fill=\"#23262C\"><path d=\"M3.3,23.7v-4.6h1.6l0.8,3.4l0.8-3.4h1.6v4.6H7.2v-3.6H7.1l-0.9,3.4H5.2l-0.9-3.4H4.2v3.6H3.3z\" /><path d=\"M18.1,19.1h1.8c0.5,0,0.8,0.1,1.1,0.3c0.2,0.2,0.4,0.5,0.4,0.9c0,0.3,0,0.5-0.1,0.6 c-0.1,0.2-0.2,0.3-0.4,0.4c0.2,0.1,0.4,0.2,0.5,0.4c0.1,0.2,0.1,0.4,0.1,0.7c0,0.4-0.1,0.8-0.4,1c-0.3,0.2-0.6,0.3-1.1,0.3h-1.8 V19.1z M19.9,19.9H19V21h0.8c0.4,0,0.5-0.2,0.5-0.5S20.2,19.9,19.9,19.9z M19.9,21.7H19v1.1h0.9c0.2,0,0.4,0,0.5-0.1 c0.1-0.1,0.1-0.2,0.1-0.4C20.5,21.9,20.3,21.7,19.9,21.7z\" /><path d=\"M32.3,19.9v-0.8h3.4v0.8h-1.2v3.8h-0.9v-3.8H32.3z\" /></g></svg>\n        <div className=\"fallback iconCircle\">\n          <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/28963/info-fallback.png\" />\n        </div>\n        <svg aria-labelledby=\"title\" id=\"svg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 765 587\">\n          <svg version=\"1.1\" id=\"svg\" xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"495.5px\" height=\"600px\" viewBox=\"-15 -89.7 495.5 600\" >\n\n            <title id=\"title\" lang=\"en\">Circle of icons that illustrate Global Warming Solutions</title>\n            <g className=\"iconCircle\">\n              <g id=\"circle\">\n                <path id=\"backCircle\" className=\"st0\" d=\"M53.4,154.3c0-93.1,75.5-168.6,168.6-168.6s168.6,75.5,168.6,168.6S315.1,322.9,222,322.9\n      S53.4,247.4,53.4,154.3z\"/>\n                <path className=\"st1\" d=\"M222.1,115.8c-21.2,0-38.4,17.2-38.4,38.4s17.2,38.4,38.4,38.4s38.4-17.2,38.4-38.4S243.3,115.8,222.1,115.8\n      L222.1,115.8z\"/>\n                <circle className=\"st2\" cx=\"222.4\" cy=\"153.8\" r=\"191.4\" />\n                <circle className=\"st3\" cx=\"222.1\" cy=\"154.3\" r=\"79.2\" />\n                <path className=\"st4\" d=\"M222.1,129.1c-13.9,0-25.2,11.3-25.2,25.2c0,13.9,11.3,25.2,25.2,25.2s25.2-11.3,25.2-25.2\n      S236,129.1,222.1,129.1z\"/>\n\n                <linearGradient id=\"SVGID_1_\" gradientUnits=\"userSpaceOnUse\" x1=\"320.3311\" y1=\"298.7393\" x2=\"320.3311\" y2=\"-5.3131\" gradientTransform=\"matrix(1.032 -0.177 0.169 0.987 -62.731 55.81)\">\n                  <stop offset=\"0\" style={{ stopColor: \"#000707\", stopOpacity: \"0\" }} />\n                  <stop offset=\"4.700000e-02\" style={{ stopColor: \"#182323\", stopOpacity: 4.700000e-02 }} />\n                  <stop offset=\"0.134\" style={{ stopColor: \"#3E5250\", stopOpacity: 0.134 }} />\n                  <stop offset=\"0.227\" style={{ stopColor: \"#617B79\", stopOpacity: 0.227 }} />\n                  <stop offset=\"0.324\" style={{ stopColor: \"#7E9D9A\", stopOpacity: 0.324 }} />\n                  <stop offset=\"0.426\" style={{ stopColor: \"#95B9B6\", stopOpacity: 0.426 }} />\n                  <stop offset=\"0.536\" style={{ stopColor: \"#A7CFCB\", stopOpacity: 0.536 }} />\n                  <stop offset=\"0.657\" style={{ stopColor: \"#B4DEDA\", stopOpacity: 0.657 }} />\n                  <stop offset=\"0.796\" style={{ stopColor: \"#BCE7E3\", stopOpacity: 0.796 }} />\n                  <stop offset=\"1\" style={{ stopColor: \"#BEEAE6}\" }} />\n                </linearGradient>\n                <path className=\"st5\" d=\"M189.8,7.1v3.6c41.8-6.8,82.4,3,114.3,24.6c32.3,21.8,55.7,55.4,62.6,95.9s-3.9,80-27.1,111.3\n      c-22.9,30.9-57.9,53.7-99.6,61.2l0.6,3.6c85.8-15.5,143.9-94.3,129.8-176.7C356.3,48.1,275.9-7,189.8,7.1z\"/>\n                <path className=\"st6\" d=\"M318,154.2c0-53-43-95.9-95.9-95.9c-53,0-95.9,43-95.9,95.9c0,53,43,95.9,95.9,95.9\n      C275.1,250.1,318,207.2,318,154.2z M222.1,243.6c-24.7,0-47-10-63.2-26.2s-26.2-38.5-26.2-63.2s10-47,26.2-63.2\n      s38.5-26.2,63.2-26.2s47,10,63.2,26.2c16.2,16.2,26.2,38.5,26.2,63.2s-10,47-26.2,63.2S246.8,243.6,222.1,243.6L222.1,243.6z\"/>\n                <path className=\"st7\" d=\"M248.7,50.1l-0.6,2.5c40,9,72.4,41.7,78.9,84.7c2.9,18.8,0.4,37.2-6.2,53.7l0.8,0.3l1.6,0.6\n      c6.8-16.9,9.3-35.7,6.3-55C322.9,92.9,289.7,59.3,248.7,50.1L248.7,50.1z\"/>\n                <path d=\"M312.8,207.6l-1.4-0.9L312.8,207.6z\" />\n                <path className=\"st7\" d=\"M282.5,137.2l-9.6,2.7c1.3,4.6,2,9.4,2,14.4c0,24.3-16.4,44.7-38.7,50.9l2.7,9.6c26.6-7.3,46-31.7,46.1-60.5\n      C284.9,148.4,284.1,142.6,282.5,137.2z\"/>\n                <path d=\"M272.9,139.9\" />\n                <path className=\"st8\" d=\"M169.1,154.3h-3.7c0,30.7,24.6,55.7,55.1,56.4l0.1-3.7C192,206.2,169.1,182.9,169.1,154.3L169.1,154.3z\" />\n                <path className=\"st9\" d=\"M173,112.9l7.6,6.5c3.1-3.6,6.7-6.9,10.8-9.7c20.1-13.6,46.3-11.4,63.9,3.7l6.5-7.6\n      c-20.9-17.9-52-20.5-75.9-4.4C180.9,104.7,176.6,108.6,173,112.9L173,112.9z\"/>\n                <path className=\"st10\" d=\"M281.1,154.3\" />\n                <g className=\"st11\">\n                  <path className=\"st12\" d=\"M157.1,157.6c-1-16.6,4.4-32.2,14.1-44.3l8.8,7.1c-8,10-12.5,22.8-11.6,36.5L157.1,157.6L157.1,157.6z\n         M168.4,156.9l-3.7,0.2c1.9,30.7,27.9,54.1,58.5,52.8l-0.1-3.7C194.4,207.4,170.1,185.5,168.4,156.9z\"/>\n                </g>\n                <path className=\"st13\" d=\"M212.1,118.2l1.6-1.2L182.6-16.9C87.4,3,65.8,77.4,65.8,77.4s115.8,56.1,121.7,59.2l2.5-1.9\n      C194.6,126.7,202.4,120.4,212.1,118.2L212.1,118.2z\"/>\n                <circle className=\"st14\" cx=\"222.1\" cy=\"154.3\" r=\"13\" />\n                <path d=\"M191.7,104.1L191,103c-9.7,5.8-17.3,14.2-22.3,24l1.1,0.5C174.8,117.8,181.9,109.8,191.7,104.1z\" />\n                <path className=\"st15\" d=\"M258.6,143.1c-5.7-18.9-24.7-30.2-43.7-26.8L175.5-53.3l-1.2,0.3l39.6,170.8l0.6-0.1\n      c18.6-3.7,37.3,7.3,42.8,25.8c5.9,19.7-5.2,40.4-24.9,46.3s-40.4-5.2-46.3-24.9c-2.8-9.4-1.8-19,2.3-27.2l0.5-1l-1.1-0.5\n      c0,0.1,0,0,0,0l-16.6-8l-1.4-0.7l-1.1-0.5L34.9,62.5L34.2,64l150.7,72.7l2.2,1.1c-3.9,8.3-4.9,18-2.1,27.5\n      c6.1,20.3,27.5,31.8,47.9,25.7C253.2,184.9,264.7,163.4,258.6,143.1L258.6,143.1z M187.7,136.2\n      C187.8,136.2,187.7,136.2,187.7,136.2z M187.7,136.2C187.7,136.2,187.7,136.3,187.7,136.2z\"/>\n\n                <linearGradient id=\"SVGID_2_\" gradientUnits=\"userSpaceOnUse\" x1=\"99.1097\" y1=\"663.8168\" x2=\"99.1097\" y2=\"359.7987\" gradientTransform=\"matrix(-0.386 0.973 0.902 0.357 -224.18 -59.782)\">\n                  <stop offset=\"0\" style={{ stopColor: \"#000707\", stopOpacity: \"0\" }} />\n                  <stop offset=\"0.947\" style={{ stopColor: \"#000101\", stopOpacity: \"0.947\" }} />\n                  <stop offset=\"1\" style={{ stopColor: \"#000000\" }} />\n                </linearGradient>\n                <path className=\"st16\" d=\"M91.3,91.5l3.6,1.8c-15.3,39.5-15.1,81-1.3,116.4c13.9,35.7,40.9,65.2,77.8,79.8\n      c37,14.7,76.8,11.8,111.4-4.8c34.2-16.4,63.3-46.1,79.2-85.4l3.3,1.3c-32.8,80.9-119.9,122.2-195.2,92.4\n      C94.7,263.1,59.7,172.8,91.3,91.5z\"/>\n                <path className=\"st17\" d=\"M249.7,260l-0.8-2.5c-39.3,11.9-83.6-0.6-110.5-34.9c-11.8-15-18.7-32.2-21.1-49.7l-0.9,0.1l-1.7,0.2\n      c2.4,18,9.5,35.7,21.6,51C164,259.3,209.4,272.2,249.7,260L249.7,260z\"/>\n                <g id=\"likely\" className=\"st18\">\n                  <path className=\"st19\" d=\"M222.1,35.5l-7,0.4l-0.7-12.2l2.5-0.1l0.6,10l4.5-0.3L222.1,35.5L222.1,35.5z M224.3,35.5l0.1-12.2h2.5\n        l-0.1,12.2H224.3z M232.6,35.8l-2.5-0.2l1-12.2l2.5,0.2l-0.5,5.4h1.7l2.4-5l2.8,0.2l-3.2,5.9l2.2,6.3l-2.9-0.2l-1.6-5h-1.7\n        L232.6,35.8L232.6,35.8z M241.3,36.7l2.3-12l7.8,1.5l-0.4,2.1l-5.3-1l-0.5,2.8l4.3,0.8l-0.4,2.1l-4.3-0.8l-0.6,2.9l5.3,1\n        l-0.4,2.1L241.3,36.7L241.3,36.7z M258.3,41l-6.6-2.1l3.6-11.7l2.4,0.7l-3,9.6l4.3,1.3L258.3,41L258.3,41z M263.3,43.2l-2.3-1\n        l2-4.5l-0.5-8.2l2.5,1.1l0.1,5.4l4-3.6l2.5,1.1l-6.4,5.2L263.3,43.2L263.3,43.2z\"/>\n                </g>\n                <g id=\"unlikely\" className=\"st18\">\n                  <path className=\"st19\" d=\"M107.2,197.2c1.3-0.5,1.8-1.4,1.3-2.8s-1.4-1.8-2.7-1.4l-7.7,2.7l-0.8-2.3l7.6-2.7c1.4-0.5,2.6-0.5,3.5,0\n        s1.6,1.5,2.1,3s0.6,2.7,0.2,3.7s-1.3,1.7-2.7,2.2l-7.6,2.7l-0.8-2.3L107.2,197.2L107.2,197.2z M108,186.5l-12,2.2l-0.8-4.1\n        l9.4-4.7v-0.2l-9.9,1.8l-0.5-2.4l12-2.2l0.7,4l-9.4,4.8v0.2l9.9-1.8L108,186.5L108,186.5z M105.5,166.7l0.5,6.9l-12.2,0.9\n        l-0.2-2.5l10-0.7l-0.3-4.5L105.5,166.7L105.5,166.7z M105.5,164.4l-12.2,0.1V162l12.2-0.1V164.4z M105.6,156.1l-0.2,2.5\n        l-12.2-0.8l0.2-2.5l5.4,0.4l-0.1-1.7l-5.1-2.4l0.2-2.8l5.9,3.1l6.3-2.3l-0.2,2.9l-5,1.7l0.1,1.7L105.6,156.1L105.6,156.1z\n         M106.4,147.3l-12.1-1.8l1.2-7.8l2.1,0.3l-0.8,5.4l2.8,0.4l0.7-4.3l2.1,0.3l-0.7,4.3l2.9,0.4l0.8-5.4l2.1,0.3L106.4,147.3\n        L106.4,147.3z M109.6,130l-1.5,6.8l-11.9-2.7l0.5-2.4l9.8,2.2l1-4.4L109.6,130z M111.2,124.5l-0.7,2.4l-4.8-1.3l-8,1.7l0.7-2.7\n        l5.3-0.8l-4.1-3.5l0.7-2.7l6,5.6L111.2,124.5L111.2,124.5z\"/>\n                </g>\n              </g>\n              <g id=\"icons\">\n                <path className=\"st7\" d=\"M7.6,71.7c-2-0.6-4.3,1.2-5.1,3.9c0,0.1-0.1,0.3-0.1,0.4C2,75.6,1.6,75.3,1,75.1c-2.2-0.7-4.9,1.3-5.9,4.5\n      c-0.5,1.7-0.5,3.4,0,4.7c-1.5,0.7-2.8,2.2-3.4,4.3c-0.9,3,0,6,2,6.9c-0.1,0.3-0.2,0.5-0.3,0.8c-0.7,2.3,0,4.6,1.7,5.1\n      c0.3,0.1,0.6,0.1,0.9,0.1c0.8-0.1,1.6-0.6,2.3-1.4c0.3,0.6,0.8,1.1,1.2,1.6c0.5,0.4,1,0.8,1.7,0.9c3.3,1,7.1-1.9,8.6-6.6\n      c0.2-0.6,0.3-1.2,0.4-1.8c0.7-0.1,1.4-0.2,2.2-0.1c-2.6,9.9-1.4,10.3-0.9,10.4c0.6,0.2,1.7,0.5,4.9-9.5c1.9,0.8,3.9,2.2,5.7,4.7\n      l3.4-11.8c-2.8,1.1-5.3,1.3-7.3,1c2.6-10.2,1.5-10.5,0.9-10.6c-0.5-0.2-1.7-0.5-4.8,9.2c-1.2-0.7-2.2-1.6-2.9-2.3\n      c0.1-0.2,0.1-0.3,0.2-0.5c0.7-2.3,0-4.6-1.7-5.2c-0.4-0.1-0.8-0.1-1.3,0C9,79,9.3,78.3,9.5,77.6C10.4,75,9.5,72.3,7.6,71.7\n      L7.6,71.7z M12.2,102.4c0.1-1.3,0.5-3.7,1.4-7.4c0.4,0.1,0.9,0.2,1.3,0.3C13.8,99,12.8,101.2,12.2,102.4z M15.8,87.6\n      c1.1-3.5,2.1-5.8,2.7-6.9c-0.1,1.3-0.5,3.8-1.4,7.4C16.6,88,16.2,87.8,15.8,87.6z\"/>\n                <path className=\"st7\" d=\"M-8.2,175.8c-0.3,5.3,3.7,9.9,9.1,10.3c5.3,0.3,9.9-3.7,10.3-9.1c0.3-5.3-3.7-9.9-9.1-10.3\n      C-3.3,166.4-7.9,170.4-8.2,175.8z M2.5,159.9l-3.1,5.3l5.4,0.3C4.9,165.5,2.5,159.9,2.5,159.9L2.5,159.9z M13.8,165.4L7.9,167\n      l3.6,4.1L13.8,165.4z M-3.8,166.3l-5.6-2.3l1.6,5.9C-7.9,169.9-3.8,166.3-3.8,166.3z M-9.4,172.9l-5.6,2.4l5.3,3.1\n      C-9.7,178.3-9.4,172.9-9.4,172.9z M12.2,179.8l5.6-2.4l-5.3-3.1L12.2,179.8z M0.4,192.8l3.1-5.3l-5.4-0.3L0.4,192.8L0.4,192.8z\n       M6.7,186.4l5.6,2.3l-1.6-5.9C10.8,182.8,6.7,186.4,6.7,186.4z M-10.9,187.3l5.9-1.6l-3.6-4.1L-10.9,187.3z\"/>\n                <path className=\"st7\" d=\"M36.4,245l-14.8-5.3c0,0,0.3,6.8,5.3,8.6C31.8,250.1,36.4,245,36.4,245L36.4,245z M9,257l2.7-7.5l-0.9-0.3\n      l-2.7,7.5L9,257z M5.9,256.9l8.5,3c1,0.4,2.2-0.2,2.6-1.2l0.3-0.7l2.1,0.7l-1.3,3.7c-0.4,1,0.3,2.2,1.3,2.6l4.6,1.6\n      c1,0.4,2.2-0.2,2.6-1.2l1.2-3.3l1.8,0.6v0.1c-0.4,1,0.2,2.2,1.2,2.6l8.5,3c1,0.4,2.2-0.2,2.6-1.2l2-5.7c0.4-1-0.2-2.2-1.2-2.6\n      l-8.5-3c-1-0.4-2.2,0.2-2.6,1.2l-0.7,1.9l-1.8-0.7l1.2-3.4c0.4-1-1.8-4.8-1.8-4.8l-2.3-0.8c0,0-4.1,1.6-4.4,2.6l-1.1,2.9l-2.1-0.7\n      l0.4-1.2c0.4-1-0.2-2.2-1.2-2.6l-8.5-3c-1-0.4-2.2,0.2-2.6,1.2l-2,5.6C4.3,255.4,4.8,256.6,5.9,256.9z M42.7,261.4l-2,5.7\n      c-0.2,0.5-0.8,0.8-1.3,0.6l2.7-7.5C42.6,260.3,42.9,260.8,42.7,261.4L42.7,261.4z M41.1,259.7l-2.7,7.5l-0.9-0.3l2.7-7.5\n      L41.1,259.7z M39.2,259.1l-2.7,7.5l-0.9-0.3l2.7-7.5C38.3,258.7,39.2,259.1,39.2,259.1z M37.4,258.4l-2.7,7.5l-0.9-0.3l2.7-7.5\n      L37.4,258.4z M35.5,257.7l-2.7,7.5l-0.9-0.3l2.7-7.5C34.5,257.4,35.5,257.7,35.5,257.7z M32.3,257.6c0.2-0.5,0.8-0.8,1.3-0.6\n      l-2.7,7.5c-0.5-0.2-0.8-0.8-0.6-1.3L32.3,257.6z M27.5,254.1l0.7,0.3l-3.5,9.7l-0.7-0.3L27.5,254.1z M18,252.8l-2,5.7\n      c-0.2,0.5-0.8,0.8-1.3,0.6l2.7-7.5C17.9,251.7,18.1,252.2,18,252.8L18,252.8z M5.6,254.7l2-5.6c0.2-0.5,0.8-0.8,1.3-0.6l5.7,2\n      l-2.7,7.5l0.9,0.3l2.7-7.5l0.9,0.3l-2.7,7.5l-7.5-2.7C5.7,255.8,5.4,255.2,5.6,254.7L5.6,254.7z M7.1,256.3l2.7-7.5l-0.9-0.3\n      L6.2,256L7.1,256.3z M10.9,257.7l2.7-7.5l-0.9-0.3l-2.7,7.5L10.9,257.7z\"/>\n                <path className=\"st7\" d=\"M83.9,307.3c-0.5,1.9-1.9,8.5-2.5,11.2c2.3,0,4.7,0.2,6.8,0.6c1.7-1.5,5-4.2,5.9-4.4c1.4-0.2,1.6,0.1,1.1,1.3\n      c-0.6,1.2-2.4,5.1-2.4,5.1s1.9,3.8,2.6,4.9c0.6,1.1,0.4,1.5-1,1.3c-0.8-0.1-4.2-2.6-6-4c-2.1,0.5-4.5,0.9-6.8,1\n      c0.7,2.7,2.4,9.1,3,11c0.5,1.7-0.9,1.1-0.9,1.1c-0.6-0.3-1.9-1-2.3-1.5c-2.9-3.5-7.2-9-8.2-10.3c-0.7,0-1.5,0-2.4,0.1\n      C61,325,60,322.8,60,322.2c0-0.7,0.9-2.9,10.7-3.2c0.9,0,1.7-0.1,2.4-0.1c1-1.4,5.1-7.2,7.8-10.8c0.4-0.6,1.6-1.4,2.3-1.7\n      C83,306.3,84.4,305.6,83.9,307.3L83.9,307.3z\"/>\n                <g>\n                  <path className=\"st7\" d=\"M149.9,358.6c0.3,0.1,0.5,0,0.6-0.1s0.3-0.4,0.3-0.7l-1.5-0.3c-0.1,0.4-0.1,0.6,0,0.8\n        S149.6,358.6,149.9,358.6L149.9,358.6z\"/>\n                  <path className=\"st7\" d=\"M144.3,360.6l4.5,15.7l10.9-12.2c1.1-1.1,1.9-2.6,2.3-4.2c1.1-4.9-2-9.9-6.9-11s-9.9,2-11,6.9\n        C143.7,357.4,143.8,359,144.3,360.6z M152.4,360.6l2.6,0.5l0.4-1.8l-2.2-0.4l0.2-1.1l2.2,0.4l0.4-2.1l1.2,0.2l-1.2,6.1l-3.9-0.8\n        L152.4,360.6L152.4,360.6z M148.4,356.4l2.6,0.5c0-0.3,0-0.5-0.1-0.6c-0.1-0.2-0.3-0.3-0.6-0.3c-0.6-0.1-1.1-0.2-1.5-0.2h-0.3\n        l0.2-0.9c0.7,0,1.4,0,1.9,0.1c0.7,0.1,1.1,0.4,1.4,0.8c0.2,0.4,0.3,1,0.1,1.8c-0.3,1.6-1.1,2.3-2.5,2c-1.3-0.3-1.8-1.1-1.5-2.4\n        L148.4,356.4L148.4,356.4z\"/>\n                </g>\n                <path className=\"st7\" d=\"M225.1,359.7c0,0-5.5,0.4-5.8,5.9c0.1,5.9,5.9,6.6,5.9,6.6s0.1,8.8,8.1,9.1c6.9,0.1,8.5-6.4,8.5-6.4\n      s2.2,1.8,4.9,0c2.4-1.8,1.7-4.5,1.7-4.5s5.5-1.5,5-7.2c-0.6-5.6-6.5-5.2-6.5-5.2L225.1,359.7L225.1,359.7z\"/>\n                <path className=\"st7\" d=\"M318.1,349.5c3.4,0.8,5.9,3.7,6,3.9c0.4,0.2,0.6,0.2,0.6,0.2l4.4-2.6l2.2,3.7l1.1-0.7l-2.2-3.7l1.1-0.7\n      l1.2,1.9l0.8-0.5l-1.2-1.9l13.8-8.2c0.4-0.2,0.5-0.7,0.3-1l-0.7-6.8l8.9-5.3c-4.7,1.8-16.9-3.8-16.9-3.8l-24.8,14.7\n      c1.3,3-4.1,16.3-4.1,16.3L318.1,349.5L318.1,349.5z M326.8,350c0.2,0.4,0.1,0.8-0.3,1l-1.7,1c-0.4,0.2-0.8,0.1-1-0.3l-1.6-2.7\n      c-0.2-0.4-0.1-0.8,0.3-1l1.7-1c0.4-0.2,0.8-0.1,1,0.3L326.8,350z M335.3,344.9c0.2,0.4,0.1,0.8-0.3,1l-2.3,1.4\n      c-0.4,0.2-0.8,0.1-1-0.3l-1.6-2.7c-0.2-0.4-0.1-0.8,0.3-1l2.3-1.4c0.4-0.2,0.8-0.1,1,0.3L335.3,344.9z M339.6,342.4\n      c0.2,0.4,0.1,0.8-0.3,1l-2.3,1.4c-0.4,0.2-0.8,0.1-1-0.3l-1.6-2.7c-0.2-0.4-0.1-0.8,0.3-1l2.3-1.4c0.4-0.2,0.8-0.1,1,0.3\n      L339.6,342.4z M343.8,339.9c0.2,0.4,0.1,0.8-0.3,1l-2.3,1.4c-0.4,0.2-0.8,0.1-1-0.3l-1.6-2.7c-0.2-0.4-0.1-0.8,0.3-1l2.3-1.4\n      c0.4-0.2,0.8-0.1,1,0.3L343.8,339.9z\"/>\n                <g>\n                  <path className=\"st7\" d=\"M422.3,278l-3.5-13c0.6-1,1-1.6,1-1.6l-7.1-3.5l-16.3,16.8l7.9,9.2c0,0,0.2,1.8,2.7-2.1l-0.3,0.5\n        c0,0,11.4-2.4,13.4-2.8C422.2,280.9,422.3,278,422.3,278L422.3,278z M405.5,282.9l-6.3-6.8l2.1-2.2l7,4.4L405.5,282.9\n        L405.5,282.9z M409.6,276.5l-6.7-4.2l2.5-2.4l5.9,3.7L409.6,276.5L409.6,276.5z M412.4,272.1l-5.4-3.4l2.2-2.1l4.8,3L412.4,272.1\n        z M414.7,268.4l-4.5-2.9l1.7-1.6l4,2.5L414.7,268.4z M416.5,265.5l-3.7-2.3l1.4-1.3l3.3,2.1L416.5,265.5L416.5,265.5z\"/>\n                  <path className=\"st7\" d=\"M404.5,268.2c0.4-0.3,0.7-0.7,1-1.1c1.5-2.3,0.8-5.4-1.5-6.8c-2.3-1.5-5.4-0.8-6.8,1.5\n        c-1.5,2.3-0.8,5.4,1.5,6.8c0.3,0.2,0.5,0.3,0.8,0.4l-0.7,0.1l-4.1,6.5c-0.1-0.1-0.2-0.1-0.3-0.2c-2.3-1.5-5.4-0.8-6.8,1.5\n        c-1.5,2.3-0.8,5.4,1.5,6.8c0.1,0.1,0.2,0.1,0.3,0.2l-1.2,1.9l0.1,1.4l0.4,0.3l0.6-0.9l6,3.8l1-1.6c-0.2-0.1-0.3-0.2-0.5-0.4\n        l1.5-2.4l3.4,2.2l-1.5,2c-0.1,0.2,0,0.5,0.4,0.5c0,0,0.6,0.5,1.8-1.3c1.1-1.8,2.6-4.1,2.6-4.1l-7.5-8.7l8.3-8.6L404.5,268.2\n        L404.5,268.2z M399.9,283.1c0,0,1.3,0.8,1.9,1.2c0.6,0.4,0.3,1.2,0.3,1.2s-0.2,0.6-0.7,1.1c-0.4,0.5-1,0.2-1,0.2l-2-1.2\n        L399.9,283.1L399.9,283.1z M394.3,281.2c-0.8,1.3-2.5,1.7-3.8,1.1c-0.1,0-0.2-0.1-0.3-0.2c-1.4-0.9-1.8-2.7-0.9-4.2\n        c0.9-1.4,2.7-1.8,4.2-0.9c0.1,0.1,0.2,0.1,0.3,0.2C394.8,278.2,395.1,279.9,394.3,281.2L394.3,281.2z M403.8,266\n        c-0.9,1.4-2.7,1.8-4.2,0.9c-1.4-0.9-1.8-2.7-0.9-4.2c0.9-1.4,2.7-1.8,4.2-0.9C404.3,262.8,404.7,264.6,403.8,266z\"/>\n                </g>\n                <g>\n                  <path className=\"st7\" d=\"M478.9,210.6c0-0.3-0.1-0.5-0.4-0.6c-0.3,0-0.5,0.1-0.6,0.3c-7.8-1.8-12.8-3.8-12.8-3.8l-0.5,2.6\n        c0,0,5.4,0,13.3,1.3c0,0.2,0.1,0.5,0.4,0.5C478.6,211.1,478.8,210.9,478.9,210.6c0.5,0.1,1,0.2,1.6,0.3\n        C480,210.8,479.4,210.7,478.9,210.6z\"/>\n                  <path className=\"st7\" d=\"M463.5,206.2c0,0-10.9-0.9-32.6-7.7c0,0-4.3-1.7-6.4-4.9l-0.7,3.5c9.9,4.8-1,5.2-1,5.2l-0.7,3.5\n        c3.1-2.2,7.7-2.1,7.7-2.1c22.6,1.9,33.1,5.2,33.1,5.2L463.5,206.2z\"/>\n                </g>\n                <g>\n                  <path className=\"st7\" d=\"M436.7,127.2l-8.6,1.1c-0.6-4.2-1.3-8.4-2.5-12.5l8.4-2.2c2.7,1.7,5.2,3.5,7.8,5.5\n        C440.1,121.9,438.4,124.6,436.7,127.2L436.7,127.2z M433.8,122.3c-0.1-1.1-0.4-2.1-0.6-3.1l-3,0.6c0.2,1,0.5,2,0.6,3.1\n        L433.8,122.3z\"/>\n                  <path className=\"st7\" d=\"M455.5,141.9l-25.6,0.4c-0.4,0-0.8-0.3-0.8-0.7l-0.1-1.8h0.7c3.3-0.1,5.9-2.1,5.7-4.5\n        c-0.2-2.4-3.1-3.9-6.3-3.5l-0.7,0.1l-0.2-1.8c-0.1-0.4,0.3-0.8,0.7-0.8l25.3-3.9c0.4-0.1,0.8,0.3,0.9,0.8\n        c0.7,4.9,1.1,9.8,1.2,14.7C456.3,141.4,456,141.9,455.5,141.9L455.5,141.9z M445.6,131.6c0.4,0,0.7-0.5,0.7-0.9l-0.2-1.4\n        c-0.1-0.5-0.5-0.8-0.9-0.7l-4.4,0.6c-0.4,0.1-0.7,0.5-0.7,0.9l0.2,1.3c0.1,0.4,0.5,0.8,0.9,0.7L445.6,131.6z M452.5,130.9\n        c0.4,0,0.7-0.5,0.7-1l-0.2-1.5c-0.1-0.5-0.5-0.8-0.9-0.8l-2.8,0.4c-0.4,0.1-0.7,0.5-0.7,1l0.2,1.4c0.1,0.5,0.5,0.8,0.9,0.8\n        L452.5,130.9z M446,135.9c0.4,0,0.8-0.4,0.7-0.9l-0.1-1.4c0-0.5-0.4-0.8-0.9-0.8l-4.4,0.4c-0.4,0-0.8,0.4-0.7,0.9l0.1,1.3\n        c0,0.4,0.4,0.8,0.9,0.8L446,135.9z M452.9,135.5c0.4,0,0.8-0.5,0.7-1l-0.1-1.5c0-0.5-0.4-0.9-0.9-0.8l-2.8,0.3\n        c-0.4,0-0.8,0.5-0.7,0.9l0.1,1.4c0,0.5,0.4,0.8,0.9,0.8L452.9,135.5L452.9,135.5z M446.2,140.3c0.4,0,0.8-0.4,0.8-0.9V138\n        c0-0.5-0.4-0.8-0.8-0.8l-4.5,0.3c-0.4,0-0.8,0.4-0.8,0.9v1.3c0,0.4,0.4,0.8,0.8,0.8L446.2,140.3L446.2,140.3z M453.1,140.1\n        c0.4,0,0.8-0.4,0.8-0.9v-1.5c0-0.5-0.4-0.9-0.8-0.9l-2.8,0.2c-0.4,0-0.8,0.4-0.8,0.9v1.4c0,0.5,0.4,0.9,0.8,0.8H453.1z\n         M457.5,141.8c-0.1-5.6-0.6-11.1-1.4-16.6c3.1,2.3,6.4,4.8,9.3,7.6c-1.2,1.5-2.4,3-3.7,4.5l1.1-0.1c0.4,0,0.8,0.4,0.8,0.9v0.5\n        c0,0.5-0.3,1-0.8,1l-3.5,0.1L457.5,141.8z\"/>\n                </g>\n                <path className=\"st7\" d=\"M425.9,32.7c1.9-0.3,3.3-0.6,3.7-1v-0.1l-0.1-0.6v-0.1l-0.8-0.7l-0.7-0.6l-0.7-0.2c-2.4-1-7.6-2.1-13.8,3.2\n      l0.3,1c0,0,4.3-0.2,8.4-0.5c1.2,3.7,2.2,7.5,2.9,11.2l-0.2-0.3h-0.1l-0.8,0.1l-0.3-0.4h-0.2l-0.4,0.3v0.1l0.1,0.1\n      c-3.4,1-6.7,2-10.1,3.2l-0.7-0.9h-0.1l-0.3,0.2v0.1l0.1,0.1l-0.7,0.5v0.1l0.3,0.4c-3.6,1.3-7.1,2.7-10.5,4.2l0.6,0.9\n      c3.5-1.4,7-2.8,10.6-4.1c1.1,1.7,2.3,3.4,3.3,5.2c-2.5,2.7-5.1,5.3-7.8,7.8l0.6,0.8c2.7-2.5,5.3-5,7.8-7.6l0.2,0.4h0.1l0.7-0.4\n      l0.1,0.1h0.1l0.4-0.2v-0.1l-0.6-1c2.4-2.5,4.8-5.2,7.1-7.9v0.1h0.1l0.5-0.3v-0.1l-0.3-0.4l0.4-0.6c0.7,3.6,1.2,7.3,1.5,10.8\n      l0.1,1.1v0.1L426,56l0.7,0.8l0.1,1l0.1,0.1l3.4,0.2h0.1V58C430,49.7,428.6,41.2,425.9,32.7L425.9,32.7z M416.9,52.9\n      c-0.9-1.6-2-3-2.9-4.5c3.1-1,6.2-2,9.4-2.9C421.3,48,419.1,50.5,416.9,52.9z\"/>\n                <path className=\"st7\" d=\"M353.7-7.2c1.6-4.6,4.2-5.6,7.1-6.2c3.1-0.6,5.3-2.1,5.3-2.1s-0.3,2.3-2.7,3.9c3.7-0.2,7.2-3,8.1-4.4\n      c1.2,6.8-3.2,14.5-9.9,16.7c19.1,5.3,20.3-14.2,19.9-16.9c-0.6,1.7-2.5,3.8-4.5,3.6c5.1-8.7,2-14.6,2-14.6c-3,4.1-9.4,5.5-14.7,6\n      c1.3-1.5,2.2-2.6,2.8-4.7c-2.8,2.4-6.8,2.5-9.9,4.6C353-18.6,351.7-14.8,353.7-7.2L353.7-7.2z\"/>\n                <path className=\"st7\" d=\"M320.6-60.3c-2.4-2.7-6.5-4.8-10.9-5.6c-5.5-1.1-10.3,0-13.3,2.9c-1.4,1.4-2.3,3.1-2.8,5.2\n      c-0.4,1.9-0.5,4-0.2,6.3c3.8-6.8,11.6-11.1,19.4-9.6c0,0-7.6,0.5-13.3,5.6l-0.2,0.2c-1.2,1.1-2.2,2.3-3.1,3.8\n      c-1.5,2.2-3,5.3-3.8,9.3l3.3,0.6c0,0,0.1-3.2,1.6-6.6c1.4,0.5,2.6,0.8,3.8,1c3,0.6,5.2,0.3,7.1-0.8c1.7-1,2.7-2.5,3.9-4.1\n      c1.8-2.5,3.8-5.3,8.4-6.8c0.3-0.1,0.5-0.3,0.5-0.6C320.9-59.8,320.8-60.1,320.6-60.3L320.6-60.3z\"/>\n                <path className=\"st7\" d=\"M238.7-70.7c-0.5-5.2-4.3-3.8-4.3-3.8c-3.1-4.1-7.2-0.3-7.2-0.3c-1.5-1.1-2.9,0-3.5,0.7\n      c-0.1-2.1-1.7-4.3-1.7-4.3c-0.3-4.2-3.6-7-3.6-7c-0.2-2.8-2.4-4.3-2.4-4.3s-2.2,1.5-2.4,4.3c0,0-3.3,2.8-3.6,7c0,0-3.3,4.9,0,7.5\n      c0,0-2.4,2.8,0.7,4.6c0,0,0,2.8,3.7,2.6c0,0.8,0.1,6.5-1.7,10.3h6.7c-1.4-4.4-1.6-9.6-1.7-10.3c3.5,0.1,2.7-2.6,2.7-2.6\n      c3.1-1.8,1.6-4.6,1.6-4.6c0.2-0.1,0.4-0.3,0.6-0.4c0.3,1.3,1.7,1.8,1.7,1.8c-4.3,5.5,1,7,1,7c0,2.6,3.7,1.1,3.7,1.1s0.1,0,0.3-0.1\n      c-0.2,5.2-0.6,8.1-0.6,8.1h3.7c0,0-0.5-2.9-0.9-8.1c0.2,0,0.4,0.1,0.5,0.2c3.4,1.6,4.3-1.2,4.3-1.2c1.7-1.3-1.3-4.7-1.3-4.7\n      C238.8-68,238.7-70.7,238.7-70.7L238.7-70.7z\"/>\n              </g>\n            </g>\n            <ellipse id=\"THIS\" className=\"st20\" cx=\"222.2\" cy=\"154\" rx=\"1.8\" ry=\"1.6\" />\n          </svg>\n\n          <g id=\"highlight\">\n            <path opacity=\".19\" fill=\"#D5DAE2\" stroke=\"#1B1C1E\" stroke-width=\"2\" stroke-miterlimit=\"10\" d=\"M222.3-12v128.7h.1v184.6c0 15.5 12.7 28.1 28.4 28.2 15.7 0 28.3-12.6 28.4-28.2L278-12h-55.7z\" />\n          </g>\n          <g className=\"money-lg money\" id=\"money\" fill=\"#23262C\">\n            <path d=\"M639.6 360.3h1.2v10.4h-1.2z\" />\n            <path d=\"M640.3 373.3c-.9 0-1.6-.7-1.6-1.6 0-.9.7-1.6 1.6-1.6.9 0 1.6.7 1.6 1.6-.1.9-.8 1.6-1.6 1.6zM658.7 291.7h-1.2v68.1h-29.3v-5.1H627v6h31.7v-69zM595.6 354.7h.8v5.1h19.7v-5.1h.8v6h-21.3v-6z\" />\n            <path d=\"M605.4 360.3h1.2v10.4h-1.2z\" />\n            <circle cx=\"606\" cy=\"371.7\" r=\"1.6\" />\n            <g>\n              <path d=\"M554.3 291.7h1.2v68.1h29.3v-5.1h1.2v6h-31.7v-69z\" />\n              <path d=\"M572 360.3h1.2v10.4H572z\" />\n              <path d=\"M572.7 373.3c-.9 0-1.6-.7-1.6-1.6 0-.9.7-1.6 1.6-1.6.9 0 1.6.7 1.6 1.6-.1.9-.8 1.6-1.6 1.6z\" />\n            </g>\n            <g className=\"one\">\n              <path d=\"M576.6 333.7h-5.4v-1.6h5.4c.4 0 .8-.3.8-.8 0-.4-.3-.8-.8-.8h-2.3v-.8c0-.4-.3-.8-.8-.8-.4 0-.8.3-.8.8v.8h-2.3c-.4 0-.8.3-.8.8v3.1c0 .4.3.8.8.8h5.4v1.6h-5.4c-.4 0-.8.3-.8.8s.3.8.8.8h2.3v.8c0 .4.3.8.8.8.4 0 .8-.3.8-.8v-.8h2.3c.4 0 .8-.3.8-.8v-3.1c0-.4-.3-.8-.8-.8z\" />\n              <path d=\"M583.2 329.3c-1.1-1.9-2.5-3.4-3.7-4.7-.8-.9-1.7-1.9-2-2.5.5-.3.9-.6 1.2-1 .3-.3.3-.8 0-1.1-.3-.3-.7-.3-1-.1.3-1 1-2.3 2.4-3.4.3-.2.4-.6.2-1 0-.1-1-2-3-2-1.3 0-1.7.8-1.9 1.2-.2.3-.2.4-.5.4-.6 0-1.3-.3-2-.7-.8-.4-1.7-.9-2.7-.9-1.8 0-3.5 1.6-3.6 1.8-.2.2-.2.4-.2.6s.1.4.3.6c1.1.9 2 2 2.4 3.3v.1c-.3-.2-.7-.2-1 .1-.3.3-.3.8 0 1.1.3.3.7.7 1.2 1-.3.7-1.2 1.6-2 2.5-1.1 1.3-2.6 2.8-3.7 4.7-1.3 2.2-2 4.4-2 6.8 0 3.2 1.2 5.5 3.5 6.9 1.9 1.1 4.5 1.7 8.2 1.7 3.7 0 6.3-.5 8.2-1.7 2.3-1.4 3.5-3.7 3.5-6.9.2-2.4-.5-4.6-1.8-6.8zm-14.7-13.4c.5-.4 1.3-.8 1.9-.8.6 0 1.3.3 2 .7.8.4 1.7.9 2.7.9 1.3 0 1.7-.8 1.9-1.2.2-.3.2-.4.5-.4.6 0 1 .3 1.3.6-2.1 1.9-2.7 4.3-2.8 5.3-.6.2-1.3.2-2.4.2s-1.8-.1-2.4-.2c-.2-1-.7-3.2-2.7-5.1zm5 27.2c-7.1 0-10.1-2.1-10.1-7 0-4.6 3-8 5.2-10.4 1.1-1.2 1.9-2.1 2.3-3 .7.2 1.5.2 2.6.2s1.9-.1 2.6-.2c.4.9 1.2 1.8 2.3 3 2.2 2.4 5.2 5.8 5.2 10.4 0 4.9-3 7-10.1 7z\" />\n            </g>\n            <g className=\"two\">\n              <path d=\"M610.1 333.7h-5.4v-1.6h5.4c.4 0 .8-.3.8-.8 0-.4-.3-.8-.8-.8h-2.3v-.8c0-.4-.3-.8-.8-.8-.4 0-.8.3-.8.8v.8h-2.3c-.4 0-.8.3-.8.8v3.1c0 .4.3.8.8.8h5.4v1.6h-5.4c-.4 0-.8.3-.8.8s.3.8.8.8h2.3v.8c0 .4.3.8.8.8.4 0 .8-.3.8-.8v-.8h2.3c.4 0 .8-.3.8-.8v-3.1c-.1-.4-.4-.8-.8-.8z\" />\n              <path d=\"M616.6 329.3c-1.1-1.9-2.5-3.4-3.7-4.7-.8-.9-1.7-1.9-2-2.5.5-.3.9-.6 1.2-1 .3-.3.3-.8 0-1.1-.3-.3-.7-.3-1-.1.3-1 1-2.3 2.4-3.4.3-.2.4-.6.2-1 0-.1-1-2-3-2-1.3 0-1.7.8-1.9 1.2-.2.3-.2.4-.5.4-.6 0-1.3-.3-2-.7-.8-.4-1.7-.9-2.7-.9-1.8 0-3.5 1.6-3.6 1.8-.2.2-.2.4-.2.6 0 .2.1.4.3.6 1.1.9 2 2 2.4 3.3v.1c-.3-.2-.7-.2-1 .1-.3.3-.3.8 0 1.1.3.3.7.7 1.2 1-.3.7-1.2 1.6-2 2.5-1.1 1.3-2.6 2.8-3.7 4.7-1.3 2.2-2 4.4-2 6.8 0 3.2 1.2 5.5 3.5 6.9 1.9 1.1 4.5 1.7 8.2 1.7 3.7 0 6.3-.5 8.2-1.7 2.3-1.4 3.5-3.7 3.5-6.9.2-2.4-.4-4.6-1.8-6.8zM602 315.9c.5-.4 1.3-.8 1.9-.8.6 0 1.3.3 2 .7.8.4 1.7.9 2.7.9 1.3 0 1.7-.8 1.9-1.2.2-.3.2-.4.5-.4.6 0 1 .3 1.3.6-2.1 1.9-2.7 4.3-2.8 5.3-.6.2-1.3.2-2.4.2s-1.8-.1-2.4-.2c-.2-1-.7-3.2-2.7-5.1zm5 27.2c-7.1 0-10.1-2.1-10.1-7 0-4.6 3-8 5.2-10.4 1.1-1.2 1.9-2.1 2.3-3 .7.2 1.5.2 2.6.2s1.9-.1 2.6-.2c.4.9 1.2 1.8 2.3 3 2.2 2.4 5.2 5.8 5.2 10.4 0 4.9-3.1 7-10.1 7z\" />\n            </g>\n            <g className=\"three\">\n              <path d=\"M643.9 333.7h-5.4v-1.6h5.4c.4 0 .8-.3.8-.8s-.3-.8-.8-.8h-2.3v-.8c0-.4-.3-.8-.8-.8-.4 0-.8.3-.8.8v.8h-2.3c-.4 0-.8.3-.8.8v3.1c0 .4.3.8.8.8h5.4v1.6h-5.4c-.4 0-.8.3-.8.8s.3.8.8.8h2.3v.8c0 .4.3.8.8.8.4 0 .8-.3.8-.8v-.8h2.3c.4 0 .8-.3.8-.8v-3.1c-.1-.4-.4-.8-.8-.8z\" />\n              <path d=\"M650.4 329.3c-1.1-1.9-2.5-3.4-3.7-4.7-.8-.9-1.7-1.9-2-2.5.5-.3.9-.6 1.2-1 .3-.3.3-.8 0-1.1-.3-.3-.7-.3-1-.1.3-1 1-2.3 2.4-3.4.3-.2.4-.6.2-1 0-.1-1-2-3-2-1.3 0-1.7.8-1.9 1.2-.2.3-.2.4-.5.4-.6 0-1.3-.3-2-.7-.8-.4-1.7-.9-2.7-.9-1.8 0-3.5 1.6-3.6 1.8-.2.2-.2.4-.2.6 0 .2.1.4.3.6 1.1.9 2 2 2.4 3.3v.1c-.3-.2-.7-.2-1 .1-.3.3-.3.8 0 1.1.3.3.7.7 1.2 1-.3.7-1.2 1.6-2 2.5-1.1 1.3-2.6 2.8-3.7 4.7-1.3 2.2-2 4.4-2 6.8 0 3.2 1.2 5.5 3.5 6.9 1.9 1.1 4.5 1.7 8.2 1.7 3.7 0 6.3-.5 8.2-1.7 2.3-1.4 3.5-3.7 3.5-6.9.2-2.4-.4-4.6-1.8-6.8zm-14.6-13.4c.5-.4 1.3-.8 1.9-.8.6 0 1.3.3 2 .7.8.4 1.7.9 2.7.9 1.3 0 1.7-.8 1.9-1.2.2-.3.2-.4.5-.4.6 0 1 .3 1.3.6-2.1 1.9-2.7 4.3-2.8 5.3-.6.2-1.3.2-2.4.2s-1.8-.1-2.4-.2c-.2-1-.7-3.2-2.7-5.1zm5 27.2c-7.1 0-10.1-2.1-10.1-7 0-4.6 3-8 5.2-10.4 1.1-1.2 1.9-2.1 2.3-3 .7.2 1.5.2 2.6.2s1.9-.1 2.6-.2c.4.9 1.2 1.8 2.3 3 2.2 2.4 5.2 5.8 5.2 10.4 0 4.9-3.1 7-10.1 7z\" />\n            </g>\n          </g>\n          <g fill=\"#414751\" className=\"million\">\n            <path d=\"M576.8 441.8h-9.6v-2.7l7.5-2.1-7.5-2.1v-2.7h9.6v1.6H569v.2l7.5 2.3v1.6L569 440v.2h7.9v1.6zM576.8 429.2h-9.6v-1.6h9.6v1.6zM576.8 419.3v5.4h-9.6v-1.6h8.2v-3.8h1.4zM576.8 412v5.4h-9.6v-1.6h8.2V412h1.4zM576.8 410h-9.6v-1.6h9.6v1.6zM575.8 399c.8.6 1.2 1.6 1.2 3s-.4 2.5-1.2 3c-.8.6-2 .9-3.7.9s-2.9-.3-3.8-.9c-.8-.6-1.2-1.6-1.2-3s.4-2.4 1.2-3c.8-.6 2.1-.9 3.8-.9 1.7.1 2.9.4 3.7.9zm-1 4.9c.6-.3.8-.9.8-1.8s-.3-1.5-.8-1.8c-.5-.3-1.4-.5-2.7-.5-1.3 0-2.2.2-2.8.5-.6.3-.9.9-.9 1.8s.3 1.5.9 1.8c.6.3 1.5.5 2.8.5s2.2-.2 2.7-.5zM576.8 395.7h-9.6V393l8.2-2.9v-.2h-8.2v-1.6h9.6v2.7l-8.2 3v.2h8.2v1.5zM568.5 382.6c0 1.2.4 1.8 1.2 1.8.4 0 .7-.1.9-.4.2-.3.4-.9.7-1.9.3-1 .6-1.6 1-2 .4-.4.9-.6 1.7-.6 1 0 1.8.3 2.3.9s.7 1.4.7 2.3c0 .8-.1 1.7-.3 2.6l-.1.5-1.2-.2c.2-1.3.3-2.2.3-2.9 0-1.2-.5-1.7-1.5-1.7-.4 0-.7.1-.9.4-.2.3-.4.8-.6 1.8-.2.9-.5 1.6-.9 2s-1 .7-1.9.7-1.5-.3-2-.8c-.4-.6-.7-1.3-.7-2.3 0-.7.1-1.6.3-2.5l.1-.5 1.3.1c-.4 1.2-.4 2.1-.4 2.7z\" />\n          </g>\n          <g fill=\"#414751\">\n            <path d=\"M600.3 437.8v-3.6c0-1 .2-1.7.6-2.2.4-.5 1-.7 1.9-.7.6 0 1 .1 1.3.3.3.2.6.5.8.9.4-.9 1.1-1.4 2.2-1.4 1.8 0 2.7 1 2.7 3.1v3.8h-9.5zm1.4-3.6v2h2.7v-2.1c0-.9-.5-1.4-1.4-1.4-.9.1-1.3.6-1.3 1.5zm4 0v2.1h2.8v-2.1c0-.5-.1-.9-.3-1.2s-.6-.4-1.1-.4c-.5 0-.9.1-1.1.4s-.3.7-.3 1.2zM609.9 428.5h-9.6V427h9.6v1.5zM609.9 418.7v5.4h-9.6v-1.6h8.2v-3.8h1.4zM609.9 411.3v5.4h-9.6v-1.6h8.2v-3.8h1.4zM609.9 409.4h-9.6v-1.6h9.6v1.6zM608.9 398.4c.8.6 1.2 1.6 1.2 3s-.4 2.5-1.2 3c-.8.6-2 .9-3.7.9s-2.9-.3-3.8-.9c-.8-.6-1.2-1.6-1.2-3s.4-2.4 1.2-3c.8-.6 2.1-.9 3.8-.9 1.7 0 2.9.3 3.7.9zm-1 4.8c.6-.3.8-.9.8-1.8s-.3-1.5-.8-1.8c-.5-.3-1.4-.5-2.7-.5-1.3 0-2.2.2-2.8.5-.6.3-.9.9-.9 1.8s.3 1.5.9 1.8c.6.3 1.5.5 2.8.5s2.1-.2 2.7-.5zM609.9 395h-9.6v-2.7l8.2-2.9v-.2h-8.2v-1.6h9.6v2.7l-8.2 3v.2h8.2v1.5zM601.5 381.9c0 1.2.4 1.8 1.2 1.8.4 0 .7-.1.9-.4.2-.3.4-.9.7-1.9.3-1 .6-1.6 1-2 .4-.4.9-.6 1.7-.6 1 0 1.8.3 2.3.9s.7 1.4.7 2.3c0 .8-.1 1.7-.3 2.6l-.1.5-1.2-.2c.2-1.3.3-2.2.3-2.9 0-1.2-.5-1.7-1.5-1.7-.4 0-.7.1-.9.4-.2.3-.4.8-.6 1.8-.2.9-.5 1.6-.9 2s-1 .7-1.9.7-1.5-.3-2-.8c-.4-.6-.7-1.3-.7-2.3 0-.7.1-1.6.3-2.5l.1-.5 1.3.1c-.3 1.2-.4 2.1-.4 2.7z\" />\n          </g>\n          <g fill=\"#414751\">\n            <path d=\"M637.2 446.5h-1.4v-7h1.4v2.7h8.2v1.6h-8.2v2.7zM642 435.9h3.4v1.6h-9.6v-3.6c0-2.2 1-3.2 3.1-3.2 1.4 0 2.3.5 2.8 1.6l3.8-1.6v1.7l-3.4 1.4v2.1zm-3.1-3.7c-1.1 0-1.7.6-1.7 1.7v2.1h3.5v-2.1c0-.6-.2-1-.5-1.2s-.8-.5-1.3-.5zM645.4 428.1h-9.6v-1.6h9.6v1.6zM645.4 418.3v5.4h-9.6v-1.6h8.2v-3.8h1.4zM645.4 410.9v5.4h-9.6v-1.6h8.2v-3.8h1.4zM645.4 409h-9.6v-1.6h9.6v1.6zM644.4 398c.8.6 1.2 1.6 1.2 3s-.4 2.5-1.2 3c-.8.6-2 .9-3.7.9s-2.9-.3-3.8-.9c-.8-.6-1.2-1.6-1.2-3s.4-2.4 1.2-3c.8-.6 2.1-.9 3.8-.9 1.7 0 2.9.3 3.7.9zm-1 4.8c.6-.3.8-.9.8-1.8s-.3-1.5-.8-1.8c-.5-.3-1.4-.5-2.7-.5-1.3 0-2.2.2-2.8.5-.6.3-.9.9-.9 1.8s.3 1.5.9 1.8c.6.3 1.5.5 2.8.5s2.1-.1 2.7-.5zM645.4 394.6h-9.6v-2.7l8.2-2.9v-.2h-8.2v-1.6h9.6v2.7l-8.2 3v.2h8.2v1.5zM637 381.5c0 1.2.4 1.8 1.2 1.8.4 0 .7-.1.9-.4.2-.3.4-.9.7-1.9.3-1 .6-1.6 1-2 .4-.4.9-.6 1.7-.6 1 0 1.8.3 2.3.9s.7 1.4.7 2.3c0 .8-.1 1.7-.3 2.6l-.1.5-1.2-.2c.2-1.3.3-2.2.3-2.9 0-1.2-.5-1.7-1.5-1.7-.4 0-.7.1-.9.4-.2.3-.4.8-.6 1.8-.2.9-.5 1.6-.9 2s-1 .7-1.9.7-1.5-.3-2-.8c-.4-.6-.7-1.3-.7-2.3 0-.7.1-1.6.3-2.5l.1-.5 1.3.1c-.3 1.2-.4 2.2-.4 2.7z\" />\n          </g>\n          <g id=\"effect\">\n            <path className=\"eLine\" fill=\"none\" stroke=\"#931429\" stroke-miterlimit=\"10\" d=\"M223.1 65.1h186.1\" />\n            <g fill=\"#414751\">\n              <path d=\"M303.6 57.6V48h6v1.4h-4.5V52h3.7v1.3h-3.7v2.8h4.5v1.4h-6zM312.1 57.6V48h6v1.4h-4.4v3.2h3.7V54h-3.7v3.6h-1.6zM320.2 57.6V48h5.9v1.4h-4.4v3.2h3.7V54h-3.7v3.6h-1.5zM328.3 57.6V48h6v1.4h-4.5V52h3.7v1.3h-3.7v2.8h4.5v1.4h-6zM339.9 57.7c-1.4 0-2.3-.4-2.8-1.2-.5-.8-.7-2-.7-3.8 0-1.8.3-3 .8-3.8.5-.8 1.5-1.1 2.8-1.1.8 0 1.7.1 2.7.4l-.1 1.3c-.8-.1-1.7-.2-2.5-.2s-1.4.2-1.7.7-.4 1.4-.4 2.8.1 2.3.4 2.8c.3.5.9.7 1.7.7s1.7-.1 2.5-.2v1.3c-1 .2-1.9.3-2.7.3zM344 49.4V48h7v1.4h-2.7v8.2h-1.6v-8.2H344zM353 57.6V48h1.6v9.6H353zM362.8 48h1.6l-2.4 9.6h-3l-2.4-9.6h1.6l1.9 8.2h.7l2-8.2zM366.5 57.6V48h6v1.4H368V52h3.7v1.3H368v2.8h4.5v1.4h-6zM374.9 57.6V48h2.7l2.9 8.2h.2V48h1.6v9.6h-2.7l-3-8.2h-.2v8.2h-1.5zM385.2 57.6V48h6v1.4h-4.5V52h3.7v1.3h-3.7v2.8h4.5v1.4h-6zM396.5 49.2c-1.2 0-1.8.4-1.8 1.2 0 .4.1.7.4.9.3.2.9.4 1.9.7 1 .3 1.6.6 2 1 .4.4.6.9.6 1.7 0 1-.3 1.8-.9 2.3-.6.5-1.4.7-2.3.7-.8 0-1.7-.1-2.6-.3l-.5-.1.2-1.2c1.3.2 2.2.3 2.9.3 1.2 0 1.7-.5 1.7-1.5 0-.4-.1-.7-.4-.9-.3-.2-.8-.4-1.8-.6-.9-.2-1.6-.5-2-.9-.4-.4-.7-1-.7-1.9s.3-1.5.8-2c.6-.4 1.3-.7 2.3-.7.7 0 1.6.1 2.5.3l.5.1-.1 1.3c-1.2-.3-2.2-.4-2.7-.4zM404.8 49.2c-1.2 0-1.8.4-1.8 1.2 0 .4.1.7.4.9.3.2.9.4 1.9.7 1 .3 1.6.6 2 1 .4.4.6.9.6 1.7 0 1-.3 1.8-.9 2.3-.6.5-1.4.7-2.3.7-.8 0-1.7-.1-2.6-.3l-.5-.1.2-1.2c1.3.2 2.2.3 2.9.3 1.2 0 1.7-.5 1.7-1.5 0-.4-.1-.7-.4-.9-.3-.2-.8-.4-1.8-.6-.9-.2-1.6-.5-2-.9-.4-.4-.7-1-.7-1.9s.3-1.5.8-2c.6-.4 1.3-.7 2.3-.7.7 0 1.6.1 2.5.3l.5.1-.1 1.3c-1.2-.3-2.2-.4-2.7-.4z\" />\n            </g>\n          </g>\n        </svg>\n        <h2>Global Warming Solutions</h2>\n        <div className=\"allDialogs\">\n          <article className=\"dialog d1\">\n            <h3>Land Management</h3>\n            <p>Plant trees &amp; plants to absorb more CO<span className=\"sub\">2</span>, reduce tropical deforestation.</p>\n          </article>\n          <article className=\"dialog d2\">\n            <h3>Biochar</h3>\n            <p>Convert waste vegetation - leaves, straw, etc. - into charcoal &amp; bury.</p>\n          </article>\n          <article className=\"dialog d3\">\n            <h3>B.E.C.S.</h3>\n            <p>Burn biomass for fuel. Capture the resulting CO<span className=\"sub\">2</span> &amp; bury it.</p>\n          </article>\n          <article className=\"dialog d4\">\n            <h3>Carbon Capture</h3>\n            <p>Separate out industrial CO<span className=\"sub\">2</span> &amp; bury it undergroud in old oil wells.</p>\n          </article>\n          <article className=\"dialog d5\">\n            <h3>Paint it White</h3>\n            <p>Paint roofs, roads, &amp; pavements bright white to reflect lots of sunlight.</p>\n          </article>\n          <article className=\"dialog d6\">\n            <h3>Carbon Scrubbers</h3>\n            <p>Use giant towers &amp; artificial trees to scrub pure CO<span className=\"sub\">2</span> from the air.</p>\n          </article>\n          <article className=\"dialog d7\">\n            <h3>Enhanced Land Weathering</h3>\n            <p>Accelerate natural CO<span className=\"sub\">2</span> absorption by rocks by adding minerals to soil.</p>\n          </article>\n          <article className=\"dialog d8\">\n            <h3>Enhanced Ocean Weathering</h3>\n            <p className=\"smaller\">Stir megatonnes of limestone into oceans so more CO<span className=\"sub\">2</span> is absorbed by less acidic waters.</p>\n          </article>\n          <article className=\"dialog d9\">\n            <h3>Cloud Whitening</h3>\n            <p>Air-spray particles of sea salt to make clouds whiter &amp; reflect more sunlight.</p>\n          </article>\n          <article className=\"dialog d10\">\n            <h3>Ocean Fertilisation</h3>\n            <p>Add iron filings to surface water &amp; boost growth of CO<span className=\"sub\">2</span> - absorbing algae.</p>\n          </article>\n          <article className=\"dialog d11\">\n            <h3>Stratospheric Aerosols</h3>\n            <p className=\"smaller\">Scatter sulphate particles high in the atmosphere to reflect sunlight &amp; lower heat.</p>\n          </article>\n          <article className=\"dialog d12\">\n            <h3>Space Reflectors</h3>\n            <p>Launch thousands of orbiting mirrors to divert sunlight away from the surface.</p>\n          </article>\n          <article className=\"dialog d13\">\n            <h3>Desert Reflectors</h3>\n            <p>Cover vast areas of unused land with foil. No, seriously.</p>\n          </article>\n          <article className=\"dialog d14\">\n            <h3>All-Out Nuclear War</h3>\n            <p>Fill the atmosphere with terratonnes of soot, dropping temperatures.</p>\n          </article>\n        </div>\n        <a className=\"replay button\">Replay</a>\n        <div id=\"slider\"></div>\n      </div>\n\n\n\n\n\n    </>\n  )\n}","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/Community.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/metaverse.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/about_page.jsx",["718"],"import React from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"../HomeComp/Footer\";\nimport \"../../css/ecosystem.scss\";\n\n\nexport default function About_page(){\n\n    return(\n        <>\n        <Header/>\n        <div className=\" container-fluid p-0 text-dark \">\n            <div className=\"bg-success  text-center\" style={{ backgroundImage:\"url(./image/bg-bub.png)\" ,backgroundRepeat:\"no-repeat\",backgroundPosition:\"center\" }}>\n                <div className=\"text-white\" style={{fontSize:\"90px\", fontFamily:\"Arial\", fontWeight:\"600\", paddingTop:\"270px\" }}>About</div>\n            </div>\n        </div>\n\n  \n        </>\n    )\n}","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/Developer Api.jsx",["719","720","721","722"],"import Footer from \"./Footer\";\nimport Header from \"./Header\";\n\nimport axios from \"axios\";\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport JSONPretty from \"react-json-pretty\";\nimport 'react-json-pretty/themes/monikai.css';\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n    var JSONPrettyMon = require('react-json-pretty/dist/monikai');\n    \n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 0 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}\n\nexport default function Api() {\n    const [value, setValue] = React.useState(0);\n    const [docs, setDocs] = useState([''])\n    useEffect(() => {\n        axios.get('https://api.kingvrx.com/api/getapi-docs').then((data) => {\n            console.log(data.data.data)\n            setDocs(data.data.data)\n        })\n    }, [])\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <>\n\n        <Box\n            sx={{ flexGrow: 1, backgroundColor: '#f1f1f1', display: 'flex', height: \"100vh\", margin:\"0\", width: \"100%\", }}\n        >\n            <Tabs  style={{  width:\"80vw\"}} className=\" \"\n                orientation=\"vertical\" variant=\"scrollable\" value={value} onChange={handleChange} aria-label=\"Vertical tabs example\" sx={{ borderRight: 1, borderColor: 'divider' }}\n            >\n\n                {docs?.map((docItem) => (\n                    <Tab label={docItem.heading} />\n                ))}\n            </Tabs>\n            <TabPanel value={value} index={0}>\n\n            </TabPanel>\n            {docs?.map((docItem, index) => (\n                <TabPanel value={value} index={index}>\n                    <div className=\" container-fluid\" style={{  width:\"80vw\"}} >\n                        <div className=\"row\">\n                            <div className=\"col-sm-6 \"  >\n                                <h2 className=\"\"> {docItem?.heading}</h2>\n                                <h3 className=\"\"> {docItem?.title}</h3>\n                                <p className=\"\"> {docItem?.url}</p>\n                                <div className=\"\">\n                                    <h3>Parameters</h3>\n                                    <table className=\"table table-responsive\">\n                                        <tbody>\n                                            {docItem?.parameters?.map((params) => (\n                                                <tr className=\"text-dark\">\n\n                                                    <td>{params.name}</td>\n                                                    <td>{params.type}</td>\n                                                    <td>{params.mandatory}</td>\n                                                    <td>{params.description}</td>\n\n                                                </tr>\n                                            ))}\n                                        </tbody>\n                                    </table>\n                                </div>\n\n                                <div className=\"\">\n                                    <h3>Parameters</h3>\n                                    <table className=\"table table-responsive\">\n                                        <tbody>\n                                            {docItem?.parameters?.map((params) => (\n                                                <tr className=\"text-dark\">\n\n                                                    <td>{params.name}</td>\n                                                    <td>{params.type}</td>\n                                                    <td>{params.mandatory}</td>\n                                                    <td>{params.description}</td>\n\n                                                </tr>\n                                            ))}\n                                        </tbody>\n                                    </table>\n                                </div>\n\n\n\n\n                            </div>\n                            <div className=\"col-sm-6 \" >\n                                <div className=\"\" style={{ boxShadow: \"1px 1px 5px\" }}>\n\n                             {/* { JSON.stringify(docItem.response)}\n */}\n                             <JSONPretty id=\"json-pretty\" data={docItem.response} ></JSONPretty>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </TabPanel>\n            ))}\n        </Box>\n{/* <Footer/> */}\n\n        </> \n    );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/constant/index.js",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/helpers/api_functions_new.js",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/actions/authActions.js",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/helpers/helper_functions.js",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/helpers.js",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/helpers/Math.js",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/Loader.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/ftx_design/Roadmap.jsx",["723"],"export default function Roadmap() {\n  const cardImages = [\n    \"launchpad.png\",\n    \"CRYPTOBANKING.png\",\n    \"NFT_MARKETPLACE.png\",\n    \"blockchain_explorer.png\",\n  ];\n  return (\n    <div\n      className=\"container-fluid py-5\"\n      style={{\n        /* backgroundColor: \"lightgrey\", */\n        backgroundImage: \"url(/newimages/f29c81a.webp)\",\n        backgroundPosition: \"bottom\",\n        //backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n    >\n      <div className=\"container\">\n        <div className=\"row\">\n          {cardImages.map((cardImg) => (\n            <div className=\"col col-12 col-md-6 col-lg-3\">\n              <div className=\"card\">\n                <img\n                  src={`/newimages/${cardImg}`}\n                  className=\"card-img-top card-img-bottom\"\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-lg-12 text-center\">\n            <p className=\"mb-1\" style={{ fontWeight: \"500\" }}>\n              BITFLASH initiate in market with exchange and its own token BTEX.\n              Future planning of BITFLASH is gathering of trading community in\n              BITFLASH Exchange\n            </p>\n            <p className=\"mb-1\" style={{ fontWeight: \"500\" }}>\n              BITFLASH preparing own blockchain explorer that will launch mid\n              feb 2022, with testnet and crypto wallet.\n            </p>\n            <p className=\"mb-1\" style={{ fontWeight: \"500\" }}>\n              BTEX NFT Market Place for art tokenization will coming soon.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/ftx_design/Header.jsx",["724","725","726","727","728","729","730","731","732","733"],"import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isEmail, isPass } from \"../redux/helpers/form-validator.functions\";\nimport { user_Login, user_authentication } from \"../redux/actions/authActions\";\nimport { user_logout } from \"../redux/actions/authActions\";\nimport { switchTheme } from \"../redux/actions/coinDBAction\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport {\n  N_getGoogleAuth,\n  N_sendOTPMobileEmail,\n} from \"../redux/helpers/api_functions_new\";\nimport { checkEmail, checkPassword } from \"../redux/helpers/helper_functions\";\nimport $ from \"jquery\";\n\nexport default function Header(props) {\n  const [showPassword, setShowPassword] = useState(false);\n  const { isLoggedIn } = useSelector((state) => state.AuthReducer);\n  console.log(\"props\",props)\n\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState();\n  const [loading, setLoading] = useState(false);\n  const [password, setPassword] = useState();\n  const [emailError, setEmailError] = useState(false);\n  const [passError, setPassError] = useState(false);\n  const { webData } = useSelector((state) => state.websiteDBReducer);\n\n  const navLinks = [\n    { title: \"Exchange\", page: \"/exchange/btc-inr\" },\n    { title: \"P2P\", page: \"/p2p/usdt-inr\" },\n    { title: \"Staking\", page: \"/btexstaking\" },\n    { title: \"Buy/Sell\", page: \"/buy-sell\" },\n  ];\n\n  function clearBackdrop() {\n    $(\".modal-backdrop\").hide();\n    $(\"body\").removeClass(\"modal-open\").css({overflow: \"auto\", paddingRight: \"0px\"});\n    $(\"body\").removeAttr(\"data-bs-overflow\");\n    $(\"body\").removeAttr(\"data-bs-padding-right\");\n  }\n\n  async function backRouter() {\n    dispatch(\n      user_logout(() => {\n        //props.history.replace(\"/exchange/btc-inr\");\n        document.location.reload();\n      })\n    );\n  }\n  async function swtchTheme(theme_name) {\n    dispatch(switchTheme(theme_name));\n  }\n\n  const submit = (e) => {\n    e.preventDefault();\n    if (!checkEmail(email)) {\n      setEmailError(\"Not a valid email OR email should be in small letters\");\n    }\n    if (!checkPassword(password)) {\n      setPassError(\"Not a valid password\");\n    }\n    if (!emailError && !passError) {\n      N_getGoogleAuth(email, password).then((data) => {\n        if (data.status === 200 && data.params.authenticator_status === 0) {\n          setLoading(true);\n          dispatch(\n            user_Login(\n              email,\n              password,\n              () => {\n                setLoading(false);\n                clearBackdrop();\n                props.history.replace(\"/otp\");\n              },\n              () => setLoading(false)\n            )\n          );\n        } else {\n          if (data.status === 200 && data.params.authenticator_status === 1) {\n            N_sendOTPMobileEmail(email, data.params.mobile_no);\n            dispatch(\n              user_authentication(\n                email,\n                password,\n                data.params.authenticator_status,\n                data.params.mobile_no,\n                () => {\n                  setLoading(false);\n                  clearBackdrop();\n                  props.history.replace(\"/authenticator\");\n                }\n              )\n            );\n          } else if (\n            data.status === 200 &&\n            data.params.authenticator_status === 2\n          ) {\n            dispatch(\n              user_authentication(\n                email,\n                password,\n                data.params.authenticator_status,\n                data.params.authenticator_key,\n                () => {\n                  setLoading(false);\n                  clearBackdrop();\n                  props.history.replace(\"/authenticator\");\n                }\n              )\n            );\n          }\n        }\n      });\n    }\n  };\n\n  return (\n    <>\n      <header>\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark sticky-top\">\n          <div class=\"container-fluid\">\n            <a class=\"navbar-brand\" href=\"/\">\n              <img\n                src=\"/newimages/bitflash_logo.png\"\n                style={{ height: \"30px\" }}\n              />\n            </a>\n            <button\n              class=\"navbar-toggler\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#navbarSupportedContent\"\n              aria-controls=\"navbarSupportedContent\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n              <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                {navLinks.map((navlink) => (\n                  <li class=\"nav-item mx-2\">\n                    <a class=\"nav-link fw-bold text-white py-2\" href={navlink.page}>\n                      {navlink.title}\n                    </a>\n                  </li>\n                ))}\n              </ul>\n              {/* <form class=\"d-flex\" role=\"search\">\n                <div className=\"input-group\">\n                  <span class=\"input-group-text\" id=\"basic-addon1\">\n                    <span className=\"fas fa-serach\"></span>\n                  </span>\n                  <input\n                    class=\"form-control me-2\"\n                    type=\"search\"\n                    placeholder=\"Search\"\n                    aria-label=\"Search\"\n                  />\n                </div>\n              </form> */}\n              <ul class=\"navbar-nav ms-auto mb-2 mb-lg-0\">\n                {isLoggedIn ? (\n                  <li class=\"nav-item dropdown\">\n                    <a\n                      class=\"nav-link fw-bold dropdown-toggle text-white py-2\"\n                      href=\"#\"\n                      id=\"navbarDropdown\"\n                      role=\"button\"\n                      data-bs-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                    >\n                      <span className=\"fas fa-user\"></span>\n                    </a>\n                    <ul\n                      class=\"dropdown-menu dropdown-menu-dark dropdown-menu-end\"\n                      aria-labelledby=\"navbarDropdown\"\n                    >\n                      <li>\n                        <a class=\"dropdown-item\" href=\"/wallet\">\n                          Funds\n                        </a>\n                      </li>\n                      <li>\n                        <a class=\"dropdown-item\" href=\"/profile\">\n                          Account\n                        </a>\n                      </li>\n                      {/* <li>\n                      <hr class=\"dropdown-divider\" />\n                    </li> */}\n                      <li>\n                        <a class=\"dropdown-item\" href=\"#\">\n                          Support\n                        </a>\n                      </li>\n                      <li>\n                        <a\n                          class=\"dropdown-item\"\n                          href=\"#\"\n                          onClick={(e) => {\n                            e.preventDefault();\n                            backRouter();\n                          }}\n                        >\n                          Logout\n                        </a>\n                      </li>\n                    </ul>\n                  </li>\n                ) : (\n                  <>\n                    <li class=\"nav-item mx-2\">\n                      <a\n                        class=\"nav-link fw-bold text-white py-2\"\n                        aria-current=\"page\"\n                        href=\"/login\"\n                        /* data-bs-toggle=\"modal\"\n                        data-bs-target=\"#exampleModal\" */\n                      >\n                        Login\n                      </a>\n                    </li>\n                    <li class=\"nav-item mx-2\">\n                      <a class=\"nav-link mbtn fw-bold px-4 text-white py-2\" href=\"/create\">\n                        Create a free account\n                      </a>\n                    </li>\n                  </>\n                )}\n\n                {/* <li class=\"nav-item dropdown\">\n                <a\n                  class=\"nav-link dropdown-toggle\"\n                  href=\"#\"\n                  id=\"navbarDropdown\"\n                  role=\"button\"\n                  data-bs-toggle=\"dropdown\"\n                  aria-expanded=\"false\"\n                >\n                  Dropdown\n                </a>\n                <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                  <li>\n                    <a class=\"dropdown-item\" href=\"#\">\n                      Action\n                    </a>\n                  </li>\n                  <li>\n                    <a class=\"dropdown-item\" href=\"#\">\n                      Another action\n                    </a>\n                  </li>\n                  <li>\n                    <hr class=\"dropdown-divider\" />\n                  </li>\n                  <li>\n                    <a class=\"dropdown-item\" href=\"#\">\n                      Something else here\n                    </a>\n                  </li>\n                </ul>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link disabled\">Disabled</a>\n              </li> */}\n              </ul>\n            </div>\n          </div>\n        </nav>\n      </header>\n      {/* Login Model */}\n      <div\n        class=\"modal fade\"\n        id=\"exampleModal\"\n        tabindex=\"-1\"\n        aria-labelledby=\"exampleModalLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog  modal-dialog-centered modal-dialog-scrollable\">\n          <div class=\"modal-content\">\n            <div class=\"modal-body\">\n              <form className=\"my-form\" onSubmit={submit}>\n                <div className=\"text-center my-3\">\n                  <div className=\"mb-1\">\n                    Confirm you are using the official site\n                  </div>\n                  <div>\n                    <span className=\"fas fa-lock\"></span> https://bitflash.finance\n                  </div>\n                  <div>\n                    <img\n                      src=\"/newimages/bitflash_logo.png\"\n                      style={{ height: \"30px\" }}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group mb-3\">\n                  <div class=\"form-floating bg-dark\">\n                    <input\n                      id=\"user_email\"\n                      name=\"user_email\"\n                      type=\"email\"\n                      class=\"form-control bg-dark text-light\"\n                      placeholder=\"name@example.com\"\n                      autoFocus\n                      required\n                      defaultValue={email}\n                      onChange={(e) => setEmail(e.target.value.toLowerCase())}\n                    />\n                    <label for=\"email\">\n                      <span className=\"fas fa-envelope\"></span> Email address\n                    </label>\n                  </div>\n                  {emailError && (\n                    <div className=\"text-danger\">{emailError}</div>\n                  )}\n                </div>\n\n                <div className=\"form-group mb-3\">\n                  <div class=\"form-floating bg-dark\">\n                    <input\n                      id=\"pass\"\n                      name=\"user_password\"\n                      type={showPassword ? \"text\" : \"password\"}\n                      class=\"form-control bg-dark text-light\"\n                      placeholder=\"Password\"\n                      required\n                      defaultValue={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                    <label for=\"password\">\n                      <span className=\"fas fa-unlock-alt\"></span> Password\n                    </label>\n                    <div\n                      class=\"position-absolute top-50 end-0 translate-middle-y mx-3\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={(e) => {\n                        setShowPassword(!showPassword);\n                      }}\n                    >\n                      <span\n                        className={\n                          showPassword ? \"fas fa-eye-slash\" : \"fas fa-eye\"\n                        }\n                      ></span>\n                    </div>\n                  </div>\n                  {passError && <div className=\"text-danger\">{passError}</div>}\n                </div>\n\n                <div className=\"form-group d-flex justify-content-end mb-3\">\n                  <div>\n                    <a href=\"/forget\">Forgot Password?</a>\n                  </div>\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-block btn-primary w-100 mb-3 d-flex align-items-center justify-content-center\"\n                  disabled={loading ? true : false}\n                >\n                  {loading && (\n                    <span\n                      class=\"spinner-border spinner-border-sm mx-2\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    ></span>\n                  )}\n                  Sign In\n                </button>\n\n                <div className=\"text-center\">\n                  No account? <a href=\"/create\">Register</a>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/Index-components/Footer.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/Header.jsx",["734","735","736","737","738","739","740","741"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport { useSelector } from \"react-redux\";\nimport NotificationBanner from \"../components/BannerData\";\nimport autoMergeLevel1 from \"redux-persist/es/stateReconciler/autoMergeLevel1\";\nimport { round } from \"../redux/helpers/Math\";\n\n\nexport default function Header(props) {\n  const { webData } = useSelector((state) => state.websiteDBReducer);\n  const { coins } = useSelector((state) => state.coinDBReducer);\n  let coins1 = Object.values(coins);\n\n  const banner_child = coins1 && coins1.map((item, index)=>{\n    let usdtprize = coins1 && coins1.find((item)=> item.symbol == 'USDT');\n    return (\n      <>\n      {item.symbol == 'BTC' || item.symbol == 'BNB' || item.symbol == 'ETH' || item.symbol == 'TRX' || item.symbol == 'BTEX'?\n\n      <div className=\"px-5  mx-2  d-flex no-wrap\"><b> {item.symbol}/USD </b>:${round(item.raw_current_price_inr/usdtprize.raw_current_price_inr)}<b className={item.direction_inr === 'up'?'text-success':'text-danger'}> {item.direction_inr === 'up'?'+':'-'}{item.price_change_percentage_1h_inr}% </b> </div>\n          :''}\n    </>\n    )\n  })\n  return (\n    <>\n      <div className=\"container-fluid text-dark bg-white \" style={{ overflow: \"hidden\", fontSize: \"15px\", }}>\n        <div className=\"motion d-flex no-wrap\" style={{ width: \"500vw\", overflow: \"hidden\" }} >\n          {banner_child}\n        </div>\n\n\n      </div>\n      <NotificationBanner />\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"container-fluid\">\n          <Link className=\"navbar-brand fw-bolder\" to=\"/\">\n            {webData.website_short_name}\n          </Link>\n          <button\n            className=\"navbar-toggler \"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <GiHamburgerMenu />\n            {/* <span className=\"navbar-toggler-icon\"></span> */}\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mb-2 mb-lg-0 me-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link text-secondary\" to=\"/nftmarketplace\">\n                  NFT Marketplace\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link text-secondary\" to=\"/btextlaunched\">\n                  BTEX Launchpad\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link text-secondary\" to=\"/btextcryptobank\">\n                  BTEX Crypto Banking\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link text-secondary\" to=\"/btextexplorer\">\n                  BTEX Explorer\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link text-secondary\" to=\"/btexstaking\">\n                  BTEX Staking\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/Footer.jsx",["742"],"import React from \"react\";\nimport { BsFacebook, BsTelegram } from \"react-icons/bs\";\nimport {FiPhoneCall } from \"react-icons/fi\";\nimport { AiFillTwitterCircle } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\n\n\nexport default function Footer() {\n  return (\n    <>\n      <div className=\"container-fluid img_hider  py-5\" style={{backgroundColor:\"black\"}}>\n        <div className=\"row my-5 mx-5\">\n          <div className=\"col-lg-3 col-md-3 col-sm-12 text-center\">\n            <h5 className=\"text-light\">About Us</h5>\n           \n\n            <p>\n              <Link className=\"text-white\" to=\"/career\">\n                Career\n              </Link>\n            </p>\n            <p>\n              <a className=\"text-white\" target=\"_blank\" href=\"/wp.pdf\">\n                WhitePaper \n              </a>\n            </p>\n\n            <p>\n              <Link className=\"text-white\" to=\"/download\">\n                Download\n              </Link>\n            </p>\n            <p>\n              <Link className=\"text-white\" to=\"/businesscontact\">\n                Business Contacts\n              </Link>\n            </p>\n            <p>\n              <Link className=\"text-white\" to=\"/community\">\n                Community\n              </Link>\n            </p>\n        \n          </div>\n          <div className=\"col-lg-3 col-md-3 col-sm-12 text-center\">\n            <h5 className=\"text-light\">Links</h5>\n            <p>\n              <Link className=\"text-white\" to=\"/about\">\n                About\n              </Link>\n            </p>\n           \n            <p>\n              <Link className=\"text-white\" to=\"/refer\">\n                Refer\n              </Link>\n            </p>        \n          \n            <p>\n              <Link className=\"text-white \" to=\"/privacy-policy\">\n                    Privacy Policy\n              </Link>\n            </p>\n\n            <p>\n              <Link className=\"text-white \" to=\"/api\">\n                    developer Api\n              </Link>\n            </p>\n\n\n            <p>\n              <Link to=\"https://docs.google.com/forms/d/e/1FAIpQLSd74p0r2aEpdzbt4hACp_ccmPlocpYIfCdLe18M-aUHZbB6fQ/viewform\" className=\"text-white\">\n                Request TOKEN\n              </Link>\n            </p>\n\n            <p>\n              <Link className=\"text-white\" to=\"/terms-condition\">\n                 Terms &amp; Conditions\n              </Link>\n            </p>\n          </div>\n          <div className=\"col-lg-3 col-md-3 col-sm-12 text-center\">\n            <h5 className=\"text-light\">Service</h5>\n            <p className=\"text-white\">INR Trade</p>\n            <Link to=\"/nftmarketplace\" className=\"text-white\">\n              Markeplace for Non-fungible token\n            </Link>\n            <p className=\"text-white\">Unique trade</p>\n            <p className=\"text-white\">Safe trade</p>\n          </div>\n          <div className=\"col-lg-3 col-md-3 col-sm-12 mysocial\">\n            <h5 className=\"text-light\">Social Links</h5>\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <a\n                className=\"text-white text-decoration-none\"\n                href=\"https://facebook.com/bitflashex\"\n                target=\"_blank\"\n              >\n                <BsFacebook style={{ height: \"20px\", margin: \"0px 5px\" }} />\n                Facebook\n              </a>\n              <a\n                className=\"text-white text-decoration-none py-2\"\n                href=\"https://twitter.com/bitflashex\"\n              >\n                <AiFillTwitterCircle\n                  style={{ height: \"20px\", margin: \"0px 5px\" }}\n                />\n                Twitter\n              </a>\n              <a\n                className=\"text-white text-decoration-none py-2\"\n                href=\"https://t.me/+5rCoe7rKXIY4MGQ1\"\n              >\n                <BsTelegram style={{ height: \"20px\", margin: \"0px 5px\" }} />\n                Telegram\n              </a>\n              <a\n                className=\"text-white text-decoration-none\"\n                href=\"tel:18005728486\"\n              >\n                <FiPhoneCall style={{ height: \"20px\", margin: \"0px 5px\" }} />\n                Call Us\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/Banner.jsx",["743","744","745","746","747","748","749","750","751","752"],"import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { round } from \"../redux/helpers/Math\";\nexport default function Banner(props) {\n  const { coins } = useSelector((state) => state.coinDBReducer);\n  let coins1 = Object.values(coins);\n\n  const banner_child = coins1 && coins1.map((item, index)=>{\n    let usdtprize = coins1 && coins1.find((item)=> item.symbol == 'USDT');\n    return (\n      <>\n      {item.symbol == 'BTC' || item.symbol == 'BNB' || item.symbol == 'ETH' || item.symbol == 'TRX' || item.symbol == 'BTEX'?\n      <div className=\"col-lg-2 col-md-4 col-sm-12  \" key={index}>\n      <div className=\"card border-0   hoverCustom \">\n        <div className=\"card-body \">\n          <p >\n          {item.symbol}/USDT&nbsp;&nbsp;\n            <span className={item.direction_inr=='up'?\"text-success\":\"text-danger\"} >{item.price_change_percentage_1h_inr}%</span>\n          </p>\n          <h5>${round(item.raw_current_price_inr/usdtprize.raw_current_price_inr)}</h5>\n        </div>\n      </div>\n    </div>\n    :''}\n    </>\n    )\n  })\n  return (\n    <>\n      <div\n        className=\"container-fluid text-dark\"\n        style={{ background: \"#159e49\" }}\n      >\n        <div\n          className={`row py-3 ${\n            props.image ? \"mx-0\" : \"mx-5\"\n          } d-flex justify-content-between`}\n        >\n          {props.image ? (\n            <img src={`./img/${props.image}`} className=\"img-fluid\" />\n          ) : (\n            <>\n              <div className=\"col-lg-6 col-sm-12 py-5\">\n                <div className=\"text-start\">\n                  <h2 className=\"py-0 bannertxt text-white\"  style={{fontFamily:\"arial\"}}> <b> Buy  &amp;  sell Crypto </b></h2>\n                  {/* <p className=\"fs-1 text\"> Start Trading now </p> */}\n                  <p class=\"h1\"  style={{fontSize:\"45px\",fontFamily:\"arial\"}}> <b> Start Trading now </b> </p>\n \n                  <p className=\"text-white\"  style={{fontSize:\"24px\"}}>\n                    The Highly Efficient exchange for stable and secure Trade.\n                  </p>\n                </div>\n                <a\n                  className=\"btn btn-warning mx-2  py-2 my-3\"\n                  style={{ padding: \"0px 10px\",}}\n                  href=\"/login\"\n                >\n                  Register Now\n                </a>\n                <a\n                  className=\"btn btn-light px-3 py-2\"\n                  \n                  href=\"/exchange/btc-inr\"\n                >\n                  Exchange\n                </a>\n              </div>\n\n              <div className=\"col-lg-6 col-sm-12 banner\"></div>\n            </>\n          )}\n        </div>\n      </div>\n\n      <div className=\"row-sm-12  py-5 \" style={{ background: \"white\",  }}>\n        <div className=\"col-12 text-center\">\n          <img src=\"./img/bitflash-banner-animation.gif\" className=\"gifimg\" />\n        </div>\n      </div>\n\n      <div className=\"container-fluid text-dark\" style={{ background: \"white\" }}>\n        <div className=\"row py-5 text-center d-flex justify-content-center shadow  bg-light hoverCustom \">\n          {banner_child}\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/redux/helpers/form-validator.functions.js",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/NewsLater.jsx",["753","754","755","756"],"import React, { useState } from 'react'\nimport { useEffect } from 'react';\nimport $ from 'jquery';\nimport './NewsLater.css'\nimport { useSelector } from \"react-redux\";\nimport { N_getWebsiteData } from '../redux/helpers/api_functions_new';\nexport default function NewsLater() {\n    let { webData } = useSelector((state) => state.websiteDBReducer);\n    const [data, setData] = useState([\n        {\n            id: 1,\n            type: 'info',\n            msg: 'I won $10000000.'\n        },\n        {\n            id: 2,\n            type: 'danger',\n            msg: 'I won $10000000 again.'\n        },\n        {\n            id: 1,\n            type: 'primary',\n            msg: 'I won $10000000 again and again.'\n        },\n        {\n            id: 2,\n            type: 'success',\n            msg: 'I won $10000000 again and again and again.'\n        }\n    ]);\n    const [news, setNews] = useState(\"\");\n    const [news_type, setNewsType] = useState(\"\");\n    const [index, setIndex] = useState(0);\n    useEffect(() => {\n        N_getWebsiteData()\n        .then((data) => {\n          if (data.status === 200) {\n            let news_later =  data.params.website ? data.params.website.news_later:'';\n            setNews(news_later);\n          }\n        })\n        .catch((e) => e);\n       \n    }, [])\n\n    useEffect(async() => {\n        await $(\"#newslater\").promise();\n        if (data[index]) {\n            // setNews(data[index].msg);\n            setNewsType(data[index].type)\n            setIndex(index + 1);\n        } else {\n            // setNews(data[0].msg);\n            setNewsType(data[0].type)\n            setIndex(1);\n        }\n        await $(\"#newslater\").fadeIn(300).delay(1000).promise();\n    }, [index])\n    return (\n        <>\n        {news ? (\n            <div className=' scrolling-limit text-warning '>\n            <span className=  {'news-type  movingtext scrolling ' + news_type} id=\"newslater\">\n                <span className='news text-danger'>{news}</span>\n            </span>\n            </div>\n        ) : ''}\n        </>\n    )\n}","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Order.system.tab.jsx",["757","758","759","760","761","762","763","764","765","766","767","768"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"./components/Loader\";\nimport { round } from \"./redux/helpers/Math\";\nimport { N_getOrderValume } from \"./redux/helpers/api_functions_new\"\nimport {\n  BUY_MARKET_PRICE,\n  SELL_MARKET_PRICE,\n  SET_ORDER_BOOK,\n} from \"./redux/constant\";\nexport default function   OrderSystemTab(props) {\n  const [activeTab, setActiveTab] = useState(0);\n  const [order_volume_loading, setOrderVolumeLoading] = useState(true);\n  const [sarr, setsarr] = useState([]);\n  const [buy_order, setBuyOrder] = useState([]);\n  const [sell_order, setSellOrder] = useState([]);\n\n  const [barr, setbarr] = useState([]);\n  const { buy_order_book, sell_order_book, order_book_loading } = useSelector(\n    (state) => state.coinDBReducer\n  );\n  const dispatch = useDispatch();\n  const coin = props?.match?.params?.id?.split(\"-\");\n  const coinname = coin[0] + coin[1];\n  const { webData } = useSelector((state) => state.websiteDBReducer);\n\n  function reverseArr(input) {\n    let ret = new Array();\n    for (var i = input.length - 1; i >= 0; i--) {\n      let updatearr ={\n        compare_currency:input[i].compare_currency,\n        currency_type:input[i].currency_type,\n        raw_price:round(input[i].raw_price),\n        volume:round(input[i].volume)\n      }\n      if(round(updatearr.volume)>0)\n      ret.push(input[i]);\n    }\n    return ret;\n  }\n\n  useEffect(() => {\n    if (buy_order_book || sell_order_book) {\n      // console.log(\"test: \", buy_order_book, sell_order_book);\n      // Object.keys(buy_order_book).map((item) => {\n      // console.log(\"inbyob: \", item, )\n      if (buy_order_book[coinname]) {\n        let tarr = reverseArr(\n          buy_order_book[coinname].sort((a, b) => a.raw_price - b.raw_price)\n        );\n        setbarr(tarr);\n      } else {\n        setbarr();\n      }\n      // });\n\n      // Object.keys(sell_order_book).map((item) => {\n      if (sell_order_book[coinname]) {\n        let t1arr = reverseArr(\n          sell_order_book[coinname].sort((a, b) => b.raw_price - a.raw_price)\n        );\n        setsarr(t1arr);\n      } else {\n        setsarr();\n      }\n      // });\n    }\n  }, [buy_order_book, sell_order_book, coinname]);\n\n  function getPercentage(cv, arr) {\n    // console.log(\"perc arr: \", arr);\n    let tv = 0;\n    for (let i = 0; i < arr.length; i++) {\n      tv += parseFloat(arr[i].volume);\n    }\n    return (Number(cv) * 100) / Number(tv);\n  }\n\n  useEffect(() => {\n    dispatch({ type: SET_ORDER_BOOK, order_book_loading: false });\n  }, []);\n  // console.log(\"tarr: \", barr, sarr);\n\n useEffect(()=>{\n  setOrderVolumeLoading(true)\n  N_getOrderValume(coin[0], coin[1]).then((res)=>{\n    setOrderVolumeLoading(false)\n    if(res.status === 200) {\n      setBuyOrder(res.buy_stak);\n      setSellOrder(res.sell_stak);\n    }\n  });\n }, coin)\n  return (\n    <>\n      <div\n        className={`${webData.bg_color}`}\n        style={{ backgroundColor: webData.bg_color_code }}\n      >\n        <div style={{ height: \"33px\" }}>\n          <div\n            className=\"bb-1 title-order d-flex p-0\"\n            style={{\n              justifyContent: \"space-between\",\n              background: \"rgba(0,0,0,0.1)\",\n            }}\n          >\n            <div className=\"d-flex align-items-center px-3\">ORDER BOOK</div>\n            <nav>\n              <div className=\"nav nav-tabs d-flex\" id=\"nav-tab\" role=\"tablist\">\n                <a\n                  className={`nav-item nav-link  py-1  ${\n                    activeTab === 0 ? \"active\" : \"\"\n                  }`}\n                  id=\"nav-home-tab\"\n                  data-toggle=\"tab\"\n                  role=\"tab\"\n                  aria-controls=\"nav-home\"\n                  aria-selected=\"true\"\n                  onClick={() => setActiveTab(0)}\n                >\n                  Market Depth\n                </a>\n                <a\n                  className={`nav-item nav-link  py-1 ${\n                    activeTab === 1 ? \"active\" : \"\"\n                  }`}\n                  id=\"nav-profile-tab\"\n                  data-toggle=\"tab\"\n                  onClick={() => \n                    setActiveTab(1)\n                  }\n                  role=\"tab\"\n                  aria-controls=\"nav-profile\"\n                  aria-selected=\"false\"\n                >\n                  Order Volume\n                </a>\n              </div>\n            </nav>\n          </div>\n        </div>\n\n        {/* 1st Tab  */}\n        <div\n          className=\"tab-content \"\n          style={{\n            height: \"325px\",\n            overflow: \"hidden\",\n          }}\n        >\n          <div\n            className={`tab-pane fade ${activeTab == 0 ? \"active show\" : \"\"}`}\n          >\n            <div className=\"order-book-container\">\n              {order_book_loading ? (\n                <Loader />\n              ) : buy_order_book?.length != 0 || sell_order_book.length != 0 ? (\n                <>\n                  <table\n                    className=\"order-book-table order-book-table--open order-book-table--left\"\n                    style={{ height: \"fit-content\" }}\n                  >\n                    <colgroup>\n                      <col width=\"10%\" />\n                      <col width=\"40%\" />\n                      <col width=\"50%\" />\n                    </colgroup>\n                    <thead>\n                      <tr>\n                        <th></th>\n                        <th className=\"text-right text-uppercase\">\n                          <h6>Volume</h6>\n                        </th>\n                        <th className=\"text-right text-uppercase\">\n                          <h6>Buy Price</h6>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"buy\" style={{fontFamily:\"monospace\"}}>\n                      {buy_order_book\n                        ? barr?.map((d, index) => (\n                            <tr\n                              key={index}\n                              onClick={() => {\n                                dispatch({\n                                  type: BUY_MARKET_PRICE,\n                                  data: {\n                                    marketprice: d.raw_price,\n                                    marketvolume: d.volume,\n                                    active:1\n                                  },\n                                });\n                              }}\n                            >\n                              <td className=\"status-dot-cell\">\n                                <div></div>\n                              </td>\n                              <td className=\"text-success\">{round(d.volume)}</td>\n                              <td>{round(d.raw_price)}</td>\n                              <div\n                                className=\"filler\"\n                                style={{\n                                  width: getPercentage(d.volume, barr) + \"%\",\n                                }}\n                              ></div>\n                            </tr>\n                          ))\n                        : null}\n                    </tbody>\n                  </table>\n                  <table\n                    className=\"order-book-table order-book-table--open order-book-table--right\"\n                    style={{ height: \"fit-content\" }}\n                  >\n                    <colgroup>\n                      <col width=\"50%\" />\n                      <col width=\"40%\" />\n                      <col width=\"10%\" />\n                    </colgroup>\n                    <thead className=\"p-0 m-0\">\n                      <tr className=\"p-0 m-0\">\n                        <th className=\"text-uppercase\">\n                          <h6>Sell Price</h6>\n                        </th>\n                        <th className=\"text-uppercase\">\n                          <h6>Volume</h6>\n                        </th>\n                        <th></th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"sell \" style={{fontFamily:\"monospace\"}}>\n                      {sarr\n                        ? sarr.map((d, index) => (\n                            <tr\n                              key={index}\n                              onClick={() => {\n                                dispatch({\n                                  type: SELL_MARKET_PRICE,\n                                  data: {\n                                    marketprice: d.raw_price,\n                                    marketvolume: d.volume,\n                                    active:0\n                                  },\n                                });\n                              }}\n                            >\n                              <td className=\"text-danger\" >{round(d.raw_price)}</td>\n                              <td>{round(d.volume)}</td>\n                              <td className=\"status-dot-cell\">\n                                <div></div>\n                              </td>\n                              <div\n                                className=\"filler\"\n                                style={{\n                                  width: getPercentage(d.volume, sarr) + \"%\",\n                                }}\n                              ></div>\n                            </tr>\n                          ))\n                        : null}\n                    </tbody>\n                  </table>\n                </>\n              ) : (\n                <div\n                  className=\"d-flex justify-content-center align-items-center\"\n                  style={{ flex: 1, height: \"328px\" }}\n                >\n                  <p className=\"mdfthemetxt\">No record found</p>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* 2nd Tab */}\n          <div\n            className={`tab-pane fade ${activeTab == 1 ? \"active show\" : \"\"}`}\n          >\n            <div className=\"order-book-container\">\n              {order_volume_loading ? (\n                <Loader />\n              ) : buy_order?.length != 0 || sell_order.length != 0 ? (\n                <>\n                  <table\n                    className=\"order-book-table order-book-table--open order-book-table--left\"\n                    style={{ height: \"fit-content\" }}\n                  >\n                    <colgroup>\n                      <col width=\"10%\" />\n                      <col width=\"40%\" />\n                      <col width=\"50%\" />\n                    </colgroup>\n                    <thead>\n                      <tr>\n                        <th></th>\n                        <th className=\"text-right text-uppercase\">\n                          <h6>Volume</h6>\n                        </th>\n                        <th className=\"text-right text-uppercase\">\n                          <h6>Buy Price</h6>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"buy \" style={{fontFamily:\"monospace\"}}>\n                      {buy_order\n                        ? buy_order?.map((d, index) => (\n                            <tr\n                              key={index}\n                            >\n                              <td className=\"status-dot-cell\">\n                                <div></div>\n                              </td>\n                              <td className=\"text-success\">{round(d.volume)}</td>\n                              <td>{round(d._id)}</td>\n                              <div\n                                className=\"filler\"\n                                style={{\n                                  width: getPercentage(d.volume, buy_order) + \"%\",\n                                }}\n                              ></div>\n                            </tr>\n                          ))\n                        : null}\n                    </tbody>\n                  </table>\n                  <table\n                    className=\"order-book-table order-book-table--open order-book-table--right\"\n                    style={{ height: \"fit-content\" }}\n                  >\n                    <colgroup>\n                      <col width=\"50%\" />\n                      <col width=\"40%\" />\n                      <col width=\"10%\" />\n                    </colgroup>\n                    <thead >\n                      <tr>\n                        <th className=\"text-uppercase\">\n                          <h6>Sell Price</h6>\n                        </th>\n                        <th className=\"text-uppercase\">\n                          <h6>Volume</h6>\n                        </th>\n                        <th></th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"sell \" style={{fontFamily:\"monospace\"}} >\n                      {sell_order\n                        ? sell_order?.map((d, index) => (\n                            <tr \n                              key={index}\n                            >\n                              <td className=\"text-danger\">{round(d._id)}</td>\n                              <td>{round(d.volume)}</td>\n                              <td className=\"status-dot-cell\">\n                                <div></div>\n                              </td>\n                              <div\n                                className=\"filler\"\n                                style={{\n                                  width: getPercentage(d.volume, sell_order) + \"%\",\n                                }}\n                              ></div>\n                            </tr>\n                          ))\n                        : null}\n                    </tbody>\n                  </table>\n                </>\n              ) : (\n                <div\n                  className=\"d-flex justify-content-center align-items-center\"\n                  style={{ flex: 1, height: \"328px\" }}\n                >\n                  <p className=\"mdfthemetxt\">No record found</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/FullLoader.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/StaticUSDPage.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/PreLoader.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/Orders.tab.jsx",["769"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport LoginORSignup from \"./LoginORSignup\";\nimport { NotificationManager } from \"react-notifications\";\nimport \"./order.css\";\nimport Loader from \"./Loader\";\nimport { getUserBalance, getUserOrder } from \"../redux/actions/coinDBAction\";\nimport { N_cancleOrderById } from \"../redux/helpers/api_functions_new\";\nimport { round } from \"../redux/helpers/Math\";\nexport default function OrdersTab(props) {\n  const dispatch = useDispatch();\n  const [activeTab, setActiveTab] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const { isLoggedIn } = useSelector((state) => state.AuthReducer);\n  const { user } = useSelector((state) => state.AuthReducer);\n  const { webData } = useSelector((state) => state.websiteDBReducer);\n  const { user_order_pending, user_order_close } = useSelector(\n    (state) => state.coinDBReducer\n  );\n  const [pendingOrder, setpendingOrder] = useState([]);\n  const [closeOrder, setcloseOrder] = useState([]);\n  // const coin = props.match.params.id.split(\"-\");\n  useEffect(() => {\n    dispatch(getUserOrder(user?.params ? user.params.user_id : user.user_id));\n  }, [user, dispatch]);\n\n  useEffect(() => {\n    setpendingOrder(\n      user_order_pending.sort(\n        (a, b) => Number(b.timestamp) - Number(a.timestamp)\n      )\n    );\n    setcloseOrder(\n      user_order_close.sort((a, b) => Number(b.timestamp) - Number(a.timestamp))\n    );\n  }, [user_order_pending, user_order_close]);\n\n  return (\n    <>\n      <div\n        className={`${webData.bg_color}`}\n        style={{ backgroundColor: webData.bg_color_code }}\n      >\n        <nav style={{ border: \"0.2px solid #ffffff11\" }}>\n          <div className=\"nav nav-tabs d-flex\" id=\"nav-tab\" role=\"tablist\">\n            <div\n              className={`  nav-item nav-link  p-0  ${\n                activeTab === 0 ? \"active\" : \"\"\n              }`}\n              id=\"nav-home-tab\"\n              data-toggle=\"tab\"\n              role=\"tab\"\n              aria-controls=\"nav-home\"\n              aria-selected=\"true\"\n              onClick={() => setActiveTab(0)}\n              style={{ flex: 0.5, height: \"30px\", lineHeight: \"30px\" }}\n            >\n              <div></div>\n              Open Orders\n            </div>\n            <div\n              className={`  nav-item nav-link  p-0   ${\n                activeTab === 1 ? \"active\" : \"\"\n              }`}\n              id=\"nav-profile-tab\"\n              data-toggle=\"tab\"\n              onClick={() => setActiveTab(1)}\n              role=\"tab\"\n              aria-controls=\"nav-profile\"\n              aria-selected=\"false\"\n              style={{ flex: 0.5,  height: \"30px\", lineHeight: \"30px\" }}\n            >\n              Completed Orders\n            </div>\n          </div>\n        </nav>\n\n        {!isLoggedIn ? (\n          <div\n            className=\"  tab-content orders\"\n            style={{ borderColor: \"#19205733\",  }}\n          >\n            <LoginORSignup />\n          </div>\n        ) : null}\n        {activeTab === 0 && isLoggedIn ? (\n          <div\n            className=\"  row m-0 p-0 py-1\"\n            style={{ borderTop: \"0.1px solid rgba(0,0,0,0.1)\" }}\n          >\n            {/* <div\n              className=\"offset-8 col-4 text-center text-danger cursor\"\n              style={{ fontSize: \"12px\" }}\n              onClick={() =>\n                cancleOrder(token, props.type)\n                  .then((d) => {\n                    if (d.status === 1) {\n                      NotificationManager.success(d.msg);\n                      dispatch(getUserOrder(token, props.type));\n                      dispatch(getUserBalance(token));\n                      dispatch(\n                        getOrderBook(coin[0], coin[1], () => {}, props.type)\n                      );\n                      dispatch(\n                        getTradeHist(coin[0], coin[1], () => {}, props.type)\n                      );\n                    } else {\n                      NotificationManager.error(d.msg);\n                    }\n                  })\n                  .catch((e) => {\n                    console.log(e);\n                  })\n              }\n            >\n              Cancel All\n            </div> */}\n          </div>\n        ) : null}\n        {isLoggedIn ? (\n          <>\n            <div className=\"row m-0 p-0 py-1 theme-color pair-border\">\n              <div className=\"col-3 text-center\" style={{ fontSize: \"10px\" }}>\n                PAIR\n              </div>\n              <div className=\"col-3 text-center\" style={{ fontSize: \"10px\" }}>\n                AMOUNT\n              </div>\n              <div className=\"col-3 text-center\" style={{ fontSize: \"10px\" }}>\n                PRICE\n              </div>\n              <div className=\"col-3 text-center\" style={{ fontSize: \"10px\" }}>\n                TOTAL\n              </div>\n            </div>\n            <div\n              className=\"tab-content orders theme-color\"\n              style={{\n                height: \"335px\",\n                overflowY: \"auto\",\n              }}\n            >\n              <div\n                className={`tab-pane fade ${\n                  activeTab === 0 ? \"show active\" : \"\"\n                }`}\n                id=\"open-order\"\n              >\n                {pendingOrder && pendingOrder?.length > 0\n                  ? pendingOrder.map((d, index) => {\n                      return (\n                        <OrderRow\n                          {...d}\n                          key={index}\n                          // deleteOrder={(order_id, order_type) =>\n                          //   deleteOrder(order_id, order_type)\n                          // }\n                          user_id={\n                            user?.params ? user.params.user_id : user.user_id\n                          }\n                        />\n                      );\n                    })\n                  : null}\n                {pendingOrder?.length === 0 ? (\n                  <div\n                    className=\" d-flex justify-content-center align-items-center\"\n                    style={{ flex: 1, height: \"328px\" }}\n                  >\n                    <p className=\"mdfthemetxt\">No Open Orders..</p>\n                  </div>\n                ) : null}\n                {loading ? <Loader /> : null}\n              </div>\n\n              <div\n                id=\"order-history\"\n                className={`tab-pane fade ${\n                  activeTab === 1 ? \"show active\" : \"\"\n                }`}\n              >\n                {closeOrder && closeOrder?.length > 0\n                  ? closeOrder.map((d, index) => {\n                      return <OrderRow {...d} key={index} order_type={1} />;\n                    })\n                  : null}\n                {closeOrder?.length === 0 ? (\n                  <div\n                    className=\"mdfthemetxt d-flex justify-content-center align-items-center\"\n                    style={{ flex: 1, height: \"338px\" }}\n                  >\n                    <p className=\"mdfthemetxt\">No Completed Orders..</p>\n                  </div>\n                ) : null}\n                {loading ? <Loader /> : null}\n              </div>\n            </div>\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nfunction OrderRow(props) {\n  const [popup, setpopup] = useState(false);\n  const [spin, setspin] = useState(\"\");\n  const dispatch = useDispatch();\n  let progress_width = 0;\n  let back = \"rgb(16 129 53 / 10%)\";\n  const [dis, setdis] = useState(false);\n  if (props[\"total_buy\"] === undefined) {\n    progress_width = (props.total_executed * 100) / props.volume;\n    back = props.type === \"buy\" ? \"rgba(35, 172, 80, 0.4)\" : \"#81101026\";\n  } else {\n    progress_width = (props.total_executed * 100) / props.volume;\n    back = \"rgb(16 129 53 / 10%)\";\n  }\n\n  const deleteOrder = (order_id, user_id) => {\n    setspin(\"spinner-border spinner-border-sm\");\n    N_cancleOrderById(user_id, order_id)\n      .then((res) => {\n        if (res.status === 200) {\n          dispatch(getUserOrder(user_id, props.type));\n          dispatch(getUserBalance(user_id));\n          setTimeout(() => {\n            setspin(\"\");\n            setpopup(false);\n            setdis(false);\n          }, 1000);\n          // setLoading(false);\n          NotificationManager.success(res.message);\n        } else {\n          NotificationManager.error(res.message);\n        }\n      })\n      .catch((e) => {\n        console.log(\"error: \", e);\n      });\n  };\n\n  // function getDateTime(props) {\n  //   let ddate = props.order_date;\n  //   if (ddate === 0) {\n  //     ddate = props.execution_date;\n  //   }\n  //   return ddate;\n  // }\n\n  return (\n    <>\n      {popup ? (\n        <>\n          <div\n            style={{\n              position: \"absolute\",\n              height: \"43%\",\n              width: \"99%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              zIndex: 200,\n              backgroundColor: \"rgba(0,0,0,0.3)\",\n              top:\"45px\",\n              left:\"2px\",\n            }}\n          >\n            <div\n              style={{\n                position: \"absolute\",\n                top: \"20%\",\n                zIndex: 1000,\n                boxShadow: \"2px 2px 20px rgba(0,0,0,0.4)\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignSelf: \"center\",\n              }}\n            >\n              <div className=\"shead-bg\"></div>\n              <div\n                className=\"container shead-bg\"\n                style={{ width: \"256px\", padding: \"0px 14px\" }}\n              >\n                <div className=\"row\">\n                  <div className=\"col-12 col-md-12 col-sm-12\">\n                    <div\n                      className=\"text-secondary\"\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"space-around\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <p className=\"py-2\">Delete Order</p>\n                      <div\n                        style={{\n                          display: \"flex\",\n                          flexDirection: \"row\",\n                          justifyContent: \"space-evenly\",\n                        }}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-success my-3\"\n                          onClick={() => {\n                            if (!dis) {\n                              setdis(true);\n                              deleteOrder(\n                                props.order_id,\n                                props.user_id,\n                                props[\"total_buy\"] === undefined\n                                  ? \"sell\"\n                                  : \"buy\"\n                              );\n                            }\n                          }}\n                        >\n                          {dis ? (\n                            <span\n                              className={`${spin} mx-2`}\n                              role=\"status\"\n                              aria-hidden=\"true\"\n                            ></span>\n                          ) : null}\n                          Okay\n                        </button>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-danger my-3 mx-2\"\n                          onClick={() => {\n                            if (!dis) {\n                              setpopup(false);\n                            }\n                          }}\n                        >\n                          Cancel\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      ) : null}\n      <div className=\"order_cont\">\n        <div\n          className=\"row m-0 p-0 py-1 align-items-center order\"\n          style={{\n            borderLeft: `5px solid ${props.type === \"buy\" ? \"green\" : \"red\"}`,\n            height: \"40px\",\n            overflow: \"hidden\",\n          }}\n        >\n          <div\n            style={{\n              width: progress_width + \"%\",\n              height: \"100%\",\n              background: back,\n              position: \"absolute\",\n              left: \"0px\",\n              top: \"0px\",\n              zIndex: \"-1\",\n            }}\n          ></div>\n          <div className=\"col-3 text-center\" style={{ fontSize: \"10px\" }}>\n            <div className=\"font-weight-bold\">\n              {props?.currency_type?.toUpperCase()}\n            </div>\n            <div>{props?.compare_currency?.toUpperCase()}</div>\n          </div>\n          <div className=\"col-3 text-center\" style={{ fontSize: \"10px\" }}>\n            <div className=\"font-weight-bold\">\n              {props.type === \"buy\"\n                ? props.total_executed\n                : props.total_executed}\n            </div>\n            <div>{round(props?.volume)}</div>\n          </div>\n          <div className=\"col-3 text-center\" style={{ fontSize: \"10px\" }}>\n            {round(props?.raw_price)}\n          </div>\n          <div className=\"col-3 text-center\" style={{ fontSize: \"10px\" }}>\n            {round(props?.volume * props?.raw_price)}\n          </div>\n\n          <div className=\"orderrow-hover\">\n            {/* Date(getDateTime(props?.timestamp)).toLocaleDateString() */}\n            {/* new Date(props?.timestamp).toLocaleDateString() */}\n            {props?.order_type !== 1 ? (\n              <span className=\"\">\n               {/*  {new Date(Number(props.order_date)).toLocaleString()} */}\n               {new Date(Number(props.timestamp)).toLocaleString()}\n              </span>\n            ) : (\n              <span className=\"\">\n                {/* {new Date(Number(props.order_date)).toLocaleString()} */}\n                {new Date(Number(props.timestamp)).toLocaleString()}\n              </span>\n            )}\n            {props?.order_type !== 1 ? (\n              <div\n                title=\"Cancel order\"\n                className=\"\"\n                onClick={() => {\n                  setpopup(true);\n                }}\n              >\n                <i className=\"fa fa-times-circle text-danger\"></i>\n              </div>\n            ) : (\n              <span>Executed</span>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/Trade.Tab.jsx",["770","771","772","773"],"import React from \"react\";\nimport Loader from \"./components/Loader\";\nimport { useSelector, useDispatch } from \"react-redux\";\nexport default function TradeTab(props) {\n  const { webData } = useSelector((state) => state.websiteDBReducer);\n  const { trade_history, trade_loading } = useSelector(\n    (state) => state.coinDBReducer\n  );\n  const coin = props?.match?.params?.id?.split(\"-\");\n  const coinname = coin[0] + coin[1];\n  // let l = trade_history ? [coinname]?.length - 1 : 0;\n  let harr = [];\n  function reverseArr(input) {\n    let ret = new Array();\n    for (var i = input.length - 1; i >= 0; i--) {\n      ret.push(input[i]);\n    }\n    const ret1 = ret.sort((a, b) => b.timestamp - a.timestamp);\n    return ret1;\n  }\n  if (\n    trade_history &&\n    trade_history[coinname] &&\n    trade_history[coinname].length > 0\n  )\n    harr = reverseArr(trade_history[coinname]);\n\n  return (\n    <div\n      className={`${webData.bg_color}` + \" mt-2 mt-md-0 mt-lg-0\"}\n      style={{ backgroundColor: webData.bg_color_code, overflow: \"hidden\" }}\n    >\n      <div style={{ height: \"58px\" }}>\n        <div\n          className=\"tab-header  d-flex align-items-center h-50 p-0 px-2\"\n          style={{ background: \"rgba(0,0,0,0.1)\" }}\n        >\n          TRADE HISTORY\n        </div>\n        <div className=\"row m-0 py-1 pair-border mt-1\">\n          <div className=\"col-4 text-center\" style={{ fontSize: \"10px\" }}>\n            PRICE\n          </div>\n          <div className=\"col-4 text-center\" style={{ fontSize: \"10px\" }}>\n            VOLUME\n          </div>\n          <div className=\"col-4 text-center\" style={{ fontSize: \"10px\" }}>\n            TIME\n          </div>\n        </div>\n      </div>\n      <div style={{ height: \"300px\", overflow: \"hidden\" }}>\n        {trade_loading ? (\n          <Loader />\n        ) : harr?.length != 0 ? (\n          harr ? (\n            harr?.map((d, index, arr) => (\n              <TradeRow\n                isSell={\n                  index === 9\n                    ? false\n                    : parseFloat(d.raw_price) >=\n                      parseFloat(harr ? arr[index + 1]?.raw_price : 0)\n                    ? false\n                    : true\n                }\n                price={Number(d.raw_price)}\n                volume={Number(d.volume)}\n                timestamp={d.timestamp}\n                key={index}\n              />\n            ))\n          ) : (\n            <div\n              className=\"mdfthemetxt d-flex justify-content-center align-items-center \"\n              style={{ height: \"300px\" }}\n            >\n              <p className=\"mdfthemetxt\">No Trade History Found !</p>\n            </div>\n          )\n        ) : (\n          <div\n            className=\"mdfthemetxt d-flex justify-content-center align-items-center \"\n            style={{ height: \"300px\" }}\n          >\n            <p className=\"mdfthemetxt\">No Trade History Found !</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction TradeRow(props) {\n  return (\n    <div\n      className=\"row  m-0\"\n      style={\n        props.isSell\n          ? {\n              background: \"rgba(241, 67, 47, 0.1)\",\n              color: \"#f00000\",\n              padding: \"7.79px 0px\",\n              fontSize: \"14px\",\n            }\n          : {\n              background: \"rgba(35, 172, 80, 0.1)\",\n              color: \"#2bcd76\",\n              padding: \"7.79px 0px\",\n              fontSize: \"14px\",\n            }\n      }\n    >\n      <div className=\"col-4 text-center\" style={{ fontSize: \"10px\" }}>\n        <i\n          className={`fas ${props.isSell ? \"fa-arrow-down\" : \"fa-arrow-up\"}`}\n        ></i>\n        {props.price}\n      </div>\n      <div className=\"col-3 text-center text-dark\" style={{ fontSize: \"10px\" }}>\n        {props.volume.toString().length > 6\n          ? props.volume.toString().substr(0, 8)\n          : props.volume}\n      </div>\n      <div\n        className=\"col-5 text-center text-secondary\"\n        style={{ fontSize: \"10px\" }}\n      >\n        {new Date(Number(props.timestamp)).toLocaleString()}\n        {/* {new Date(props.timestamp).getHours() +\n          \":\" +\n          new Date(props.timestamp).getMinutes() +\n          \":\" +\n          new Date(props.timestamp).getSeconds()} */}\n        {/* {moment(props.time).format(\"LTS\")} */}\n        {/* {props.time.raw_price} */}\n      </div>\n    </div>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/ProfileSidebar.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/p2pBuyNSell.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/CandleStick.jsx",["774"],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/BuyNSell.jsx",["775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816"],"import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { NotificationManager } from \"react-notifications\";\nimport { GiWallet } from \"react-icons/gi\";\n// import {\n//   createBuyOffer,\n//   createSellOffer,\n// } from \"../redux/helpers/api_functions\";\nimport {\n  getOrderBook,\n  getTradeHist,\n  getUserBalance,\n  getUserOrder,\n} from \"../redux/actions/coinDBAction\";\nimport {\n  N_createBuyOffer,\n  N_createSellOffer,\n  N_executeOrder,\n  N_get_wallet,\n} from \"../redux/helpers/api_functions_new\";\nimport createSocketClient from \"../redux/helpers/socket\";\nimport {\n  BUY_MARKET_PRICE,\n  SELL_MARKET_PRICE,\n  SET_BUY_ORDER_BOOK,\n  SET_ORDER_BOOK,\n  SET_SELL_ORDER_BOOK,\n  SET_TRADE_HISTORY,\n} from \"../redux/constant\";\nimport { applyMiddleware } from \"redux\";\nimport { borderBottom, padding } from \"@mui/system\";\nimport { mul, round } from \"../redux/helpers/Math\";\n// import socket from \"../redux/helpers/events\";\n\nexport default function BuyNSell(props) {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = React.useState(false);\n  const [activeTab, setActiveTab] = React.useState(props.activeTab || 0);\n  const [atPrice, setATPrice] = React.useState(0);\n  const [cprice, setCprice] = React.useState(0);\n  const [wallet_balance, setWalletBalance] = React.useState(0);\n  const [currency_balance, setCurrencyBalance] = React.useState(0);\n  const [amount, setAmount] = React.useState(0);\n  const [total, setTotal] = React.useState(0);\n  const [stopLimit, setStoplimit] = React.useState(0);\n  const [total_inr, setTotalInr] = React.useState(0);\n  const [wallet_details, setWalletDetails] = React.useState([]);\n  const [buybalance, setbuybalance] = React.useState(0);\n  const [sellbalance, setsellbalance] = React.useState(0);\n  const coin = props?.match?.params?.id\n    ? props.match.params.id.split(\"-\")\n    : \"btc-inr\".split(\"-\");\n  const { isLoggedIn, user } = useSelector((state) => state.AuthReducer);\n  const { token } = useSelector((state) => state.AuthReducer.user);\n  const { coins, wallet, paired_curency_price } = useSelector(\n    (state) => state.coinDBReducer\n  );\n  let current_coin = coins[(coin[0] + coin[1]).toUpperCase()];\n  const { webData } = useSelector((state) => state.websiteDBReducer);\n  const { buymarket, sellmarket } = useSelector((state) => state.coinDBReducer);\n  const [price, setprice] = React.useState(0);\n  let time = 0;\n\n  function setCurrentBuySellTokenBalance() {\n    wallet_details.map((item, i) => {\n      if (item.symbol === coin[1].toUpperCase()) {\n        setbuybalance(item.avl_balance);\n      } else if (item.symbol === coin[0].toUpperCase()) {\n        setsellbalance(item.avl_balance);\n      }\n    });\n  }\n\n  function getCurrentBuySellTokenBalance() {\n    N_get_wallet(user?.params ? user.params.user_id : user.user_id)\n      .then((d) => {\n        if (d.status === 200) {\n          let total = 0;\n          let final_data =\n            d.params.wallets &&\n            d.params.wallets.map((res, i) => {\n              let rate = getCoinRate(res.symbol, coin[1]);\n              let inr_val = Math.round(rate * res?.balance * 1000) / 1000;\n              // console.log(\n              //   \"coin rates: \",\n              //   inr_val,\n              //   rate,\n              //   res?.balance\n              // );\n              total = total + parseFloat(inr_val);\n              return {\n                id: res?.id,\n                icon: res?.icon,\n                symbol: res?.symbol,\n                name: res?.name,\n                withdral_fee: res?.withdrawal_fee,\n                locked:\n                  Math.round(res?.locked * 10000) / 10000 != 0\n                    ? Math.round(\n                        Math.abs(res?.locked ? res?.locked : 0) * 10000\n                      ) / 10000\n                    : Math.round(res?.locked * 100000000) / 100000000,\n                address: res?.wallet_address,\n                balance:\n                  Math.round(res?.balance * 10000) / 10000 != 0\n                    ? Math.round(res?.balance * 10000) / 10000\n                    : Math.round(res?.balance * 100000000) / 100000000,\n                avl_balance:\n                  Math.round(res?.available * 10000) / 10000 != 0\n                    ? Math.round((res?.balance - res?.locked) * 10000) / 10000\n                    : Math.round((res?.balance - res?.locked) * 100000000) /\n                      100000000,\n                inr_balance: inr_val,\n              };\n            });\n          setWalletDetails(final_data);\n          setTotalInr(total);\n          // console.log(\"fdata: \", final_data);\n          setTimeout(() => setLoading(false), 800);\n        } else {\n          console.log(d);\n        }\n      })\n      .catch((e) => {\n        console.log(\"er\", e);\n      });\n  }\n\n  useEffect(() => {\n    setCurrentBuySellTokenBalance();\n  }, [coin, wallet_details]);\n\n  useEffect(() => {\n    Object.values(coins)?.map((d, i) => {\n      if (d.symbol === coin[0].toUpperCase()) {\n        setprice(\n          Number(d.current_price_inr) /\n            Number(\n              paired_curency_price\n                ? paired_curency_price[coin[1].toUpperCase()]\n                  ? paired_curency_price[coin[1].toUpperCase()]\n                  : 1\n                : 1\n            )\n        );\n      }\n    });\n  });\n\n  useEffect(() => {\n    const socket = new createSocketClient(\"kujgwvfq-a-ghosttown-z-1fhhup0p6\");\n    socket.on(\"buy_order_updated\", (res) => {\n      // console.log(\"buy_order_updated: \", res);\n      dispatch({\n        type: SET_BUY_ORDER_BOOK,\n        data: res,\n        order_book_loading: false,\n      });\n    });\n    // socket.on(\"welcome\", (msg) => {\n    //   console.log(\"Welcome message\", msg);\n    // });\n    socket.on(\"sell_order_updated\", (res) => {\n      // console.log(\"sell_order_updated: \", res);\n      dispatch({\n        type: SET_SELL_ORDER_BOOK,\n        data: res,\n        order_book_loading: false,\n      });\n    });\n    socket.on(\"order_history_updated\", (res) => {\n      // console.log(\"order_history_updated\", res);\n      dispatch({ type: SET_TRADE_HISTORY, data: res, trade_loading: false });\n    });\n    // socket.on(\"connect\", () => {\n    //   console.log(\"connected!\");\n    // });\n    // socket.on(\"error\", (eror) => {\n    //   console.log(\"eror\", eror);\n    // });\n  }, []);\n\n  useEffect(() => {\n    let coin_wallet = Object.values(wallet)?.find((d) => {\n      if (d.symbol == coin[0].toUpperCase()) return d;\n    });\n    let currency_wallet = Object.values(wallet)?.find((d) => {\n      if (d.symbol == coin[1].toUpperCase()) return d;\n    });\n    // console.log(\"wallet\", coin_wallet, currency_wallet);\n    if (price && time == 0) {\n      setATPrice(price.toFixed(8));\n      setCprice(price.toFixed(8));\n      time = 1;\n    }\n    setWalletBalance(coin_wallet?.available);\n    setCurrencyBalance(currency_wallet?.available);\n  }, [price, wallet]);\n\n  function getCoinRate(coin, currency) {\n    let coins1 = Object.values(coins);\n    // console.log(\"coins: \",coins1);\n    let res = coins1.find((d) => d.symbol === coin);\n    return res?.current_price_inr ? res.current_price_inr : 0;\n  }\n\n  useEffect(() => {\n    getCurrentBuySellTokenBalance();\n    dispatch(getUserOrder(user?.params ? user.params.user_id : user.user_id));\n  }, []);\n\n  // useEffect(() => {\n  //   // setTimeout(() => {\n  //   //   setInterval(() => {\n  //       getCurrentBuySellTokenBalance();\n\n  //   //   }, 10000);\n  //   // }, 10000);\n  // }, []);\n\n  useEffect(() => {\n    // dispatch({\n    //   type: SELL_MARKET_PRICE,\n    //   data: {\n    //     marketprice: 0,\n    //     marketvolume: 0,\n    //     active: 0,\n    //   },\n    // });\n    const mprice = round(buymarket.marketprice);\n    const mvolume = round(buymarket.marketvolume);\n    const totalinr = mul(mvolume, mprice);\n    setActiveTab(buymarket.active);\n    setATPrice(mprice);\n    setAmount(mvolume);\n    setTotal(totalinr);\n  }, [buymarket]);\n\n  useEffect(() => {\n    // dispatch({\n    //   type: BUY_MARKET_PRICE,\n    //   data: {\n    //     marketprice: 0,\n    //     marketvolume: 0,\n    //     active: 0,\n    //   },\n    // });\n    const mprice = round(sellmarket.marketprice);\n    const mvolume = round(sellmarket.marketvolume);\n    const totalinr = mul(mvolume, mprice);\n    setATPrice(mprice);\n    setAmount(mvolume);\n    setTotal(totalinr);\n    setActiveTab(sellmarket.active);\n  }, [sellmarket]);\n\n  function buyCoin(atPrice, amount, c, cp) {\n    setLoading(true);\n    N_createBuyOffer(\n      atPrice,\n      amount,\n      c,\n      cp,\n      user?.params ? user.params.user_id : user.user_id,\n      cprice\n    )\n      .then((d) => {\n        if (d.status == 200) {\n          // console.log(\"res buy: \", d);\n          NotificationManager.success(d.message);\n          getCurrentBuySellTokenBalance();\n          dispatch(\n            getUserOrder(user?.params ? user.params.user_id : user.user_id)\n          );\n          N_executeOrder(\n            d.result.order_id,\n            user?.params ? user.params.user_id : user.user_id,\n            d.result.type\n          ).then((d) => {\n            if (d.status == 200) {\n              getCurrentBuySellTokenBalance();\n              dispatch(\n                getUserOrder(user?.params ? user.params.user_id : user.user_id)\n              );\n            }\n          });\n        } else if (d.status == 400) {\n          // console.log(\"res buy: \", d);\n          getCurrentBuySellTokenBalance();\n          dispatch(\n            getUserOrder(user?.params ? user.params.user_id : user.user_id)\n          );\n          NotificationManager.success(d.message);\n        }\n\n        // dispatch(getUserOrder(token));\n        // dispatch(getUserBalance(token));\n        // dispatch(getOrderBook(coin[0], coin[1], () => {}));\n        // dispatch(getTradeHist(coin[0], coin[1], () => {}));\n        setLoading(false);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    // createBuyOffer(atPrice, amount, c, cp, token)\n    //   .then((d) => {\n    //     if (d.status == 0) {\n    //       NotificationManager.error(d.msg);\n    //     } else if (d.status == 1) {\n    //       NotificationManager.info(d.msg);\n    //     }\n    //     dispatch(getUserOrder(token));\n    //     dispatch(getUserBalance(token));\n    //     dispatch(getOrderBook(coin[0], coin[1], () => {}));\n    //     dispatch(getTradeHist(coin[0], coin[1], () => {}));\n    //     setLoading(false);\n    //   })\n    //   .catch((e) => {\n    //     console.log(e);\n    //   });\n  }\n\n  function sellCoin(atPrice, amount, c, cp) {\n    setLoading(true);\n    // console.log(\"buy user: \", user);\n    N_createSellOffer(\n      atPrice,\n      amount,\n      c,\n      cp,\n      user?.params ? user.params.user_id : user.user_id,\n      cprice\n    )\n      .then((d) => {\n        if (d.status == 200) {\n          // console.log(\"res sell: \", d);\n          NotificationManager.success(d.message);\n          getCurrentBuySellTokenBalance();\n          dispatch(\n            getUserOrder(user?.params ? user.params.user_id : user.user_id)\n          );\n          N_executeOrder(\n            d.result.order_id,\n            user?.params ? user.params.user_id : user.user_id,\n            d.result.type\n          ).then((d) => {\n            if (d.status == 200) {\n              getCurrentBuySellTokenBalance();\n              dispatch(\n                getUserOrder(user?.params ? user.params.user_id : user.user_id)\n              );\n            }\n          });\n        } else if (d.status == 400) {\n          // console.log(\"res sell: \", d);\n          getCurrentBuySellTokenBalance();\n          dispatch(\n            getUserOrder(user?.params ? user.params.user_id : user.user_id)\n          );\n          NotificationManager.success(d.message);\n        }\n        // dispatch(getUserOrder(token));\n        // dispatch(getUserBalance(token));\n        // dispatch(getOrderBook(coin[0], coin[1], () => {}));\n        // dispatch(getTradeHist(coin[0], coin[1], () => {}));\n        setLoading(false);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  let wallet_coin;\n\n  switch (coin[1]) {\n    case \"inr\":\n      wallet_coin = new Intl.NumberFormat(\"en-IN\", {\n        style: \"currency\",\n        currency: \"INR\",\n        maximumFractionDigits: 8,\n        maximumSignificantDigits: 8,\n      }).format(currency_balance ? currency_balance : 0);\n      break;\n    case \"usdt\":\n      wallet_coin = new Intl.NumberFormat(\"en-IN\", {\n        style: \"currency\",\n        currency: \"USD\",\n        maximumFractionDigits: 8,\n        maximumSignificantDigits: 8,\n      }).format(currency_balance ? currency_balance : 0);\n      break;\n    case \"btc\":\n      wallet_coin = new Intl.NumberFormat(\"en-IN\", {\n        style: \"currency\",\n        currency: \"BTC\",\n        maximumFractionDigits: 8,\n        maximumSignificantDigits: 8,\n      }).format(currency_balance ? currency_balance : 0);\n      break;\n    default:\n      wallet_coin = new Intl.NumberFormat(\"en-IN\", {\n        style: \"currency\",\n        currency: \"INR\",\n        maximumFractionDigits: 8,\n        maximumSignificantDigits: 8,\n      }).format(currency_balance ? currency_balance : 0);\n  }\n\n  return (\n    <>\n      <nav\n        className={`${webData.bg_color}`}\n        style={{ border: \"0.3px solid #ffffff33\" }}\n      >\n        <div className=\"nav nav-tabs d-flex\" id=\"nav-tab\" role=\"tablist\">\n          <a\n            className={`nav-item nav-link p-0  ${\n              activeTab == 0 ? \"active\" : \"\"\n            }`}\n            id=\"nav-home-tab\"\n            data-toggle=\"tab\"\n            role=\"tab\"\n            onClick={() => setActiveTab(0)}\n            aria-controls=\"nav-home\"\n            aria-selected=\"true\"\n            style={{ flex: 0.5, height: \"30px\", lineHeight: \"30px\" }}\n          >\n            Buy\n          </a>\n          <a\n            className={`nav-item nav-link buy p-0 ${\n              activeTab == 1 ? \"active\" : \"\"\n            }`}\n            id=\"nav-profile-tab\"\n            data-toggle=\"tab\"\n            onClick={() => setActiveTab(1)}\n            role=\"tab\"\n            aria-controls=\"nav-profile\"\n            aria-selected=\"false\"\n            style={{ flex: 0.5, height: \"30px\", lineHeight: \"30px\" }}\n          >\n            Sell\n          </a>\n        </div>\n      </nav>\n      <div\n        className={`${webData.bg_color}` + \" tab-content \"}\n        style={{ minHeight: \"300px\", backgroundColor: webData.bg_color_code }}\n      >\n        {/* buy tab         */}\n\n        <div\n          className={`tab-pane fade ${activeTab == 0 ? \"show active\" : \"\"}`}\n          id=\"open-order\"\n        >\n          <div className=\"offset-7 col-5 py-5\">\n            <select\n              className=\"custom-select bg-light text-secondary border buy-sell-form-bg buy-sell-theme d-none\"\n              value={stopLimit}\n              onChange={(e) =>\n                setStoplimit(\n                  e.target.value\n                    .replace(/[^0-9.]/g, \"\")\n                    .replace(/(\\..*?)\\..*/g, \"$1\")\n                )\n              }\n              style={{\n                borderColor: \"#cacacc\",\n              }}\n            >\n              <option value={0}>Limit</option>\n              <option value={1}>Stop Limit</option>\n            </select>\n          </div>\n          <div className=\"p-3\">\n            {stopLimit === 1 ? (\n              <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                  <span\n                    className=\"input-group-text buy-sell-form-bg buy-sell-theme\"\n                    style={{\n                      fontSize: \"10px\",\n                      // backgroundColor: \"#162538a6\",\n                      // color: \"#fff\",\n                      borderColor: \"#cacacc\",\n                    }}\n                  >\n                    STOP PRICE\n                    <br />\n                    INR\n                  </span>\n                </div>\n                <input\n                  type=\"text\"\n                  className=\"form-control buy-sell-form-bg buy-sell-theme\"\n                  value=\"0\"\n                  style={{\n                    // backgroundColor: \"#162538a6\",\n                    // color: \"#fff\",\n                    borderColor: \"#cacacc\",\n                  }}\n                />\n              </div>\n            ) : null}\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span\n                  className=\"input-group-text buy-sell-form-bg buy-sell-theme\"\n                  style={{\n                    fontSize: \"10px\",\n                    backgroundColor: \"white\",\n                    color: \"#a2a2a2\",\n\n                    // border:\"5px solid red\"\n                    // borderColor: \"#cacacc\",\n                  }}\n                >\n                  AT PRICE\n                  <br />\n                  {coin[1].toUpperCase()}\n                </span>\n              </div>\n              <input\n                type=\"text\"\n                className=\"form-control buy-sell-form-bg\"\n                value={atPrice}\n                onChange={(e) => {\n                  setATPrice(\n                    e.target.value\n                      .replace(/[^0-9.]/g, \"\")\n                      .replace(/(\\..*?)\\..*/g, \"$1\")\n                  );\n                  setTotal(\n                    e.target.value\n                      .replace(/[^0-9.]/g, \"\")\n                      .replace(/(\\..*?)\\..*/g, \"$1\") * amount\n                  );\n                }}\n                style={{\n                  // backgroundColor: \"#162538a6\",\n                  // color: \"#fff\",\n                  borderRight: \"none\",\n                }}\n              />\n              <div className=\"\">\n                <button\n                  className=\" bg-white text-success p-3 \"\n                  type=\"button\"\n                  style={{\n                    borderLeft: \"none \",\n                    borderBlock: \"1px solid #ced4da\",\n                    fontSize: \"13px\",\n                    outline: \"none\",\n                  }}\n                >\n                  LOWEST PRICE\n                </button>\n              </div>\n            </div>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span\n                  className=\"input-group-text buy-sell-form-bg buy-sell-theme\"\n                  style={{\n                    fontSize: \"10px\",\n                    // backgroundColor: \"white\",\n                    // color: \"#fff\",\n                    borderColor: \"#cacacc\",\n                  }}\n                >\n                  AMOUNT\n                  <br />\n                  {coin[0].toUpperCase()}\n                </span>\n              </div>\n              <input\n                type=\"text\"\n                className=\"form-control buy-sell-form-bg buy-sell-theme\"\n                value={amount}\n                onChange={(e) => {\n                  setAmount(\n                    e.target.value\n                      .replace(/[^0-9.]/g, \"\")\n                      .replace(/(\\..*?)\\..*/g, \"$1\")\n                  );\n                  setTotal(\n                    e.target.value\n                      .replace(/[^0-9.]/g, \"\")\n                      .replace(/(\\..*?)\\..*/g, \"$1\") * atPrice\n                  );\n                }}\n                style={{\n                  // backgroundColor: \"#162538a6\",\n                  // color: \"#fff\",\n                  borderColor: \"#cacacc\",\n                }}\n              />\n            </div>\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <span\n                  className=\"input-group-text buy-sell-form-bg buy-sell-theme \"\n                  style={{\n                    fontSize: \"10px\",\n                    // backgroundColor: \"white\",\n                    // color: \"#fff\",\n                    paddingLeft: \"20px\",\n                    borderColor: \"#cacacc\",\n                  }}\n                >\n                  TOTAL\n                  <br />\n                  {coin[1].toUpperCase()}\n                </span>\n              </div>\n              <input\n                type=\"text\"\n                className=\"form-control buy-sell-form-bg buy-sell-theme \"\n                value={total}\n                onChange={(e) => {\n                  setAmount(\n                    e.target.value\n                      .replace(/[^0-9.]/g, \"\")\n                      .replace(/(\\..*?)\\..*/g, \"$1\") / atPrice\n                  );\n                  setTotal(\n                    e.target.value\n                      .replace(/[^0-9.]/g, \"\")\n                      .replace(/(\\..*?)\\..*/g, \"$1\")\n                  );\n                }}\n                style={{\n                  // backgroundColor: \"#162538a6\",\n                  // color: \"#fff\",\n                  borderColor: \"#cacacc\",\n                }}\n              />\n            </div>\n            {isLoggedIn ? (\n              <div className=\"row mb-4 px-3 \">\n                <div\n                  className=\"col-6 pl-1\"\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    borderInline: \"1px solid #ced4da\",\n                    borderBottom: \"1px solid #ced4da\",\n                    borderRadius: \"5px\",\n                  }}\n                >\n                  {/* <i className=\"fas fa-wallet px-2\"></i> */}\n                  <span className=\"mx-2\" title=\"wallet\">\n                    <GiWallet size={24} className=\"text-secondary\" />\n                  </span>\n                  {coin[1] !== \"inr\"\n                    ? buybalance.toFixed(8) + \" \" + coin[1].toUpperCase()\n                    : buybalance.toFixed(4) + \" INR\"}\n                </div>\n                <div\n                  className=\"col-6 p-2 d-flex justify-content-between\"\n                  style={{\n                    borderRight: \"1px solid #ced4da\",\n                    borderBottom: \"1px solid #ced4da\",\n                  }}\n                >\n                  <div\n                    className=\"cursor\"\n                    onClick={() => {\n                      setTotal(Number(buybalance ? buybalance * 0.25 : 0));\n                      setAmount(\n                        Number((buybalance ? buybalance * 0.25 : 0) / atPrice)\n                      );\n                    }}\n                  >\n                    25%\n                  </div>\n                  <div\n                    className=\"px-1 cursor\"\n                    onClick={() => {\n                      setTotal(buybalance ? buybalance * 0.5 : 0);\n                      setAmount(buybalance ? (buybalance * 0.5) / atPrice : 0);\n                    }}\n                  >\n                    50%\n                  </div>\n                  <div\n                    className=\"px-1 cursor\"\n                    onClick={() => {\n                      setTotal(buybalance ? buybalance * 0.75 : 0);\n                      setAmount(buybalance ? (buybalance * 0.75) / atPrice : 0);\n                    }}\n                  >\n                    75%\n                  </div>\n                  <div\n                    className=\"cursor\"\n                    onClick={() => {\n                      setTotal(buybalance ? buybalance : 0);\n                      setAmount(buybalance ? buybalance / atPrice : 0);\n                    }}\n                  >\n                    100%\n                  </div>\n                </div>\n              </div>\n            ) : null}\n            <div>\n              <button\n                className=\"btn  text-light btn-block my-2 w-100\"\n                style={{ background: \"#6cb77d\" }}\n                disabled={loading}\n                /* onClick={() => {\n                  if (isLoggedIn) {\n                    buyCoin(atPrice, amount, coin[0], coin[1]);\n                  } else {\n                    NotificationManager.error(\n                      \"First login then perform buy/sell\"\n                    );\n                  }\n                }} */\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#confirmBuy\"\n              >\n                {loading ? (\n                  <i className=\"loading-icon fas fa-spinner fa-spin mr-2\"></i>\n                ) : null}\n                BUY {coin[0].toUpperCase()}\n              </button>\n            </div>\n            <div className=\"px-3 m-0\">\n              Fee: Maker fee: 0.1%| Taker fee: 0.1%\n            </div>\n          </div>\n        </div>\n\n        {/* sell tab */}\n\n        <div\n          id=\"order-history\"\n          className={`tab-pane fade ${activeTab == 1 ? \"show active\" : \"\"}`}\n        >\n          <div className=\"offset-7 col-5 py-5 \">\n            <select\n              className=\"custom-select buy-sell-form-bg buy-sell-theme d-none\"\n              style={{\n                // backgroundColor: \"#162538a6\",\n                // color: \"#fff\",\n                borderColor: \"#cacacc\",\n              }}\n            >\n              <option value=\"0\" selected>\n                Limit\n              </option>\n              <option value=\"1\">Stop Limit</option>\n            </select>\n          </div>\n          <div className=\"p-3\">\n            {stopLimit === 1 ? (\n              <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                  <span\n                    className=\"input-group-text buy-sell-form-bg buy-sell-theme\"\n                    style={{\n                      fontSize: \"10px\",\n                      // backgroundColor: \"#162538a6\",\n                      // color: \"#fff\",\n                      borderColor: \"#cacacc\",\n                    }}\n                  >\n                    STOP PRICE\n                    <br />\n                    INR\n                  </span>\n                </div>\n                <input\n                  type=\"text\"\n                  className=\"form-control buy-sell-form-bg buy-sell-theme\"\n                  value=\"0\"\n                  style={{\n                    // backgroundColor: \"#162538a6\",\n                    // color: \"#fff\",\n                    borderColor: \"#cacacc\",\n                  }}\n                />\n              </div>\n            ) : null}\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span\n                  className=\"\"\n                  style={{\n                    // fontSize: \"10px\",\n                    // // backgroundColor: \"white\",\n                    // // color: \"#fff\",\n                    // // borderColor: \"#cacacc\",\n                    // borderRight:\"none\",\n                    fontSize: \"10px\",\n                    backgroundColor: \"white\",\n                    color: \"#a2a2a2\",\n                    border: \"1px solid #cacacc\",\n                    padding: \"10px\",\n                  }}\n                >\n                  AT PRICE\n                  <br />\n                  {coin[1].toUpperCase()}\n                </span>\n              </div>\n              <input\n                type=\"text\"\n                className=\"form-control \"\n                value={atPrice}\n                onChange={(e) => {\n                  setATPrice(\n                    e.target.value\n                      .replace(/[^0-9.]/g, \"\")\n                      .replace(/(\\..*?)\\..*/g, \"$1\")\n                  );\n                  setTotal(\n                    e.target.value\n                      .replace(/[^0-9.]/g, \"\")\n                      .replace(/(\\..*?)\\..*/g, \"$1\") * amount\n                  );\n                }}\n                style={{\n                  // backgroundColor: \"#162538a6\",\n                  // color: \"#fff\",\n                  // borderColor: \"#cacacc\",\n                  borderRight: \"none\",\n                  // border:\"2px solid red\"\n                  borderBlock: \"1px solid #cacacc \",\n                }}\n              />\n              <div className=\"\">\n                <button\n                  className=\" text-danger bg-white p-3\"\n                  type=\"button\"\n                  style={{\n                    borderColor: \"#cacacc\",\n                    borderLeft: \"none\",\n                    borderBlock: \"1px solid #ced4da\",\n                    fontSize: \"15px\",\n                  }}\n                >\n                  HIGHEST PRICE\n                </button>\n              </div>\n            </div>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span\n                  className=\"input-group-text buy-sell-form-bg buy-sell-theme\"\n                  style={{\n                    fontSize: \"10px\",\n                    backgroundColor: \"white\",\n                    // color: \"#fff\",\n                    borderColor: \"#cacacc\",\n                  }}\n                >\n                  AMOUNT\n                  <br />\n                  {coin[0].toUpperCase()}\n                </span>\n              </div>\n              <input\n                type=\"text\"\n                className=\"form-control buy-sell-form-bg buy-sell-theme\"\n                value={amount}\n                onChange={(e) => {\n                  setAmount(\n                    e.target.value\n                      .replace(/[^0-9.]/g, \"\")\n                      .replace(/(\\..*?)\\..*/g, \"$1\")\n                  );\n                  setTotal(\n                    e.target.value\n                      .replace(/[^0-9.]/g, \"\")\n                      .replace(/(\\..*?)\\..*/g, \"$1\") * atPrice\n                  );\n                }}\n                style={{\n                  // backgroundColor: \"#162538a6\",\n                  // color: \"#fff\",\n                  borderColor: \"#cacacc\",\n                  borderRight: \"none\",\n                }}\n              />\n            </div>\n\n            <div className=\"input-group \">\n              <div className=\"input-group-prepend\">\n                <span\n                  className=\"input-group-text buy-sell-form-bg buy-sell-theme\"\n                  style={{\n                    fontSize: \"10px\",\n                    // backgroundColor: \"white\",\n                    // color: \"#fff\",\n                    borderColor: \"#cacacc\",\n                    paddingInline: \"15px\",\n                  }}\n                >\n                  TOTAL\n                  <br />\n                  {coin[1].toUpperCase()}\n                </span>\n              </div>\n              <input\n                type=\"text\"\n                className=\"form-control buy-sell-form-bg buy-sell-theme\"\n                value={total}\n                onChange={(e) => {\n                  setAmount(\n                    e.target.value\n                      .replace(/[^0-9.]/g, \"\")\n                      .replace(/(\\..*?)\\..*/g, \"$1\") / atPrice\n                  );\n                  setTotal(\n                    e.target.value\n                      .replace(/[^0-9.]/g, \"\")\n                      .replace(/(\\..*?)\\..*/g, \"$1\")\n                  );\n                }}\n                style={{\n                  // backgroundColor: \"#162538a6\",\n                  // color: \"#fff\",\n                  borderColor: \"#cacacc\",\n                }}\n              />\n            </div>\n            {isLoggedIn ? (\n              <div className=\"row px-3     mb-4\">\n                <div\n                  className=\"col-6 pl-1\"\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    borderInline: \"1px solid #ced4da\",\n                    borderBottom: \"1px solid #ced4da\",\n                    borderRadius: \"5px\",\n                  }}\n                >\n                  <span className=\"mx-2\" title=\"wallet\">\n                    <GiWallet size={24} className=\"text-secondary\" />\n                  </span>\n                  {sellbalance\n                    ? coin[1] !== \"inr\"\n                      ? sellbalance.toFixed(8)\n                      : sellbalance.toFixed(4)\n                    : 0}{\" \"}\n                  {coin[0].toUpperCase()}\n                </div>\n                <div\n                  className=\"col-6 d-flex justify-content-between\"\n                  style={{\n                    borderRight: \"1px solid #ced4da\",\n                    borderBottom: \"1px solid #ced4da\",\n                  }}\n                >\n                  <span\n                    className=\"cursor\"\n                    onClick={() => {\n                      setAmount(sellbalance ? sellbalance * 0.25 : 0);\n                      setTotal(sellbalance ? atPrice * sellbalance * 0.25 : 0);\n                    }}\n                  >\n                    25%\n                  </span>\n                  <span\n                    className=\"px-1 cursor\"\n                    onClick={() => {\n                      setAmount(sellbalance ? sellbalance * 0.5 : 0);\n                      setTotal(sellbalance ? atPrice * sellbalance * 0.5 : 0);\n                    }}\n                  >\n                    50%\n                  </span>\n                  <span\n                    className=\"pl-1 cursor\"\n                    onClick={() => {\n                      setAmount(sellbalance ? sellbalance * 0.75 : 0);\n                      setTotal(sellbalance ? atPrice * sellbalance * 0.75 : 0);\n                    }}\n                  >\n                    75%\n                  </span>\n                  <span\n                    className=\"pl-1 cursor\"\n                    onClick={() => {\n                      setAmount(sellbalance ? sellbalance : 0);\n                      setTotal(sellbalance ? atPrice * sellbalance : 0);\n                    }}\n                  >\n                    100%\n                  </span>\n                </div>\n              </div>\n            ) : null}\n            <div>\n              <button\n                className=\"btn btn-block text-light my-2 d-block w-100\"\n                style={{ background: \"#fb6e7b\" }}\n                disabled={loading}\n                /* onClick={() => {\n                  if (isLoggedIn) {\n                    sellCoin(atPrice, amount, coin[0], coin[1]);\n                  } else {\n                    NotificationManager.error(\n                      \"First login then perform buy/sell\"\n                    );\n                  }\n                }} */\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#TDSIntro\"\n              >\n                {loading ? (\n                  <i className=\"loading-icon fas fa-spinner fa-spin mr-2\"></i>\n                ) : null}\n                SELL {coin[0].toUpperCase()}\n              </button>\n            </div>\n\n            <div className=\"px-3 m-0\">\n              Fee: Maker fee: 0.1%| Taker fee: 0.1%| TDS: 1%\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* ConfirmBuy Modal */}\n      <div\n        class=\"modal fade\"\n        id=\"confirmBuy\"\n        data-bs-backdrop=\"static\"\n        data-bs-keyboard=\"false\"\n        tabindex=\"-1\"\n        aria-labelledby=\"confirmBuyLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog modal-sm modal-dialog-centered\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"confirmBuyLabel\">\n                Confirm Buy\n              </h5>\n              {/* <button\n                type=\"button\"\n                class=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              ></button> */}\n            </div>\n            <div class=\"modal-body\">\n              <div className=\"d-flex justify-content-between py-2\">\n                <div>At Price : </div>\n                <div>\n                  <strong>{atPrice}</strong>\n                </div>\n              </div>\n              <div className=\"d-flex justify-content-between py-2\">\n                <div>Amount : </div>\n                <div>\n                  <strong>\n                    {amount} <span className=\"text-uppercase\">{coin[0]}</span>\n                  </strong>\n                </div>\n              </div>\n              <div className=\"d-flex justify-content-between py-2\">\n                <div>Total : </div>\n                <div>\n                  <strong>{amount * atPrice}</strong>\n                </div>\n              </div>\n              <div className=\"m-0\">Fee: Maker fee: 0.1%| Taker fee: 0.1%</div>\n            </div>\n            <div class=\"modal-footer border-0 d-flex justify-content-center\">\n              <div className=\"flex-grow-1\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-danger w-100\"\n                  data-bs-dismiss=\"modal\"\n                >\n                  Cancel\n                </button>\n              </div>\n              <div className=\"flex-grow-1\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-success w-100\"\n                  data-bs-dismiss=\"modal\"\n                  onClick={() => {\n                    if (isLoggedIn) {\n                      buyCoin(atPrice, amount, coin[0], coin[1]);\n                    } else {\n                      NotificationManager.error(\n                        \"First login then perform buy/sell\"\n                      );\n                    }\n                  }}\n                >\n                  Confirm Buy\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* ConfirmSell Modal */}\n      <div\n        class=\"modal fade\"\n        id=\"confirmSell\"\n        data-bs-backdrop=\"static\"\n        data-bs-keyboard=\"false\"\n        tabindex=\"-1\"\n        aria-labelledby=\"confirmSellLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog modal-sm modal-dialog-centered\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"confirmSellLabel\">\n                Confirm Sell\n              </h5>\n              {/* <button\n                type=\"button\"\n                class=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              ></button> */}\n            </div>\n            <div class=\"modal-body\">\n              <div className=\"d-flex justify-content-between py-2\">\n                <div>At Price : </div>\n                <div>\n                  <strong>{atPrice}</strong>\n                </div>\n              </div>\n              <div className=\"d-flex justify-content-between py-2\">\n                <div>Amount : </div>\n                <div>\n                  <strong>\n                    {amount} <span className=\"text-uppercase\">{coin[0]}</span>\n                  </strong>\n                </div>\n              </div>\n              <div className=\"d-flex justify-content-between py-2\">\n                <div>Total : </div>\n                <div>\n                  <strong>{amount * atPrice}</strong>\n                </div>\n              </div>\n              <div className=\"d-flex justify-content-between py-2\">\n                <div>Total after TDS (1%) : </div>\n                <div>\n                  <strong>{amount * atPrice - (amount * atPrice) / 100}</strong>\n                </div>\n              </div>\n              <div className=\"m-0\">\n                Fee: Maker fee: 0.1%| Taker fee: 0.1%| TDS: 1%\n              </div>\n            </div>\n            <div class=\"modal-footer border-0 d-flex justify-content-center\">\n              <div className=\"flex-grow-1\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-danger w-100\"\n                  data-bs-dismiss=\"modal\"\n                >\n                  Cancel\n                </button>\n              </div>\n              <div className=\"flex-grow-1\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-success w-100\"\n                  data-bs-dismiss=\"modal\"\n                  onClick={() => {\n                    if (isLoggedIn) {\n                      sellCoin(atPrice, amount, coin[0], coin[1]);\n                    } else {\n                      NotificationManager.error(\n                        \"First login then perform buy/sell\"\n                      );\n                    }\n                  }}\n                >\n                  Confirm Sell\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* TDS Intro Modal */}\n      <div\n        class=\"modal fade\"\n        id=\"TDSIntro\"\n        data-bs-backdrop=\"static\"\n        data-bs-keyboard=\"false\"\n        tabindex=\"-1\"\n        aria-labelledby=\"TDSIntroLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog modal-sm modal-dialog-centered\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"TDSIntroLabel\">\n                TDS On Crypto Trades\n              </h5>\n              {/* <button\n                type=\"button\"\n                class=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              ></button> */}\n            </div>\n            <div class=\"modal-body\">\n              <p className=\"text-light\">\n                From 1 July 2022, TDS (Tax Deducted at Source) of 1% (5% in\n                exceptional cases) of the trade value will be deducted on each\n                trade as per the Government's guidelines issued on Virtual\n                Digital Asset (VDA) transfers. This TDS can be claimed while\n                filing your ITR.\n              </p>\n              <a href=\"\">Know more..</a>\n            </div>\n            <div class=\"modal-footer border-0 d-flex justify-content-center\">\n              <div className=\"flex-grow-1\">\n                <button type=\"button\" class=\"btn btn-success w-100\"  data-bs-target=\"#confirmSell\" data-bs-toggle=\"modal\">\n                  GOT IT\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/ExSide.jsx",["817","818"],"import {React , useEffect , useState} from 'react';\nimport axios from \"axios\";\nimport \"../candlestick.css\"\nimport { useDispatch } from 'react-redux';\nimport { Chartsymbol } from '../redux/actions/coinDBAction';\n\nexport default function ExSide() {\n  const dispatch = useDispatch();\n  const [symbol, setSymbol] = useState(\"wrxinr\");\n  const [first, setfirst] = useState([]);\n  const [inputData, setInputData] = useState(\"\");\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: `https://api.wazirx.com/sapi/v1/exchangeInfo`,\n    }).then((res) => {\n      setfirst(res.data.symbols);\n    });\n  }, []);\n  function handling(e) {\n    setInputData(e.target.value);\n  }\n  function filttering(d) {\n    if (\n      inputData === \"\" ||\n      d.baseAsset.toLowerCase().includes(inputData.toLocaleLowerCase())\n    ) {\n      return d;\n    }\n  }\n  return (\n    <div style={{width: \"100%\"}}> \n      <input\n        placeholder=\"Search For Coin\"\n        onChange={handling}\n        type=\"text\"\n        style={{\n          marginTop: \"1%\",\n          width: \"100%\",\n          height: \"25px\",\n          border: \"2px Solid grey\",\n          borderRadius: \"100px\",\n        }}\n      />\n      <div style={{ height: \"700px\", overflowY: \"scroll\" }}>\n        {first &&\n          first.filter(filttering).map((d, i) => {\n            return (\n              <div key={i}>\n                <p\n                  id=\"list\"\n                  onClick={() => dispatch(Chartsymbol(d.symbol))}\n                  style={{ textAlign: \"center\" }}\n                >\n                  {d.symbol}\n                </p>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n      )\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/ftx_design/FeatureCards.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/ftx_design/Trade.jsx",["819"],"export default function Trade() {\n  return (\n    <div\n      className=\"container-fluid py-5\"\n      style={{ backgroundColor: \"#1C2230\" }}\n    >\n      <div className=\"container\">\n        <div className=\"row align-items-center\">\n          <div className=\"col-md\">\n            <img\n              src=\"/newimages/app.dcb6c579.png\"\n              style={{ maxWidth: \"100%\" }}\n            />\n          </div>\n          <div className=\"col-md\">\n            <h3 className=\"main-title\">Trade Anywhere &amp; Anytime</h3>\n            <h4>Download the mobile trading app.</h4>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/ftx_design/Slider.jsx",["820","821","822"],"export default function Slider() {\n  const sliderData = [\n    {\n      slide: \"/newimages/20525405.jpg\",\n      //title: \"First slide label\",\n      //desc: \"Some representative placeholder content for the first slide.\",\n    },\n    {\n      slide: \"/newimages/20525427.jpg\",\n      //title: \"First slide label\",\n      //desc: \"Some representative placeholder content for the first slide.\",\n    },\n    {\n      slide: \"/newimages/bitcoin-safety-and-security-Ment-Tech.jpeg\",\n      //title: \"First slide label\",\n      //desc: \"Some representative placeholder content for the first slide.\",\n    },\n  ];\n  return (\n    <>\n      <div\n        id=\"carouselExampleCaptions\"\n        class=\"carousel slide\"\n        data-bs-ride=\"false\"\n      >\n        <div class=\"carousel-indicators\">\n          {sliderData.map((slide, index) => (\n            <button\n              type=\"button\"\n              data-bs-target=\"#carouselExampleCaptions\"\n              data-bs-slide-to={index}\n              class={index == 0 ? \"active\": \"\"}\n              aria-current={index == 0 ? true: false}\n              aria-label={`Slide ${index + 1}`}\n            ></button>\n          ))}\n          {/* <button\n            type=\"button\"\n            data-bs-target=\"#carouselExampleCaptions\"\n            data-bs-slide-to=\"0\"\n            class=\"active\"\n            aria-current=\"true\"\n            aria-label=\"Slide 1\"\n          ></button>\n          <button\n            type=\"button\"\n            data-bs-target=\"#carouselExampleCaptions\"\n            data-bs-slide-to=\"1\"\n            aria-label=\"Slide 2\"\n          ></button>\n          <button\n            type=\"button\"\n            data-bs-target=\"#carouselExampleCaptions\"\n            data-bs-slide-to=\"2\"\n            aria-label=\"Slide 3\"\n          ></button> */}\n        </div>\n        <div class=\"carousel-inner\">\n          {sliderData.map((slide, index) => (\n            <div\n              class={index == 0 ? \"carousel-item active\" : \"carousel-item\"}\n              style={{ height: \"500px\", backgroundImage:`url(${slide.slide})`, backgroundPosition:\"center\", backgroundSize:\"cover\" }}\n            >\n              {/* <img src={slide.slide} class=\"d-block w-100\" alt=\"...\" /> */}\n              {slide.title && slide.desc && (\n                <div class=\"carousel-caption d-none d-md-block\">\n                  <h5>{slide.title}</h5>\n                  <p>{slide.desc}</p>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n        <button\n          class=\"carousel-control-prev\"\n          type=\"button\"\n          data-bs-target=\"#carouselExampleCaptions\"\n          data-bs-slide=\"prev\"\n        >\n          <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n          <span class=\"visually-hidden\">Previous</span>\n        </button>\n        <button\n          class=\"carousel-control-next\"\n          type=\"button\"\n          data-bs-target=\"#carouselExampleCaptions\"\n          data-bs-slide=\"next\"\n        >\n          <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n          <span class=\"visually-hidden\">Next</span>\n        </button>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/StartTrade.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/Newdes.jsx",["823","824","825","826"],"import React from \"react\";\n\n\n\nexport default function Newdes() {\n  return (\n    <>\n      <div className=\"container-fluid text-center \" style={{ background: \"white\",}}>\n        <div className=\"container-fluid text-dark  \" style={{ background: \"white\" }}>\n\n          {/* Partners heading*/}\n\n          <div className=\"container text-center\" style={{ width: \"100%\", paddingTop: \"50px\" }}>\n            <b className=\"\" style={{ fontSize: \"5vh\", color: \"#33406a\" }}>Partner's </b>\n            <div className=\"container p-5 \">\n              <div className=\"row\">\n                <div className=\"col-sm mt-4\">\n                  <a href=\"\"> <img src=\"./image/bit13.svg\" style={{ height: \"100px\", padding: \"10px\" }} alt=\"\" /></a>\n                </div>\n                <div className=\"col-sm t-4\">\n                  <a href=\"\"> <img src=\"./image/poocoin.png\" style={{ height: \"100px\", padding: \"10px\" }} alt=\"\" /> </a>\n\n                </div>\n\n                <div className=\"col-sm t-4\">\n                  <a href=\"\"> <img src=\"./image/desktools.jpg\" style={{ height: \"100px\", padding: \"10px\" }} alt=\"\" /> </a>\n\n                </div>\n\n                <div className=\"col-sm t-4\">\n                  <a href=\"\"> <img src=\"./image/p2p-b2b.png\" style={{ height: \"100px\", padding: \"10px\" }} alt=\"\" /> </a>\n\n                </div>\n\n              </div>\n            </div>\n          </div >\n\n          <div className=\"container my-5  text-center \" style={{ width: \"100%\", paddingTop: \"10px\" }}>\n            <b className=\"\" style={{ fontSize: \"5vh\", color: \"#33406a\" }}> Btex Tokenomics</b>\n            <div className=\"container-fluid pt-5 \" style={{ marginBottom: \"10vh\" }}>\n\n            </div>\n          </div >\n\n          <div className=\"containers p-5  bg-white\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"containers bg-white col-sm\">\n                  <div className=\"row\">\n                    <div className=\"col-md-4\">\n                      <div className=\"cards\">\n                        <div className=\"front front1\">\n                          <div className=\"content\">\n                            <div className=\"icon\">\n                             <img src=\"./image/bitflash yellow.png\" style={{height:\"100px\",marginTop:\"60px\"}} alt=\"\" />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"front front2\">\n                          <div className=\"content\">\n                            <div className=\" mt-5 h1\">\n                              Allocation\n                            </div>\n                            <div className=\"text-success h5\" >\n                              400000000 BTEX\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <div className=\"cards\">\n                        <div className=\"front front1\">\n                          <div className=\"content\">\n                            <div className=\"icon\">\n                            <img src=\"./image/bitflash yellow.png\" style={{height:\"100px\",marginTop:\"60px\"}} alt=\"\" />\n\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"front front2\">\n                          <div className=\"content\">\n                            <div className=\"mt-5 h1\">\n                              Pre sale\n                            </div>\n                            <div className=\"text-success h5\" >\n                              100000000 BTEX\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <div className=\"cards\">\n                        <div className=\"front front1\">\n                          <div className=\"content\">\n                            <div className=\"icon \">\n                            <img src=\"./image/bitflash yellow.png\" style={{height:\"100px\",marginTop:\"60px\"}} alt=\"\" />\n\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"front front2\">\n                          <div className=\"content\">\n                            <div className=\"mt-5 h1 \">\n                              Token Supply\n                            </div>\n                            <div className=\"text-success h5\">\n                              20000000000 BTEX\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n              <div className=\"col-sm-6\" style={{ marginTop: \"100px\" }}>\n\n                <img src=\"./image/Asset 2.png\" alt=\"\" />\n              </div>\n\n            </div>\n          </div>\n          {/* card bottom green-bg */}\n\n          <table className=\"container-fluid flex  table-responsive px-5\" style={{ paddingBlock: \"100px\" }}>\n            <tr className=\"m-5\">\n              <td>  <div className=\"col-12   py-2\" style={{ margin: \"2px\", background: \"rgb(34, 198, 52)\", boxShadow: \"black 0px 0.1px 7px\", width: \"270px\", height: \"100px\" }}>\n                <div className=\"text-white h1\">\n                  5%\n                </div>\n                <div className=\"text-white\">\n                  Airdrop\n                </div>\n              </div></td>\n              <td> <div className=\"col   py-2\" style={{ margin: \"2px\", background: \"rgb(34, 198, 52)\", boxShadow: \"black 0px 0.1px 7px\", width: \"270px\", height: \"100px\" }}>\n                <div className=\"text-white h1\">\n                  20%\n                </div>\n                <div className=\"text-white\">\n                  Affliate\n                </div>\n              </div></td>\n              <td>  <div className=\"col   py-2\" style={{ margin: \"2px\", background: \"rgb(34, 198, 52)\", boxShadow: \"black 0px 0.1px 7px\", width: \"270px\", height: \"100px\" }}>\n                <div className=\"text-white h1\">\n                  30%\n                </div>\n                <div className=\"text-white\">\n                  Stacking\n                </div>\n              </div>\n              </td>\n              <td><div className=\"col   py-2 \" style={{ margin: \"2px\", background: \"rgb(34, 198, 52)\", boxShadow: \"black 0px 0.1px 7px\", width: \"270px\", height: \"100px\" }}>\n                <div className=\"text-white h1\">\n                  10%\n                </div>\n                <div className=\"text-white\">\n                  Burn\n                </div>\n              </div></td>\n              <td> <div className=\"col   py-2\" style={{ margin: \"2px\", background: \"rgb(34, 198, 52)\", boxShadow: \"black 0px 0.1px 7px\", width: \"270px\", height: \"100px\" }}>\n                <div className=\"text-white h1\">\n                  10%\n                </div>\n                <div className=\"text-white\">\n                  Cross Chain\n                </div>\n              </div></td>\n              <td><div className=\"col   py-2\" style={{ margin: \"2px\", background: \"rgb(34, 198, 52)\", boxShadow: \"black 0px 0.1px 7px\", width: \"270px\", height: \"100px\" }}>\n                <div className=\"text-white h1\">\n                  25%\n                </div>\n                <div className=\"text-white\" >\n                  Public Sale\n                </div >\n              </div></td>\n\n            </tr>\n          </table>\n\n      \n               \n            \n    </div>\n    <section class=\"faq-section\">\n<div class=\"container-fluid\">\n  <div class=\"row\">\n                 \n                    <div class=\"col-md-6 offset-md-3\">\n\n                        <div class=\"faq-title text-center pb-3\">\n                        <b style={{fontSize:\"65px\",color:\"rgb(51, 64, 106)\"}}> FAQ</b>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 offset-md-3\">\n                        <div class=\"faq\" id=\"accordion\">\n                            <div class=\"card\">\n                                <div class=\"card-header\" id=\"faqHeading-1\">\n                                    <div class=\"mb-0\">\n                                        <h5 class=\"faq-title\" data-toggle=\"collapse\" data-target=\"#faqCollapse-1\" data-aria-expanded=\"true\" data-aria-controls=\"faqCollapse-1\">\n                                            <span class=\"badge\">1</span>What is Bitcoin?\n                                        </h5>\n                                    </div>\n                                </div>\n                                <div id=\"faqCollapse-1\" class=\"collapse\" aria-labelledby=\"faqHeading-1\" data-parent=\"#accordion\">\n                                    <div class=\"card-body\">\n                                        <p>Bitcoin is a decentralized digital currency, meaning that it lacks a central bank or single administrator. Bitcoin can be sent from user to user through the peer-to-peer network without the need for intermediaries. </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"card\">\n                                <div class=\"card-header\" id=\"faqHeading-2\">\n                                    <div class=\"mb-0\">\n                                        <h5 class=\"faq-title\" data-toggle=\"collapse\" data-target=\"#faqCollapse-2\" data-aria-expanded=\"false\" data-aria-controls=\"faqCollapse-2\">\n                                            <span class=\"badge\">2</span> Is Bitflash safe?\n                                        </h5>\n                                    </div>\n                                </div>\n                                <div id=\"faqCollapse-2\" class=\"collapse\" aria-labelledby=\"faqHeading-2\" data-parent=\"#accordion\">\n                                    <div class=\"card-body\">\n                                        <p>Bitflash boasts one of the world's most sophisticated security technology and maintenance team, and is constantly upgrading our security systems to ensure the safety of user assets and accounts.</p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"card\">\n                                <div class=\"card-header\" id=\"faqHeading-3\">\n                                    <div class=\"mb-0\">\n                                        <h5 class=\"faq-title\" data-toggle=\"collapse\" data-target=\"#faqCollapse-3\" data-aria-expanded=\"false\" data-aria-controls=\"faqCollapse-3\">\n                                            <span class=\"badge\">3</span>Can I start trading with just 100 INR?\n                                        </h5>\n                                    </div>\n                                </div>\n                                <div id=\"faqCollapse-3\" class=\"collapse\" aria-labelledby=\"faqHeading-3\" data-parent=\"#accordion\">\n                                    <div class=\"card-body\">\n                                        <p>Bitflash allows users to improve their practical experience through a variety of trading and financial products for as low as 100 INR.</p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"card\">\n                                <div class=\"card-header\" id=\"faqHeading-4\">\n                                    <div class=\"mb-0\">\n                                        <h5 class=\"faq-title\" data-toggle=\"collapse\" data-target=\"#faqCollapse-4\" data-aria-expanded=\"false\" data-aria-controls=\"faqCollapse-4\">\n                                            <span class=\"badge\">4</span> Is there an exchange limit between fiat and crypto?\n                                        </h5>\n                                    </div>\n                                </div>\n                                <div id=\"faqCollapse-4\" class=\"collapse\" aria-labelledby=\"faqHeading-4\" data-parent=\"#accordion\">\n                                    <div class=\"card-body\">\n                                        <p>Bitflash has no restrictions on the exchange between fiat and crypto, and supports over 50 fiat currencies through our P2P market and credit/debit card channel.</p>\n                                    </div>\n                                </div>\n                            </div>\n                         \n                          \n                        </div>\n                    </div>\n                  </div>\n                </div>\n                </section>\n        </div>\n\n\n\n\n    </>\n  )\n}","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/GetInTouch.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/TradeAnyWhere.jsx",["827"],"import React from \"react\";\nimport { AiFillApple } from \"react-icons/ai\";\nimport { IoLogoAndroid } from \"react-icons/io\";\nimport { FaGooglePlay, FaLinux } from \"react-icons/fa\";\nimport { BsCodeSquare, BsWindows } from \"react-icons/bs\";\n\nexport default function TradeAnyWhere() {\n  return (\n    <>\n      <div className=\"container-fluid text-dark bg-light\">\n      <h2 className=\"\">Trade. Anywhere.</h2>\n        <div className=\"row justify-content-between\">\n          <div className=\"col-lg-5\">\n            <p>\n              Compatible with multiple devices, start trading with safety and\n              convenience.\n            </p>\n            <img src=\"./img/2.svg\" className=\"img-fluid\" />\n          </div>\n          <div className=\"col-lg-5\">\n            <div className=\"container\">\n              <div className=\"row d-flex px-3\">\n                <div className=\"col-2 bg-light my-2 mx-2 text-center trade_icons  p-5\">\n                  <div>\n                    <AiFillApple style={{ height: \"25px\", width: \"25px\" }} />\n                  </div>\n                  <div>app Store</div>\n                </div>\n                <div className=\"col-2 bg-light my-2 mx-2 text-center trade_icons  p-5\">\n                  <div>\n                    <IoLogoAndroid style={{ height: \"25px\", width: \"25px\" }} />\n                  </div>\n                  Android APK\n                </div>\n                <div className=\"col-2 bg-light my-2 mx-2 text-center trade_icons  p-5\">\n                  <div>\n                    <FaGooglePlay style={{ height: \"25px\", width: \"25px\" }} />\n                  </div>\n                  Google play\n                </div>\n                <div className=\"col-2 bg-light my-2 mx-2 text-center trade_icons  p-5\">\n                  <div>\n                    <BsCodeSquare style={{ height: \"25px\", width: \"25px\" }} />\n                  </div>\n                  API\n                </div>\n                <div className=\"col-2 bg-light my-2 mx-2 text-center trade_icons  p-5\">\n                  <div>\n                    <BsWindows style={{ height: \"25px\", width: \"25px\" }} />\n                  </div>\n                  Windows\n                </div>\n                <div className=\"col-2 bg-light my-2 mx-2 trade_icons  p-5\">\n                  <div>\n                    <FaLinux style={{ height: \"25px\", width: \"25px\" }} />\n                  </div>\n                  Linux\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/MarketTrend.jsx",["828","829","830","831","832","833","834","835"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Sparklines, SparklinesLine } from \"react-sparklines\";\nimport { round } from \"../redux/helpers/Math\";\n\nexport default function MarketTrend() {\n  const { coins } = useSelector((state) => state.coinDBReducer);\n  let coins1 = Object.values(coins);\n  const market_child =\n    coins1 &&\n    coins1.map((item, index) => {\n      let usdtprize = coins1 && coins1.find((item) => item.symbol == \"USDT\");\n\n      return (\n        <>\n          {item.symbol == \"BTC\" ||\n          item.symbol == \"BNB\" ||\n          item.symbol == \"ETH\" ||\n          item.symbol == \"TRX\" ||\n          item.symbol == \"BTEX\" ? (\n            <tr>\n              <td>\n                <img\n                  src={`${item.icon}`}\n                  className=\"img-fluid mx-3\"\n                  style={{ height: \"25px\", width: \"25px\" }}\n                />\n                <span className=\"text-secondary mx-3\">{item.name}</span>\n              </td>\n              <td>\n                $\n                {round(\n                  item.raw_current_price_inr / usdtprize.raw_current_price_inr\n                )}\n              </td>\n              <td>\n                <span\n                  className={\n                    item.direction_inr == \"up\" ? \"text-success\" : \"text-danger\"\n                  }\n                >\n                  {item.price_change_percentage_1h_inr}%\n                </span>\n              </td>\n              <td style={{ width: \"200px\" }}>\n                <Sparklines data={[0, item.price_change_percentage_1h_inr]}>\n                  <SparklinesLine color=\"blue\" />\n                </Sparklines>\n              </td>\n              {/* <td>\n                <button className=\"btn btn-success px-3\">\n                  <a href={`/exchange/${item.symbol}-USDT`}>\n                    {\" \"}\n                    <b className=\"text-white\"> Buy </b>{\" \"}\n                  </a>\n                </button>\n              </td> */}\n            </tr>\n          ) : (\n            \"\"\n          )}\n        </>\n      );\n    });\n  return (\n    <>\n      <div className=\"container-fluid\">\n        <div className=\"container py-5 text-dark\">\n          <h2 className=\"\">Market Trend</h2>\n          <div className=\"row\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12\">\n              <table\n                className=\"table table-borderless text-dark\"\n                style={{ width: \"100%\" }}\n              >\n                <tbody>\n                  <tr>\n                    <th>Name</th>\n                    <th>Last Price</th>\n                    <th>24h Change</th>\n                    <th>Graph</th>\n                    {/* <th>Buy</th> */}\n                  </tr>\n                  {market_child}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/NewComponents/BannerNew.jsx",["836","837","838","839","840","841","842","843","844","845","846","847","848"],"import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport TradeAnyWhere from \"../HomeComp/TradeAnyWhere\";\nimport { round } from \"../redux/helpers/Math\";\nimport GetInTouchNew from \"./GetInTouchNew\";\nimport MarketTrendNew from \"./MarketTrendNew\";\nimport TradeAnyWhereNew from \"./TradeAnyWhereNew\";\nexport default function BannerNew(props) {\n  const { coins } = useSelector((state) => state.coinDBReducer);\n  let coins1 = Object.values(coins);\n  const cardImages = [\n    \"launchpad.png\",\n    \"CRYPTOBANKING.png\",\n    \"NFT_MARKETPLACE.png\",\n    \"blockchain_explorer.png\",\n  ];\n\n  const banner_child =\n    coins1 &&\n    coins1.map((item, index) => {\n      let usdtprize = coins1 && coins1.find((item) => item.symbol == \"USDT\");\n      return (\n        <>\n          {item.symbol == \"BTC\" ||\n          item.symbol == \"BNB\" ||\n          item.symbol == \"ETH\" ||\n          item.symbol == \"TRX\" ||\n          item.symbol == \"BTEX\" ? (\n            <div className=\"col-lg-2 col-md-4 col-sm-12  \" key={index}>\n              <div className=\"card border-0   hoverCustom \">\n                <div className=\"card-body \">\n                  <p>\n                    {item.symbol}/USDT&nbsp;&nbsp;\n                    <span\n                      className={\n                        item.direction_inr == \"up\"\n                          ? \"text-success\"\n                          : \"text-danger\"\n                      }\n                    >\n                      {item.price_change_percentage_1h_inr}%\n                    </span>\n                  </p>\n                  <h5>\n                    $\n                    {round(\n                      item.raw_current_price_inr /\n                        usdtprize.raw_current_price_inr\n                    )}\n                  </h5>\n                </div>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </>\n      );\n    });\n  return (\n    <>\n      <div\n        className=\"container-fluid text-dark bg-transparent\"\n        style={{\n          backgroundImage: \"url(/newimages/9adcfaf.jpeg)\",\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n          paddingTop: \"120px\",\n          paddingBottom: \"120px\",\n        }}\n      >\n        <div className=\"container\">\n          <div className=\"row banner-row\">\n            <div className=\"col-lg-6 col-md-12\">\n              <h1 className=\"main-title\">Begin your crypto journey.</h1>\n              <h1 className=\"main-title\">Buy &amp; Sell Crypto</h1>\n              <p className=\"main-para\">\n                Create your account and earn exciting welcome rewards\n              </p>\n              <div>\n                <a className=\"btn btn-lg btn-warning ml-2\" href=\"/login\">\n                  Register Now\n                </a>\n                <a\n                  className=\"btn btn-lg btn-light ml-2\"\n                  href=\"/exchange/btc-inr\"\n                >\n                  Exchange\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* <div\n          className={`row py-3 ${\n            props.image ? \"mx-0\" : \"mx-5\"\n          } d-flex justify-content-between`}\n        >\n          {props.image ? (\n            <img src={`./img/${props.image}`} className=\"img-fluid\" />\n          ) : (\n            <>\n              <div className=\"col-lg-6 col-sm-12 py-5\">\n                <div className=\"text-start\">\n                  <h2 className=\"py-0 bannertxt text-white\"  style={{fontFamily:\"arial\"}}> <b> Buy  &amp;  sell Crypto </b></h2>\n                  <p class=\"h1\"  style={{fontSize:\"45px\",fontFamily:\"arial\"}}> <b> Start Trading now </b> </p>\n                  <p className=\"text-white\"  style={{fontSize:\"24px\"}}>\n                    The Highly Efficient exchange for stable and secure Trade.\n                  </p>\n                </div>\n                <a\n                  className=\"btn btn-warning mx-2  py-2 my-3\"\n                  style={{ padding: \"0px 10px\",}}\n                  href=\"/login\"\n                >\n                  Register Now\n                </a>\n                <a\n                  className=\"btn btn-light px-3 py-2\"\n                  \n                  href=\"/exchange/btc-inr\"\n                >\n                  Exchange\n                </a>\n              </div>\n\n              <div className=\"col-lg-6 col-sm-12 banner\"></div>\n            </>\n          )}\n        </div> */}\n      </div>\n      <div\n        className=\"container-fluid py-5\"\n        style={{\n          /* backgroundColor: \"lightgrey\", */\n          backgroundImage: \"url(/newimages/f29c81a.webp)\",\n          backgroundPosition: \"bottom\",\n          //backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n        }}\n      >\n        <div className=\"container\">\n          <div className=\"row\">\n            {cardImages.map((cardImg) => (\n              <div className=\"col col-12 col-md-6 col-lg-3\">\n                <div className=\"card\">\n                  <img\n                    src={`/newimages/${cardImg}`}\n                    className=\"card-img-top card-img-bottom\"\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-lg-12 text-center\">\n              <p className=\"mb-1\" style={{ fontWeight: \"500\" }}>\n                BITFLASH initiate in market with exchange and its own token\n                BTEX. Future planning of BITFLASH is gathering of trading\n                community in BITFLASH Exchange\n              </p>\n              <p className=\"mb-1\" style={{ fontWeight: \"500\" }}>\n                BITFLASH preparing own blockchain explorer that will launch mid\n                feb 2022, with testnet and crypto wallet.\n              </p>\n              <p className=\"mb-1\" style={{ fontWeight: \"500\" }}>\n                BTEX NFT Market Place for art tokenization will coming soon.\n              </p>\n            </div>\n          </div>\n\n          <MarketTrendNew />\n          <TradeAnyWhereNew />\n          <GetInTouchNew />\n\n          <div className=\"container-fluid startj\">\n            <h1 className=\"text-center text-dark main-title mb-3\">\n              Begin your crypto journey\n            </h1>\n            <div className=\"text-center\">\n              <a href=\"\" className=\"btn btn-primary btn-lg mr-2\">\n                Sing Up\n              </a>\n              <a href=\"\" className=\"btn btn-outline-primary btn-lg\">\n                Log In\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* <div className=\"row-sm-12  py-5 \" style={{ background: \"white\" }}>\n        <div className=\"col-12 text-center\">\n          <img src=\"./img/bitflash-banner-animation.gif\" className=\"gifimg\" />\n        </div>\n      </div> */}\n\n      {/* <div\n        className=\"container-fluid text-dark\"\n        style={{ background: \"white\" }}\n      >\n        <div className=\"row py-5 text-center d-flex justify-content-center shadow  bg-light hoverCustom \">\n          {banner_child}\n        </div>\n      </div> */}\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/BannerData.jsx",["849","850"],"import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { WebsiteURL } from \"../redux/helpers/api_functions_new\";\nimport \"./BannerData.css\";\nimport { useSelector } from \"react-redux\";\nimport { bannerClose } from \"../redux/actions/authActions\";\n// var ms = new Date(2022 - 1 - 22).getTime();\n\nconst NotificationBanner = (props) => {\n    const [bannerStatus, setbannerStatus] = useState(false);\n    const [bannerURL, setBannerurl] = useState('');\n    const [showBanner, setShowBanner] = useState(false);\n    const { last_banner_close } = useSelector((state) => state.AuthReducer);\n    let { webData } = useSelector((state) => state.websiteDBReducer);\n\n    const url = WebsiteURL+'/theme/img/'\n    useEffect(() => {\n        let h24 = last_banner_close ? last_banner_close.getTime()+Number(24*60*60*1000) : true\n        let today = new Date().getTime();\n        if(h24 && h24 < today ){\n            setShowBanner(true)\n        }else{\n            setShowBanner(true)\n        }\n        let banner_status = webData ? webData.banner_status:false;\n        let banner_url = webData ? webData.banner_url:'';\n        setBannerurl(banner_url);\n        setbannerStatus(banner_status);\n    }, '')\n    return (\n        <>\n         {bannerStatus && showBanner ?\n                <div className='notification--type-success'>\n                    <div className=\"notification__body\">\n                        <img src={bannerURL  ? url+bannerURL : ''} alt=\"\"  className=\"imgSet\" />\n                    </div>\n                    {/* <i className=\"notification__close cursor-pointer fa-light fa-circle-xmark \"  */}\n\n<i className=\"notification__close cursor-pointer fas fa-times\" style={{ fontSize:\"40px\"}}\n                        onClick={() => { \n                            console.log(\"bannerClose() : \")\n                            bannerClose(); \n                            setbannerStatus(false);  \n                        }}>\n                    </i>\n                </div>\n            : null}\n        </>\n\n    );\n};\n\n// Notification.propTypes = {\n//     type: React.PropTypes.oneOf(['success', 'error', 'notify']).isRequired,\n// };\n\nexport default NotificationBanner;","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/HomeComp/Plan.jsx",["851","852","853","854"],"import React from \"react\";\n\nexport default function Plan() {\n  return (\n    <>\n      <div className=\"container-fluid bg-light\">\n        <div className=\"row px-4 py-3\">\n          <div className=\"col-lg-3 col-md-6 col-sm-12 my-2\">\n            <img src=\"./img/image_banner/launchpad.png\" className=\"img-fluid\" />\n          </div>\n          <div className=\"col-lg-3 col-md-6 col-sm-12 my-2\">\n            <img\n              src=\"./img/image_banner/CRYPTOBANKING.png\"\n              className=\"img-fluid\"\n            />\n          </div>\n\n          <div className=\"col-lg-3 col-md-6 col-sm-12 my-2\">\n            <img\n              src=\"./img/image_banner/NFT_MARKETPLACE.png\"\n              className=\"img-fluid\"\n            />\n          </div>\n          <div className=\"col-lg-3 col-md-6 col-sm-12 my-2\">\n            <img\n              src=\"./img/image_banner/blockchain_explorer.png\"\n              className=\"img-fluid\"\n            />\n          </div>\n        </div>\n        <div className=\"row px-4 py-1 mx-5 text-center bg-light\">\n          <div className=\"col-12\">\n            <p style={{ fontWeight: \"500\" }}>\n              BITFLASH initiate in market with exchange and its own token BTEX.\n              Future planning of BITFLASH is gathering of trading community in\n              BITFLASH Exchange\n            </p>\n            <p style={{ fontWeight: \"500\" }}>\n              BITFLASH preparing own blockchain explorer that will launch mid\n              feb 2022, with testnet and crypto wallet.\n            </p>\n            <p style={{ fontWeight: \"500\" }}>\n              BTEX NFT Market Place for art tokenization will coming soon.\n            </p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/components/LoginORSignup.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/NewComponents/GetInTouchNew.jsx",[],"/Users/nileshpanhale/Documents/Test_Frontend/src/pages/NewComponents/MarketTrendNew.jsx",["855","856","857","858","859","860","861","862"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Sparklines, SparklinesLine } from \"react-sparklines\";\nimport { round } from \"../redux/helpers/Math\";\n\nexport default function MarketTrendNew() {\n  const { coins } = useSelector((state) => state.coinDBReducer);\n  let coins1 = Object.values(coins);\n  const market_child =\n    coins1 &&\n    coins1.map((item, index) => {\n      let usdtprize = coins1 && coins1.find((item) => item.symbol == \"USDT\");\n\n      return (\n        <>\n          {item.symbol == \"BTC\" ||\n          item.symbol == \"BNB\" ||\n          item.symbol == \"ETH\" ||\n          item.symbol == \"TRX\" ||\n          item.symbol == \"BTEX\" ? (\n            <tr className=\"bg-transparent border border-0\">\n              <td className=\"border-0\">\n                <img\n                  src={`${item.icon}`}\n                  className=\"img-fluid mx-3\"\n                  style={{ height: \"25px\", width: \"25px\" }}\n                />\n                <span className=\"text-secondary mx-3\">{item.name}</span>\n              </td>\n              <td className=\"border-0\">\n                $\n                {round(\n                  item.raw_current_price_inr / usdtprize.raw_current_price_inr\n                )}\n              </td>\n              <td className=\"border-0\">\n                <span\n                  className={\n                    item.direction_inr == \"up\" ? \"text-success\" : \"text-danger\"\n                  }\n                >\n                  {item.price_change_percentage_1h_inr}%\n                </span>\n              </td>\n              <td className=\"border-0\" style={{ width: \"200px\" }}>\n                <Sparklines data={[0, item.price_change_percentage_1h_inr]}>\n                  <SparklinesLine color=\"blue\" />\n                </Sparklines>\n              </td>\n              <td className=\"border-0 text-right\">\n                <a className=\"btn btn-success\" href={`/exchange/${item.symbol}-USDT`}>\n                  Buy\n                </a>\n              </td>\n            </tr>\n          ) : (\n            \"\"\n          )}\n        </>\n      );\n    });\n  return (\n    <>\n      <div className=\"container-fluid  text-dark starts\">\n        <h2 className=\"\">Market Trend</h2>\n        <div className=\"row justify-content-between\">\n          <div className=\"col-lg-12 col-md-12 col-sm-12\">\n            <table className=\"table text-dark\">\n              <thead>\n                <tr className=\"border-0\">\n                  <td className=\"border-0\">Name</td>\n                  <td className=\"border-0\">Last Price</td>\n                  <td className=\"border-0\">24h Change</td>\n                  <td className=\"border-0\">Graph</td>\n                  <td className=\"border-0 text-right\">Buy</td>\n                </tr>\n              </thead>\n              <tbody>{market_child}</tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/nileshpanhale/Documents/Test_Frontend/src/pages/NewComponents/TradeAnyWhereNew.jsx",["863"],"import React from \"react\";\nimport { AiFillApple } from \"react-icons/ai\";\nimport { IoLogoAndroid } from \"react-icons/io\";\nimport { FaGooglePlay, FaLinux } from \"react-icons/fa\";\nimport { BsCodeSquare, BsWindows } from \"react-icons/bs\";\n\nexport default function TradeAnyWhereNew() {\n  return (\n    <>\n      <div className=\"container-fluid text-dark starts\">\n      <h2 className=\"\">Trade. Anywhere.</h2>\n        <div className=\"row justify-content-between\">\n          <div className=\"col-lg\">\n            <p>\n              Compatible with multiple devices, start trading with safety and\n              convenience.\n            </p>\n            <img src=\"./img/2.svg\" className=\"img-fluid\" />\n          </div>\n          <div className=\"col-lg\">\n            <div className=\"\">\n              <div className=\"row\">\n                <div className=\"col-4 text-center trade_icons\">\n                  <div>\n                    <AiFillApple style={{ height: \"25px\", width: \"25px\" }} />\n                  </div>\n                  <div>app Store</div>\n                </div>\n                <div className=\"col-4 text-center trade_icons\">\n                  <div>\n                    <IoLogoAndroid style={{ height: \"25px\", width: \"25px\" }} />\n                  </div>\n                  Android APK\n                </div>\n                <div className=\"col-4 text-center trade_icons  p-5\">\n                  <div>\n                    <FaGooglePlay style={{ height: \"25px\", width: \"25px\" }} />\n                  </div>\n                  Google play\n                </div>\n                <div className=\"col-4 text-center trade_icons\">\n                  <div>\n                    <BsCodeSquare style={{ height: \"25px\", width: \"25px\" }} />\n                  </div>\n                  API\n                </div>\n                <div className=\"col-4 text-center trade_icons\">\n                  <div>\n                    <BsWindows style={{ height: \"25px\", width: \"25px\" }} />\n                  </div>\n                  Windows\n                </div>\n                <div className=\"col-4 trade_icons\">\n                  <div>\n                    <FaLinux style={{ height: \"25px\", width: \"25px\" }} />\n                  </div>\n                  Linux\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n",{"ruleId":"864","replacedBy":"865"},{"ruleId":"866","replacedBy":"867"},{"ruleId":"868","severity":1,"message":"869","line":11,"column":8,"nodeType":"870","messageId":"871","endLine":11,"endColumn":16},{"ruleId":"868","severity":1,"message":"872","line":65,"column":10,"nodeType":"870","messageId":"871","endLine":65,"endColumn":25},{"ruleId":"868","severity":1,"message":"873","line":66,"column":8,"nodeType":"870","messageId":"871","endLine":66,"endColumn":17},{"ruleId":"868","severity":1,"message":"874","line":70,"column":8,"nodeType":"870","messageId":"871","endLine":70,"endColumn":17},{"ruleId":"875","severity":1,"message":"876","line":135,"column":6,"nodeType":"877","endLine":135,"endColumn":13,"suggestions":"878"},{"ruleId":"879","severity":1,"message":"880","line":170,"column":13,"nodeType":"881","messageId":"882","endLine":170,"endColumn":49},{"ruleId":"868","severity":1,"message":"883","line":5,"column":3,"nodeType":"870","messageId":"871","endLine":5,"endColumn":23},{"ruleId":"868","severity":1,"message":"884","line":11,"column":10,"nodeType":"870","messageId":"871","endLine":11,"endColumn":17},{"ruleId":"868","severity":1,"message":"885","line":2,"column":8,"nodeType":"870","messageId":"871","endLine":2,"endColumn":14},{"ruleId":"868","severity":1,"message":"886","line":3,"column":8,"nodeType":"870","messageId":"871","endLine":3,"endColumn":12},{"ruleId":"868","severity":1,"message":"887","line":4,"column":8,"nodeType":"870","messageId":"871","endLine":4,"endColumn":19},{"ruleId":"868","severity":1,"message":"888","line":5,"column":8,"nodeType":"870","messageId":"871","endLine":5,"endColumn":21},{"ruleId":"868","severity":1,"message":"889","line":6,"column":8,"nodeType":"870","messageId":"871","endLine":6,"endColumn":18},{"ruleId":"868","severity":1,"message":"890","line":7,"column":8,"nodeType":"870","messageId":"871","endLine":7,"endColumn":18},{"ruleId":"868","severity":1,"message":"891","line":9,"column":8,"nodeType":"870","messageId":"871","endLine":9,"endColumn":14},{"ruleId":"868","severity":1,"message":"892","line":10,"column":8,"nodeType":"870","messageId":"871","endLine":10,"endColumn":17},{"ruleId":"893","severity":1,"message":"894","line":20,"column":20,"nodeType":"870","messageId":"895","endLine":20,"endColumn":28},{"ruleId":"868","severity":1,"message":"896","line":21,"column":7,"nodeType":"870","messageId":"871","endLine":21,"endColumn":21},{"ruleId":"868","severity":1,"message":"897","line":23,"column":10,"nodeType":"870","messageId":"871","endLine":23,"endColumn":21},{"ruleId":"868","severity":1,"message":"898","line":23,"column":23,"nodeType":"870","messageId":"871","endLine":23,"endColumn":36},{"ruleId":"875","severity":1,"message":"899","line":37,"column":13,"nodeType":"900","endLine":52,"endColumn":4},{"ruleId":"875","severity":1,"message":"901","line":52,"column":6,"nodeType":"877","endLine":52,"endColumn":8,"suggestions":"902"},{"ruleId":"868","severity":1,"message":"903","line":90,"column":12,"nodeType":"870","messageId":"871","endLine":90,"endColumn":25},{"ruleId":"904","severity":1,"message":"905","line":284,"column":74,"nodeType":"906","messageId":"907","endLine":284,"endColumn":76},{"ruleId":"904","severity":1,"message":"905","line":800,"column":49,"nodeType":"906","messageId":"907","endLine":800,"endColumn":51},{"ruleId":"868","severity":1,"message":"908","line":1,"column":27,"nodeType":"870","messageId":"871","endLine":1,"endColumn":36},{"ruleId":"868","severity":1,"message":"909","line":3,"column":10,"nodeType":"870","messageId":"871","endLine":3,"endColumn":14},{"ruleId":"868","severity":1,"message":"910","line":6,"column":10,"nodeType":"870","messageId":"871","endLine":6,"endColumn":17},{"ruleId":"868","severity":1,"message":"911","line":6,"column":19,"nodeType":"870","messageId":"871","endLine":6,"endColumn":25},{"ruleId":"868","severity":1,"message":"912","line":22,"column":11,"nodeType":"870","messageId":"871","endLine":22,"endColumn":18},{"ruleId":"868","severity":1,"message":"913","line":23,"column":10,"nodeType":"870","messageId":"871","endLine":23,"endColumn":13},{"ruleId":"868","severity":1,"message":"914","line":29,"column":9,"nodeType":"870","messageId":"871","endLine":29,"endColumn":19},{"ruleId":"904","severity":1,"message":"905","line":31,"column":35,"nodeType":"906","messageId":"907","endLine":31,"endColumn":37},{"ruleId":"915","severity":1,"message":"916","line":195,"column":23,"nodeType":"881","endLine":198,"endColumn":25},{"ruleId":"904","severity":1,"message":"905","line":38,"column":30,"nodeType":"906","messageId":"907","endLine":38,"endColumn":32},{"ruleId":"868","severity":1,"message":"917","line":13,"column":10,"nodeType":"870","messageId":"871","endLine":13,"endColumn":25},{"ruleId":"904","severity":1,"message":"905","line":33,"column":35,"nodeType":"906","messageId":"907","endLine":33,"endColumn":37},{"ruleId":"868","severity":1,"message":"918","line":135,"column":29,"nodeType":"870","messageId":"871","endLine":135,"endColumn":40},{"ruleId":"919","severity":1,"message":"920","line":167,"column":35,"nodeType":"870","messageId":"921","endLine":167,"endColumn":36},{"ruleId":"904","severity":1,"message":"905","line":22,"column":46,"nodeType":"906","messageId":"907","endLine":22,"endColumn":48},{"ruleId":"875","severity":1,"message":"922","line":34,"column":6,"nodeType":"877","endLine":34,"endColumn":8,"suggestions":"923"},{"ruleId":"904","severity":1,"message":"905","line":55,"column":39,"nodeType":"906","messageId":"907","endLine":55,"endColumn":41},{"ruleId":"904","severity":1,"message":"905","line":109,"column":39,"nodeType":"906","messageId":"907","endLine":109,"endColumn":41},{"ruleId":"904","severity":1,"message":"905","line":114,"column":41,"nodeType":"906","messageId":"907","endLine":114,"endColumn":43},{"ruleId":"904","severity":1,"message":"905","line":114,"column":62,"nodeType":"906","messageId":"907","endLine":114,"endColumn":64},{"ruleId":"875","severity":1,"message":"922","line":23,"column":6,"nodeType":"877","endLine":23,"endColumn":8,"suggestions":"924"},{"ruleId":"904","severity":1,"message":"925","line":47,"column":42,"nodeType":"906","messageId":"907","endLine":47,"endColumn":44},{"ruleId":"904","severity":1,"message":"925","line":61,"column":43,"nodeType":"906","messageId":"907","endLine":61,"endColumn":45},{"ruleId":"904","severity":1,"message":"925","line":75,"column":51,"nodeType":"906","messageId":"907","endLine":75,"endColumn":53},{"ruleId":"904","severity":1,"message":"905","line":94,"column":51,"nodeType":"906","messageId":"907","endLine":94,"endColumn":53},{"ruleId":"926","severity":1,"message":"927","line":14,"column":22,"nodeType":"900","messageId":"928","endLine":14,"endColumn":24},{"ruleId":"868","severity":1,"message":"929","line":17,"column":21,"nodeType":"870","messageId":"871","endLine":17,"endColumn":33},{"ruleId":"875","severity":1,"message":"922","line":42,"column":6,"nodeType":"877","endLine":42,"endColumn":24,"suggestions":"930"},{"ruleId":"875","severity":1,"message":"931","line":42,"column":7,"nodeType":"906","endLine":42,"endColumn":23},{"ruleId":"875","severity":1,"message":"922","line":57,"column":6,"nodeType":"877","endLine":57,"endColumn":8,"suggestions":"932"},{"ruleId":"933","severity":1,"message":"934","line":73,"column":46,"nodeType":"906","messageId":"935","endLine":73,"endColumn":47},{"ruleId":"936","severity":1,"message":"937","line":120,"column":1,"nodeType":"881","endLine":124,"endColumn":49},{"ruleId":"936","severity":1,"message":"937","line":132,"column":1,"nodeType":"881","endLine":136,"endColumn":51},{"ruleId":"936","severity":1,"message":"937","line":145,"column":1,"nodeType":"881","endLine":149,"endColumn":48},{"ruleId":"936","severity":1,"message":"937","line":157,"column":1,"nodeType":"881","endLine":161,"endColumn":49},{"ruleId":"936","severity":1,"message":"937","line":169,"column":1,"nodeType":"881","endLine":173,"endColumn":49},{"ruleId":"904","severity":1,"message":"905","line":264,"column":59,"nodeType":"906","messageId":"907","endLine":264,"endColumn":61},{"ruleId":"904","severity":1,"message":"905","line":266,"column":47,"nodeType":"906","messageId":"907","endLine":266,"endColumn":49},{"ruleId":"904","severity":1,"message":"905","line":268,"column":48,"nodeType":"906","messageId":"907","endLine":268,"endColumn":50},{"ruleId":"904","severity":1,"message":"905","line":283,"column":48,"nodeType":"906","messageId":"907","endLine":283,"endColumn":50},{"ruleId":"904","severity":1,"message":"905","line":285,"column":51,"nodeType":"906","messageId":"907","endLine":285,"endColumn":53},{"ruleId":"904","severity":1,"message":"905","line":287,"column":52,"nodeType":"906","messageId":"907","endLine":287,"endColumn":54},{"ruleId":"868","severity":1,"message":"938","line":2,"column":10,"nodeType":"870","messageId":"871","endLine":2,"endColumn":15},{"ruleId":"868","severity":1,"message":"939","line":24,"column":10,"nodeType":"870","messageId":"871","endLine":24,"endColumn":15},{"ruleId":"868","severity":1,"message":"940","line":30,"column":10,"nodeType":"870","messageId":"871","endLine":30,"endColumn":17},{"ruleId":"868","severity":1,"message":"941","line":39,"column":10,"nodeType":"870","messageId":"871","endLine":39,"endColumn":16},{"ruleId":"868","severity":1,"message":"942","line":39,"column":18,"nodeType":"870","messageId":"871","endLine":39,"endColumn":26},{"ruleId":"868","severity":1,"message":"943","line":41,"column":10,"nodeType":"870","messageId":"871","endLine":41,"endColumn":17},{"ruleId":"868","severity":1,"message":"944","line":63,"column":10,"nodeType":"870","messageId":"871","endLine":63,"endColumn":18},{"ruleId":"868","severity":1,"message":"945","line":121,"column":9,"nodeType":"870","messageId":"871","endLine":121,"endColumn":18},{"ruleId":"904","severity":1,"message":"925","line":153,"column":59,"nodeType":"906","messageId":"907","endLine":153,"endColumn":61},{"ruleId":"904","severity":1,"message":"925","line":160,"column":60,"nodeType":"906","messageId":"907","endLine":160,"endColumn":62},{"ruleId":"904","severity":1,"message":"925","line":164,"column":62,"nodeType":"906","messageId":"907","endLine":164,"endColumn":64},{"ruleId":"875","severity":1,"message":"946","line":191,"column":6,"nodeType":"877","endLine":191,"endColumn":13,"suggestions":"947"},{"ruleId":"868","severity":1,"message":"948","line":211,"column":9,"nodeType":"870","messageId":"871","endLine":211,"endColumn":21},{"ruleId":"875","severity":1,"message":"922","line":226,"column":6,"nodeType":"877","endLine":226,"endColumn":8,"suggestions":"949"},{"ruleId":"904","severity":1,"message":"905","line":382,"column":50,"nodeType":"906","messageId":"907","endLine":382,"endColumn":52},{"ruleId":"950","severity":1,"message":"951","line":614,"column":11,"nodeType":"952","messageId":"907","endLine":614,"endColumn":26},{"ruleId":"904","severity":1,"message":"905","line":632,"column":27,"nodeType":"906","messageId":"907","endLine":632,"endColumn":29},{"ruleId":"904","severity":1,"message":"905","line":644,"column":27,"nodeType":"906","messageId":"907","endLine":644,"endColumn":29},{"ruleId":"904","severity":1,"message":"905","line":742,"column":26,"nodeType":"906","messageId":"907","endLine":742,"endColumn":28},{"ruleId":"904","severity":1,"message":"905","line":838,"column":57,"nodeType":"906","messageId":"907","endLine":838,"endColumn":59},{"ruleId":"953","severity":1,"message":"954","line":857,"column":47,"nodeType":"881","messageId":"955","endLine":864,"endColumn":48,"fix":"956"},{"ruleId":"936","severity":1,"message":"937","line":1060,"column":51,"nodeType":"881","endLine":1093,"endColumn":52},{"ruleId":"904","severity":1,"message":"905","line":1071,"column":70,"nodeType":"906","messageId":"907","endLine":1071,"endColumn":72},{"ruleId":"933","severity":1,"message":"934","line":1134,"column":63,"nodeType":"906","messageId":"935","endLine":1134,"endColumn":64},{"ruleId":"933","severity":1,"message":"934","line":1136,"column":63,"nodeType":"906","messageId":"935","endLine":1136,"endColumn":64},{"ruleId":"904","severity":1,"message":"905","line":1495,"column":62,"nodeType":"906","messageId":"907","endLine":1495,"endColumn":64},{"ruleId":"904","severity":1,"message":"905","line":1535,"column":29,"nodeType":"906","messageId":"907","endLine":1535,"endColumn":31},{"ruleId":"953","severity":1,"message":"954","line":1562,"column":33,"nodeType":"881","messageId":"955","endLine":1562,"endColumn":121,"fix":"957"},{"ruleId":"904","severity":1,"message":"905","line":1565,"column":41,"nodeType":"906","messageId":"907","endLine":1565,"endColumn":43},{"ruleId":"904","severity":1,"message":"905","line":1567,"column":44,"nodeType":"906","messageId":"907","endLine":1567,"endColumn":46},{"ruleId":"868","severity":1,"message":"958","line":6,"column":10,"nodeType":"870","messageId":"871","endLine":6,"endColumn":21},{"ruleId":"868","severity":1,"message":"959","line":18,"column":9,"nodeType":"870","messageId":"871","endLine":18,"endColumn":17},{"ruleId":"904","severity":1,"message":"905","line":119,"column":46,"nodeType":"906","messageId":"907","endLine":119,"endColumn":48},{"ruleId":"904","severity":1,"message":"905","line":146,"column":46,"nodeType":"906","messageId":"907","endLine":146,"endColumn":48},{"ruleId":"904","severity":1,"message":"905","line":173,"column":46,"nodeType":"906","messageId":"907","endLine":173,"endColumn":48},{"ruleId":"915","severity":1,"message":"916","line":201,"column":27,"nodeType":"881","endLine":201,"endColumn":44},{"ruleId":"868","severity":1,"message":"960","line":16,"column":10,"nodeType":"870","messageId":"871","endLine":16,"endColumn":16},{"ruleId":"868","severity":1,"message":"961","line":16,"column":18,"nodeType":"870","messageId":"871","endLine":16,"endColumn":24},{"ruleId":"868","severity":1,"message":"962","line":21,"column":7,"nodeType":"870","messageId":"871","endLine":21,"endColumn":8},{"ruleId":"875","severity":1,"message":"963","line":42,"column":13,"nodeType":"964","endLine":42,"endColumn":35},{"ruleId":"904","severity":1,"message":"905","line":67,"column":25,"nodeType":"906","messageId":"907","endLine":67,"endColumn":27},{"ruleId":"904","severity":1,"message":"905","line":68,"column":26,"nodeType":"906","messageId":"907","endLine":68,"endColumn":28},{"ruleId":"904","severity":1,"message":"905","line":69,"column":33,"nodeType":"906","messageId":"907","endLine":69,"endColumn":35},{"ruleId":"904","severity":1,"message":"905","line":70,"column":31,"nodeType":"906","messageId":"907","endLine":70,"endColumn":33},{"ruleId":"904","severity":1,"message":"905","line":71,"column":28,"nodeType":"906","messageId":"907","endLine":71,"endColumn":30},{"ruleId":"904","severity":1,"message":"905","line":80,"column":27,"nodeType":"906","messageId":"907","endLine":80,"endColumn":29},{"ruleId":"904","severity":1,"message":"905","line":24,"column":28,"nodeType":"906","messageId":"907","endLine":24,"endColumn":30},{"ruleId":"933","severity":1,"message":"934","line":57,"column":49,"nodeType":"906","messageId":"935","endLine":57,"endColumn":50},{"ruleId":"904","severity":1,"message":"905","line":84,"column":32,"nodeType":"906","messageId":"907","endLine":84,"endColumn":34},{"ruleId":"875","severity":1,"message":"922","line":16,"column":6,"nodeType":"877","endLine":16,"endColumn":8,"suggestions":"965"},{"ruleId":"904","severity":1,"message":"905","line":34,"column":27,"nodeType":"906","messageId":"907","endLine":34,"endColumn":29},{"ruleId":"868","severity":1,"message":"966","line":33,"column":9,"nodeType":"870","messageId":"871","endLine":33,"endColumn":16},{"ruleId":"868","severity":1,"message":"967","line":37,"column":9,"nodeType":"870","messageId":"871","endLine":37,"endColumn":17},{"ruleId":"904","severity":1,"message":"905","line":61,"column":15,"nodeType":"906","messageId":"907","endLine":61,"endColumn":17},{"ruleId":"875","severity":1,"message":"901","line":140,"column":6,"nodeType":"877","endLine":140,"endColumn":8,"suggestions":"968"},{"ruleId":"904","severity":1,"message":"905","line":339,"column":51,"nodeType":"906","messageId":"907","endLine":339,"endColumn":53},{"ruleId":"875","severity":1,"message":"969","line":18,"column":6,"nodeType":"877","endLine":18,"endColumn":8,"suggestions":"970"},{"ruleId":"933","severity":1,"message":"934","line":32,"column":47,"nodeType":"906","messageId":"935","endLine":32,"endColumn":48},{"ruleId":"904","severity":1,"message":"905","line":40,"column":29,"nodeType":"906","messageId":"907","endLine":40,"endColumn":31},{"ruleId":"971","severity":1,"message":"972","line":26,"column":17,"nodeType":"881","endLine":26,"endColumn":99},{"ruleId":"971","severity":1,"message":"972","line":32,"column":17,"nodeType":"881","endLine":32,"endColumn":99},{"ruleId":"868","severity":1,"message":"973","line":4,"column":10,"nodeType":"870","messageId":"871","endLine":4,"endColumn":17},{"ruleId":"868","severity":1,"message":"911","line":4,"column":19,"nodeType":"870","messageId":"871","endLine":4,"endColumn":25},{"ruleId":"868","severity":1,"message":"884","line":12,"column":10,"nodeType":"870","messageId":"871","endLine":12,"endColumn":17},{"ruleId":"904","severity":1,"message":"905","line":22,"column":25,"nodeType":"906","messageId":"907","endLine":22,"endColumn":27},{"ruleId":"904","severity":1,"message":"905","line":22,"column":53,"nodeType":"906","messageId":"907","endLine":22,"endColumn":55},{"ruleId":"904","severity":1,"message":"925","line":28,"column":24,"nodeType":"906","messageId":"907","endLine":28,"endColumn":26},{"ruleId":"868","severity":1,"message":"974","line":1,"column":28,"nodeType":"870","messageId":"871","endLine":1,"endColumn":36},{"ruleId":"875","severity":1,"message":"899","line":18,"column":13,"nodeType":"900","endLine":35,"endColumn":4},{"ruleId":"875","severity":1,"message":"922","line":35,"column":6,"nodeType":"877","endLine":35,"endColumn":8,"suggestions":"975"},{"ruleId":"875","severity":1,"message":"922","line":28,"column":6,"nodeType":"877","endLine":28,"endColumn":8,"suggestions":"976"},{"ruleId":"904","severity":1,"message":"905","line":35,"column":21,"nodeType":"906","messageId":"907","endLine":35,"endColumn":23},{"ruleId":"904","severity":1,"message":"905","line":35,"column":39,"nodeType":"906","messageId":"907","endLine":35,"endColumn":41},{"ruleId":"904","severity":1,"message":"905","line":49,"column":24,"nodeType":"906","messageId":"907","endLine":49,"endColumn":26},{"ruleId":"868","severity":1,"message":"977","line":11,"column":8,"nodeType":"870","messageId":"871","endLine":11,"endColumn":14},{"ruleId":"904","severity":1,"message":"905","line":29,"column":25,"nodeType":"906","messageId":"907","endLine":29,"endColumn":27},{"ruleId":"904","severity":1,"message":"905","line":30,"column":33,"nodeType":"906","messageId":"907","endLine":30,"endColumn":35},{"ruleId":"904","severity":1,"message":"905","line":31,"column":31,"nodeType":"906","messageId":"907","endLine":31,"endColumn":33},{"ruleId":"904","severity":1,"message":"905","line":35,"column":27,"nodeType":"906","messageId":"907","endLine":35,"endColumn":29},{"ruleId":"875","severity":1,"message":"978","line":38,"column":6,"nodeType":"877","endLine":43,"endColumn":4,"suggestions":"979"},{"ruleId":"875","severity":1,"message":"901","line":38,"column":6,"nodeType":"877","endLine":38,"endColumn":8,"suggestions":"980"},{"ruleId":"868","severity":1,"message":"981","line":40,"column":9,"nodeType":"870","messageId":"871","endLine":40,"endColumn":17},{"ruleId":"904","severity":1,"message":"905","line":136,"column":48,"nodeType":"906","messageId":"907","endLine":136,"endColumn":50},{"ruleId":"904","severity":1,"message":"905","line":209,"column":41,"nodeType":"906","messageId":"907","endLine":209,"endColumn":43},{"ruleId":"868","severity":1,"message":"908","line":1,"column":27,"nodeType":"870","messageId":"871","endLine":1,"endColumn":36},{"ruleId":"904","severity":1,"message":"905","line":22,"column":25,"nodeType":"906","messageId":"907","endLine":22,"endColumn":27},{"ruleId":"868","severity":1,"message":"982","line":18,"column":10,"nodeType":"870","messageId":"871","endLine":18,"endColumn":20},{"ruleId":"868","severity":1,"message":"983","line":21,"column":10,"nodeType":"870","messageId":"871","endLine":21,"endColumn":16},{"ruleId":"868","severity":1,"message":"984","line":21,"column":18,"nodeType":"870","messageId":"871","endLine":21,"endColumn":27},{"ruleId":"868","severity":1,"message":"985","line":22,"column":9,"nodeType":"870","messageId":"871","endLine":22,"endColumn":13},{"ruleId":"904","severity":1,"message":"905","line":40,"column":66,"nodeType":"906","messageId":"907","endLine":40,"endColumn":68},{"ruleId":"904","severity":1,"message":"905","line":44,"column":61,"nodeType":"906","messageId":"907","endLine":44,"endColumn":63},{"ruleId":"904","severity":1,"message":"905","line":66,"column":30,"nodeType":"906","messageId":"907","endLine":66,"endColumn":32},{"ruleId":"904","severity":1,"message":"905","line":87,"column":24,"nodeType":"906","messageId":"907","endLine":87,"endColumn":26},{"ruleId":"904","severity":1,"message":"905","line":93,"column":26,"nodeType":"906","messageId":"907","endLine":93,"endColumn":28},{"ruleId":"904","severity":1,"message":"905","line":96,"column":33,"nodeType":"906","messageId":"907","endLine":96,"endColumn":35},{"ruleId":"904","severity":1,"message":"905","line":107,"column":30,"nodeType":"906","messageId":"907","endLine":107,"endColumn":32},{"ruleId":"904","severity":1,"message":"905","line":127,"column":22,"nodeType":"906","messageId":"907","endLine":127,"endColumn":24},{"ruleId":"875","severity":1,"message":"986","line":131,"column":6,"nodeType":"877","endLine":131,"endColumn":22,"suggestions":"987"},{"ruleId":"875","severity":1,"message":"988","line":135,"column":6,"nodeType":"877","endLine":135,"endColumn":8,"suggestions":"989"},{"ruleId":"904","severity":1,"message":"905","line":200,"column":56,"nodeType":"906","messageId":"907","endLine":200,"endColumn":58},{"ruleId":"915","severity":1,"message":"916","line":218,"column":23,"nodeType":"881","endLine":225,"endColumn":25},{"ruleId":"904","severity":1,"message":"905","line":248,"column":63,"nodeType":"906","messageId":"907","endLine":248,"endColumn":65},{"ruleId":"904","severity":1,"message":"905","line":256,"column":35,"nodeType":"906","messageId":"907","endLine":256,"endColumn":37},{"ruleId":"904","severity":1,"message":"905","line":318,"column":69,"nodeType":"906","messageId":"907","endLine":318,"endColumn":71},{"ruleId":"904","severity":1,"message":"905","line":321,"column":68,"nodeType":"906","messageId":"907","endLine":321,"endColumn":70},{"ruleId":"904","severity":1,"message":"905","line":453,"column":35,"nodeType":"906","messageId":"907","endLine":453,"endColumn":37},{"ruleId":"904","severity":1,"message":"905","line":486,"column":61,"nodeType":"906","messageId":"907","endLine":486,"endColumn":63},{"ruleId":"904","severity":1,"message":"905","line":491,"column":38,"nodeType":"906","messageId":"907","endLine":491,"endColumn":40},{"ruleId":"904","severity":1,"message":"905","line":502,"column":43,"nodeType":"906","messageId":"907","endLine":502,"endColumn":45},{"ruleId":"936","severity":1,"message":"990","line":638,"column":15,"nodeType":"881","endLine":638,"endColumn":26},{"ruleId":"868","severity":1,"message":"991","line":19,"column":10,"nodeType":"870","messageId":"871","endLine":19,"endColumn":21},{"ruleId":"868","severity":1,"message":"992","line":23,"column":23,"nodeType":"870","messageId":"871","endLine":23,"endColumn":37},{"ruleId":"875","severity":1,"message":"901","line":68,"column":6,"nodeType":"877","endLine":68,"endColumn":8,"suggestions":"993"},{"ruleId":"904","severity":1,"message":"905","line":309,"column":50,"nodeType":"906","messageId":"907","endLine":309,"endColumn":52},{"ruleId":"904","severity":1,"message":"905","line":409,"column":50,"nodeType":"906","messageId":"907","endLine":409,"endColumn":52},{"ruleId":"904","severity":1,"message":"905","line":524,"column":42,"nodeType":"906","messageId":"907","endLine":524,"endColumn":44},{"ruleId":"904","severity":1,"message":"905","line":578,"column":53,"nodeType":"906","messageId":"907","endLine":578,"endColumn":55},{"ruleId":"875","severity":1,"message":"922","line":27,"column":6,"nodeType":"877","endLine":27,"endColumn":8,"suggestions":"994"},{"ruleId":"868","severity":1,"message":"909","line":3,"column":10,"nodeType":"870","messageId":"871","endLine":3,"endColumn":14},{"ruleId":"868","severity":1,"message":"973","line":5,"column":3,"nodeType":"870","messageId":"871","endLine":5,"endColumn":10},{"ruleId":"868","severity":1,"message":"910","line":6,"column":3,"nodeType":"870","messageId":"871","endLine":6,"endColumn":10},{"ruleId":"868","severity":1,"message":"911","line":7,"column":3,"nodeType":"870","messageId":"871","endLine":7,"endColumn":9},{"ruleId":"868","severity":1,"message":"995","line":11,"column":8,"nodeType":"870","messageId":"871","endLine":11,"endColumn":9},{"ruleId":"868","severity":1,"message":"917","line":13,"column":10,"nodeType":"870","messageId":"871","endLine":13,"endColumn":25},{"ruleId":"868","severity":1,"message":"996","line":37,"column":10,"nodeType":"870","messageId":"871","endLine":37,"endColumn":18},{"ruleId":"868","severity":1,"message":"997","line":37,"column":20,"nodeType":"870","messageId":"871","endLine":37,"endColumn":31},{"ruleId":"868","severity":1,"message":"998","line":38,"column":10,"nodeType":"870","messageId":"871","endLine":38,"endColumn":19},{"ruleId":"868","severity":1,"message":"999","line":38,"column":21,"nodeType":"870","messageId":"871","endLine":38,"endColumn":33},{"ruleId":"868","severity":1,"message":"912","line":41,"column":11,"nodeType":"870","messageId":"871","endLine":41,"endColumn":18},{"ruleId":"868","severity":1,"message":"914","line":43,"column":9,"nodeType":"870","messageId":"871","endLine":43,"endColumn":19},{"ruleId":"904","severity":1,"message":"905","line":45,"column":35,"nodeType":"906","messageId":"907","endLine":45,"endColumn":37},{"ruleId":"904","severity":1,"message":"925","line":75,"column":18,"nodeType":"906","messageId":"907","endLine":75,"endColumn":20},{"ruleId":"904","severity":1,"message":"925","line":82,"column":16,"nodeType":"906","messageId":"907","endLine":82,"endColumn":18},{"ruleId":"868","severity":1,"message":"1000","line":10,"column":3,"nodeType":"870","messageId":"871","endLine":10,"endColumn":15},{"ruleId":"904","severity":1,"message":"905","line":40,"column":57,"nodeType":"906","messageId":"907","endLine":40,"endColumn":59},{"ruleId":"904","severity":1,"message":"905","line":47,"column":57,"nodeType":"906","messageId":"907","endLine":47,"endColumn":59},{"ruleId":"875","severity":1,"message":"1001","line":66,"column":6,"nodeType":"877","endLine":66,"endColumn":8,"suggestions":"1002"},{"ruleId":"936","severity":1,"message":"990","line":19,"column":21,"nodeType":"881","endLine":19,"endColumn":35},{"ruleId":"915","severity":1,"message":"916","line":98,"column":17,"nodeType":"881","endLine":98,"endColumn":54},{"ruleId":"915","severity":1,"message":"916","line":112,"column":17,"nodeType":"881","endLine":112,"endColumn":44},{"ruleId":"915","severity":1,"message":"916","line":126,"column":17,"nodeType":"881","endLine":126,"endColumn":45},{"ruleId":"915","severity":1,"message":"916","line":140,"column":15,"nodeType":"881","endLine":140,"endColumn":43},{"ruleId":"936","severity":1,"message":"990","line":20,"column":41,"nodeType":"881","endLine":20,"endColumn":52},{"ruleId":"936","severity":1,"message":"990","line":49,"column":41,"nodeType":"881","endLine":49,"endColumn":52},{"ruleId":"936","severity":1,"message":"990","line":50,"column":41,"nodeType":"881","endLine":50,"endColumn":52},{"ruleId":"936","severity":1,"message":"990","line":51,"column":41,"nodeType":"881","endLine":51,"endColumn":52},{"ruleId":"936","severity":1,"message":"990","line":67,"column":33,"nodeType":"881","endLine":67,"endColumn":44},{"ruleId":"936","severity":1,"message":"990","line":89,"column":41,"nodeType":"881","endLine":89,"endColumn":52},{"ruleId":"868","severity":1,"message":"1003","line":1,"column":8,"nodeType":"870","messageId":"871","endLine":1,"endColumn":14},{"ruleId":"868","severity":1,"message":"977","line":2,"column":8,"nodeType":"870","messageId":"871","endLine":2,"endColumn":14},{"ruleId":"868","severity":1,"message":"885","line":3,"column":8,"nodeType":"870","messageId":"871","endLine":3,"endColumn":14},{"ruleId":"868","severity":1,"message":"995","line":4,"column":8,"nodeType":"870","messageId":"871","endLine":4,"endColumn":9},{"ruleId":"868","severity":1,"message":"908","line":5,"column":10,"nodeType":"870","messageId":"871","endLine":5,"endColumn":19},{"ruleId":"915","severity":1,"message":"916","line":19,"column":11,"nodeType":"881","endLine":19,"endColumn":93},{"ruleId":"936","severity":1,"message":"937","line":320,"column":9,"nodeType":"881","endLine":320,"endColumn":38},{"ruleId":"868","severity":1,"message":"977","line":3,"column":8,"nodeType":"870","messageId":"871","endLine":3,"endColumn":14},{"ruleId":"868","severity":1,"message":"977","line":1,"column":8,"nodeType":"870","messageId":"871","endLine":1,"endColumn":14},{"ruleId":"868","severity":1,"message":"1003","line":2,"column":8,"nodeType":"870","messageId":"871","endLine":2,"endColumn":14},{"ruleId":"868","severity":1,"message":"1004","line":18,"column":9,"nodeType":"870","messageId":"871","endLine":18,"endColumn":22},{"ruleId":"868","severity":1,"message":"1005","line":44,"column":10,"nodeType":"870","messageId":"871","endLine":44,"endColumn":19},{"ruleId":"915","severity":1,"message":"916","line":24,"column":17,"nodeType":"881","endLine":27,"endColumn":19},{"ruleId":"868","severity":1,"message":"910","line":3,"column":10,"nodeType":"870","messageId":"871","endLine":3,"endColumn":17},{"ruleId":"868","severity":1,"message":"911","line":3,"column":19,"nodeType":"870","messageId":"871","endLine":3,"endColumn":25},{"ruleId":"868","severity":1,"message":"1006","line":7,"column":10,"nodeType":"870","messageId":"871","endLine":7,"endColumn":25},{"ruleId":"868","severity":1,"message":"912","line":26,"column":11,"nodeType":"870","messageId":"871","endLine":26,"endColumn":18},{"ruleId":"868","severity":1,"message":"1007","line":50,"column":18,"nodeType":"870","messageId":"871","endLine":50,"endColumn":28},{"ruleId":"915","severity":1,"message":"916","line":123,"column":15,"nodeType":"881","endLine":126,"endColumn":17},{"ruleId":"936","severity":1,"message":"990","line":165,"column":21,"nodeType":"881","endLine":172,"endColumn":22},{"ruleId":"936","severity":1,"message":"990","line":193,"column":25,"nodeType":"881","endLine":193,"endColumn":59},{"ruleId":"936","severity":1,"message":"990","line":198,"column":25,"nodeType":"881","endLine":205,"endColumn":26},{"ruleId":"915","severity":1,"message":"916","line":292,"column":21,"nodeType":"881","endLine":295,"endColumn":23},{"ruleId":"868","severity":1,"message":"908","line":1,"column":17,"nodeType":"870","messageId":"871","endLine":1,"endColumn":26},{"ruleId":"868","severity":1,"message":"1008","line":6,"column":8,"nodeType":"870","messageId":"871","endLine":6,"endColumn":23},{"ruleId":"904","severity":1,"message":"905","line":16,"column":64,"nodeType":"906","messageId":"907","endLine":16,"endColumn":66},{"ruleId":"904","severity":1,"message":"905","line":19,"column":20,"nodeType":"906","messageId":"907","endLine":19,"endColumn":22},{"ruleId":"904","severity":1,"message":"905","line":19,"column":44,"nodeType":"906","messageId":"907","endLine":19,"endColumn":46},{"ruleId":"904","severity":1,"message":"905","line":19,"column":68,"nodeType":"906","messageId":"907","endLine":19,"endColumn":70},{"ruleId":"904","severity":1,"message":"905","line":19,"column":92,"nodeType":"906","messageId":"907","endLine":19,"endColumn":94},{"ruleId":"904","severity":1,"message":"905","line":19,"column":116,"nodeType":"906","messageId":"907","endLine":19,"endColumn":118},{"ruleId":"953","severity":1,"message":"954","line":96,"column":15,"nodeType":"881","messageId":"955","endLine":100,"endColumn":16,"fix":"1009"},{"ruleId":"868","severity":1,"message":"908","line":1,"column":17,"nodeType":"870","messageId":"871","endLine":1,"endColumn":26},{"ruleId":"904","severity":1,"message":"905","line":9,"column":64,"nodeType":"906","messageId":"907","endLine":9,"endColumn":66},{"ruleId":"904","severity":1,"message":"905","line":12,"column":20,"nodeType":"906","messageId":"907","endLine":12,"endColumn":22},{"ruleId":"904","severity":1,"message":"905","line":12,"column":44,"nodeType":"906","messageId":"907","endLine":12,"endColumn":46},{"ruleId":"904","severity":1,"message":"905","line":12,"column":68,"nodeType":"906","messageId":"907","endLine":12,"endColumn":70},{"ruleId":"904","severity":1,"message":"905","line":12,"column":92,"nodeType":"906","messageId":"907","endLine":12,"endColumn":94},{"ruleId":"904","severity":1,"message":"905","line":12,"column":116,"nodeType":"906","messageId":"907","endLine":12,"endColumn":118},{"ruleId":"904","severity":1,"message":"905","line":18,"column":48,"nodeType":"906","messageId":"907","endLine":18,"endColumn":50},{"ruleId":"915","severity":1,"message":"916","line":40,"column":13,"nodeType":"881","endLine":40,"endColumn":71},{"ruleId":"915","severity":1,"message":"916","line":77,"column":11,"nodeType":"881","endLine":77,"endColumn":79},{"ruleId":"868","severity":1,"message":"912","line":8,"column":11,"nodeType":"870","messageId":"871","endLine":8,"endColumn":18},{"ruleId":"868","severity":1,"message":"1010","line":9,"column":18,"nodeType":"870","messageId":"871","endLine":9,"endColumn":25},{"ruleId":"875","severity":1,"message":"899","line":46,"column":15,"nodeType":"900","endLine":58,"endColumn":6},{"ruleId":"875","severity":1,"message":"1011","line":58,"column":8,"nodeType":"877","endLine":58,"endColumn":15,"suggestions":"1012"},{"ruleId":"1013","severity":1,"message":"1014","line":28,"column":15,"nodeType":"1015","messageId":"1016","endLine":28,"endColumn":26},{"ruleId":"875","severity":1,"message":"1017","line":81,"column":6,"nodeType":"877","endLine":81,"endColumn":8,"suggestions":"1018"},{"ruleId":"875","severity":1,"message":"1019","line":93,"column":5,"nodeType":"870","endLine":93,"endColumn":9},{"ruleId":"875","severity":1,"message":"1020","line":93,"column":5,"nodeType":"870","endLine":93,"endColumn":9,"suggestions":"1021"},{"ruleId":"936","severity":1,"message":"937","line":111,"column":17,"nodeType":"881","endLine":121,"endColumn":18},{"ruleId":"936","severity":1,"message":"937","line":124,"column":17,"nodeType":"881","endLine":136,"endColumn":18},{"ruleId":"904","severity":1,"message":"905","line":153,"column":51,"nodeType":"906","messageId":"907","endLine":153,"endColumn":53},{"ruleId":"904","severity":1,"message":"925","line":158,"column":42,"nodeType":"906","messageId":"907","endLine":158,"endColumn":44},{"ruleId":"904","severity":1,"message":"925","line":158,"column":73,"nodeType":"906","messageId":"907","endLine":158,"endColumn":75},{"ruleId":"904","severity":1,"message":"905","line":278,"column":51,"nodeType":"906","messageId":"907","endLine":278,"endColumn":53},{"ruleId":"904","severity":1,"message":"925","line":283,"column":37,"nodeType":"906","messageId":"907","endLine":283,"endColumn":39},{"ruleId":"904","severity":1,"message":"925","line":283,"column":63,"nodeType":"906","messageId":"907","endLine":283,"endColumn":65},{"ruleId":"868","severity":1,"message":"1022","line":13,"column":19,"nodeType":"870","messageId":"871","endLine":13,"endColumn":29},{"ruleId":"868","severity":1,"message":"1023","line":3,"column":23,"nodeType":"870","messageId":"871","endLine":3,"endColumn":34},{"ruleId":"1013","severity":1,"message":"1014","line":14,"column":15,"nodeType":"1015","messageId":"1016","endLine":14,"endColumn":26},{"ruleId":"933","severity":1,"message":"934","line":30,"column":40,"nodeType":"906","messageId":"935","endLine":30,"endColumn":41},{"ruleId":"904","severity":1,"message":"925","line":55,"column":26,"nodeType":"906","messageId":"907","endLine":55,"endColumn":28},{"ruleId":"875","severity":1,"message":"1024","line":41,"column":6,"nodeType":"877","endLine":41,"endColumn":8,"suggestions":"1025"},{"ruleId":"868","severity":1,"message":"1026","line":10,"column":3,"nodeType":"870","messageId":"871","endLine":10,"endColumn":15},{"ruleId":"868","severity":1,"message":"1027","line":11,"column":3,"nodeType":"870","messageId":"871","endLine":11,"endColumn":15},{"ruleId":"868","severity":1,"message":"1028","line":12,"column":3,"nodeType":"870","messageId":"871","endLine":12,"endColumn":17},{"ruleId":"868","severity":1,"message":"1029","line":23,"column":3,"nodeType":"870","messageId":"871","endLine":23,"endColumn":19},{"ruleId":"868","severity":1,"message":"1030","line":24,"column":3,"nodeType":"870","messageId":"871","endLine":24,"endColumn":20},{"ruleId":"868","severity":1,"message":"1031","line":26,"column":3,"nodeType":"870","messageId":"871","endLine":26,"endColumn":17},{"ruleId":"868","severity":1,"message":"1032","line":30,"column":10,"nodeType":"870","messageId":"871","endLine":30,"endColumn":25},{"ruleId":"868","severity":1,"message":"1033","line":31,"column":10,"nodeType":"870","messageId":"871","endLine":31,"endColumn":22},{"ruleId":"868","severity":1,"message":"1034","line":31,"column":24,"nodeType":"870","messageId":"871","endLine":31,"endColumn":31},{"ruleId":"868","severity":1,"message":"1035","line":41,"column":10,"nodeType":"870","messageId":"871","endLine":41,"endColumn":24},{"ruleId":"868","severity":1,"message":"1036","line":46,"column":10,"nodeType":"870","messageId":"871","endLine":46,"endColumn":19},{"ruleId":"868","severity":1,"message":"1037","line":54,"column":11,"nodeType":"870","messageId":"871","endLine":54,"endColumn":16},{"ruleId":"868","severity":1,"message":"1038","line":58,"column":7,"nodeType":"870","messageId":"871","endLine":58,"endColumn":19},{"ruleId":"926","severity":1,"message":"927","line":65,"column":34,"nodeType":"900","messageId":"928","endLine":65,"endColumn":36},{"ruleId":"904","severity":1,"message":"925","line":98,"column":59,"nodeType":"906","messageId":"907","endLine":98,"endColumn":61},{"ruleId":"904","severity":1,"message":"925","line":105,"column":60,"nodeType":"906","messageId":"907","endLine":105,"endColumn":62},{"ruleId":"904","severity":1,"message":"925","line":109,"column":62,"nodeType":"906","messageId":"907","endLine":109,"endColumn":64},{"ruleId":"875","severity":1,"message":"1039","line":131,"column":6,"nodeType":"877","endLine":131,"endColumn":28,"suggestions":"1040"},{"ruleId":"926","severity":1,"message":"927","line":134,"column":38,"nodeType":"900","messageId":"928","endLine":134,"endColumn":40},{"ruleId":"875","severity":1,"message":"1017","line":181,"column":6,"nodeType":"877","endLine":181,"endColumn":8,"suggestions":"1041"},{"ruleId":"926","severity":1,"message":"1042","line":184,"column":55,"nodeType":"900","messageId":"1043","endLine":184,"endColumn":57},{"ruleId":"904","severity":1,"message":"905","line":185,"column":20,"nodeType":"906","messageId":"907","endLine":185,"endColumn":22},{"ruleId":"926","severity":1,"message":"1042","line":187,"column":59,"nodeType":"900","messageId":"1043","endLine":187,"endColumn":61},{"ruleId":"904","severity":1,"message":"905","line":188,"column":20,"nodeType":"906","messageId":"907","endLine":188,"endColumn":22},{"ruleId":"904","severity":1,"message":"905","line":191,"column":23,"nodeType":"906","messageId":"907","endLine":191,"endColumn":25},{"ruleId":"875","severity":1,"message":"1044","line":194,"column":14,"nodeType":"1045","endLine":194,"endColumn":15},{"ruleId":"875","severity":1,"message":"1046","line":210,"column":6,"nodeType":"877","endLine":210,"endColumn":8,"suggestions":"1047"},{"ruleId":"904","severity":1,"message":"905","line":268,"column":22,"nodeType":"906","messageId":"907","endLine":268,"endColumn":24},{"ruleId":"904","severity":1,"message":"905","line":280,"column":26,"nodeType":"906","messageId":"907","endLine":280,"endColumn":28},{"ruleId":"904","severity":1,"message":"905","line":287,"column":29,"nodeType":"906","messageId":"907","endLine":287,"endColumn":31},{"ruleId":"904","severity":1,"message":"905","line":335,"column":22,"nodeType":"906","messageId":"907","endLine":335,"endColumn":24},{"ruleId":"904","severity":1,"message":"905","line":347,"column":26,"nodeType":"906","messageId":"907","endLine":347,"endColumn":28},{"ruleId":"904","severity":1,"message":"905","line":354,"column":29,"nodeType":"906","messageId":"907","endLine":354,"endColumn":31},{"ruleId":"868","severity":1,"message":"1048","line":401,"column":7,"nodeType":"870","messageId":"871","endLine":401,"endColumn":18},{"ruleId":"936","severity":1,"message":"937","line":416,"column":11,"nodeType":"881","endLine":427,"endColumn":12},{"ruleId":"904","severity":1,"message":"905","line":418,"column":25,"nodeType":"906","messageId":"907","endLine":418,"endColumn":27},{"ruleId":"936","severity":1,"message":"937","line":430,"column":11,"nodeType":"881","endLine":441,"endColumn":12},{"ruleId":"904","severity":1,"message":"905","line":432,"column":25,"nodeType":"906","messageId":"907","endLine":432,"endColumn":27},{"ruleId":"933","severity":1,"message":"934","line":447,"column":42,"nodeType":"906","messageId":"935","endLine":447,"endColumn":43},{"ruleId":"904","severity":1,"message":"905","line":453,"column":49,"nodeType":"906","messageId":"907","endLine":453,"endColumn":51},{"ruleId":"904","severity":1,"message":"905","line":741,"column":49,"nodeType":"906","messageId":"907","endLine":741,"endColumn":51},{"ruleId":"936","severity":1,"message":"990","line":1228,"column":15,"nodeType":"881","endLine":1228,"endColumn":26},{"ruleId":"868","severity":1,"message":"1049","line":9,"column":10,"nodeType":"870","messageId":"871","endLine":9,"endColumn":16},{"ruleId":"868","severity":1,"message":"1050","line":9,"column":18,"nodeType":"870","messageId":"871","endLine":9,"endColumn":27},{"ruleId":"915","severity":1,"message":"916","line":10,"column":13,"nodeType":"881","endLine":13,"endColumn":15},{"ruleId":"904","severity":1,"message":"905","line":32,"column":28,"nodeType":"906","messageId":"907","endLine":32,"endColumn":30},{"ruleId":"904","severity":1,"message":"905","line":33,"column":35,"nodeType":"906","messageId":"907","endLine":33,"endColumn":37},{"ruleId":"904","severity":1,"message":"905","line":61,"column":28,"nodeType":"906","messageId":"907","endLine":61,"endColumn":30},{"ruleId":"936","severity":1,"message":"990","line":18,"column":19,"nodeType":"881","endLine":18,"endColumn":30},{"ruleId":"936","severity":1,"message":"990","line":21,"column":19,"nodeType":"881","endLine":21,"endColumn":30},{"ruleId":"936","severity":1,"message":"990","line":26,"column":19,"nodeType":"881","endLine":26,"endColumn":30},{"ruleId":"936","severity":1,"message":"990","line":31,"column":19,"nodeType":"881","endLine":31,"endColumn":30},{"ruleId":"915","severity":1,"message":"916","line":18,"column":13,"nodeType":"881","endLine":18,"endColumn":60},{"ruleId":"904","severity":1,"message":"905","line":12,"column":67,"nodeType":"906","messageId":"907","endLine":12,"endColumn":69},{"ruleId":"904","severity":1,"message":"905","line":16,"column":24,"nodeType":"906","messageId":"907","endLine":16,"endColumn":26},{"ruleId":"904","severity":1,"message":"905","line":17,"column":23,"nodeType":"906","messageId":"907","endLine":17,"endColumn":25},{"ruleId":"904","severity":1,"message":"905","line":18,"column":23,"nodeType":"906","messageId":"907","endLine":18,"endColumn":25},{"ruleId":"904","severity":1,"message":"905","line":19,"column":23,"nodeType":"906","messageId":"907","endLine":19,"endColumn":25},{"ruleId":"904","severity":1,"message":"905","line":20,"column":23,"nodeType":"906","messageId":"907","endLine":20,"endColumn":25},{"ruleId":"915","severity":1,"message":"916","line":23,"column":17,"nodeType":"881","endLine":27,"endColumn":19},{"ruleId":"904","severity":1,"message":"905","line":39,"column":40,"nodeType":"906","messageId":"907","endLine":39,"endColumn":42},{"ruleId":"868","severity":1,"message":"908","line":1,"column":17,"nodeType":"870","messageId":"871","endLine":1,"endColumn":26},{"ruleId":"868","severity":1,"message":"888","line":3,"column":8,"nodeType":"870","messageId":"871","endLine":3,"endColumn":21},{"ruleId":"868","severity":1,"message":"1051","line":18,"column":9,"nodeType":"870","messageId":"871","endLine":18,"endColumn":21},{"ruleId":"904","severity":1,"message":"905","line":21,"column":67,"nodeType":"906","messageId":"907","endLine":21,"endColumn":69},{"ruleId":"904","severity":1,"message":"905","line":24,"column":24,"nodeType":"906","messageId":"907","endLine":24,"endColumn":26},{"ruleId":"904","severity":1,"message":"905","line":25,"column":23,"nodeType":"906","messageId":"907","endLine":25,"endColumn":25},{"ruleId":"904","severity":1,"message":"905","line":26,"column":23,"nodeType":"906","messageId":"907","endLine":26,"endColumn":25},{"ruleId":"904","severity":1,"message":"905","line":27,"column":23,"nodeType":"906","messageId":"907","endLine":27,"endColumn":25},{"ruleId":"904","severity":1,"message":"905","line":28,"column":23,"nodeType":"906","messageId":"907","endLine":28,"endColumn":25},{"ruleId":"904","severity":1,"message":"905","line":36,"column":44,"nodeType":"906","messageId":"907","endLine":36,"endColumn":46},{"ruleId":"915","severity":1,"message":"916","line":148,"column":19,"nodeType":"881","endLine":151,"endColumn":21},{"ruleId":"936","severity":1,"message":"990","line":183,"column":15,"nodeType":"881","endLine":183,"endColumn":66},{"ruleId":"936","severity":1,"message":"990","line":186,"column":15,"nodeType":"881","endLine":186,"endColumn":69},{"ruleId":"875","severity":1,"message":"1019","line":30,"column":8,"nodeType":"1045","endLine":30,"endColumn":10},{"ruleId":"875","severity":1,"message":"1052","line":30,"column":8,"nodeType":"1045","endLine":30,"endColumn":10,"suggestions":"1053"},{"ruleId":"915","severity":1,"message":"916","line":9,"column":13,"nodeType":"881","endLine":9,"endColumn":81},{"ruleId":"915","severity":1,"message":"916","line":12,"column":13,"nodeType":"881","endLine":15,"endColumn":15},{"ruleId":"915","severity":1,"message":"916","line":19,"column":13,"nodeType":"881","endLine":22,"endColumn":15},{"ruleId":"915","severity":1,"message":"916","line":25,"column":13,"nodeType":"881","endLine":28,"endColumn":15},{"ruleId":"904","severity":1,"message":"905","line":12,"column":67,"nodeType":"906","messageId":"907","endLine":12,"endColumn":69},{"ruleId":"904","severity":1,"message":"905","line":16,"column":24,"nodeType":"906","messageId":"907","endLine":16,"endColumn":26},{"ruleId":"904","severity":1,"message":"905","line":17,"column":23,"nodeType":"906","messageId":"907","endLine":17,"endColumn":25},{"ruleId":"904","severity":1,"message":"905","line":18,"column":23,"nodeType":"906","messageId":"907","endLine":18,"endColumn":25},{"ruleId":"904","severity":1,"message":"905","line":19,"column":23,"nodeType":"906","messageId":"907","endLine":19,"endColumn":25},{"ruleId":"904","severity":1,"message":"905","line":20,"column":23,"nodeType":"906","messageId":"907","endLine":20,"endColumn":25},{"ruleId":"915","severity":1,"message":"916","line":23,"column":17,"nodeType":"881","endLine":27,"endColumn":19},{"ruleId":"904","severity":1,"message":"905","line":39,"column":40,"nodeType":"906","messageId":"907","endLine":39,"endColumn":42},{"ruleId":"915","severity":1,"message":"916","line":18,"column":13,"nodeType":"881","endLine":18,"endColumn":60},"no-native-reassign",["1054"],"no-negated-in-lhs",["1055"],"no-unused-vars","'Register' is defined but never used.","Identifier","unusedVar","'GiTemplarShield' is defined but never used.","'Home_page' is defined but never used.","'Metaverse' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'isLoggedIn'. Either include them or remove the dependency array.","ArrayExpression",["1056"],"react/jsx-pascal-case","Imported JSX component Account_Authenticator must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'SET_USER_FAV_PAIRING' is defined but never used.","'loading' is assigned a value but never used.","'Banner' is defined but never used.","'Plan' is defined but never used.","'MarketTrend' is defined but never used.","'TradeAnyWhere' is defined but never used.","'GetInTouch' is defined but never used.","'StartTrade' is defined but never used.","'Newdes' is defined but never used.","'BannerNew' is defined but never used.","no-use-before-define","'Tawk_API' was used before it was defined.","usedBeforeDefined","'Tawk_LoadStart' is assigned a value but never used.","'camera_type' is assigned a value but never used.","'setcameratype' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'props.history', 'user.params', and 'user.user_id'. Either include them or remove the dependency array.",["1057"],"'dataURLtoFile' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'Link' is defined but never used.","'isEmail' is defined but never used.","'isPass' is defined but never used.","'webData' is assigned a value but never used.","'eye' is assigned a value but never used.","'hsPassword' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'getElementError' is defined but never used.","'valueLength' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'user.params' and 'user.user_id'. Either include them or remove the dependency array.",["1058"],["1059"],"Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'setActiveTab' is assigned a value but never used.",["1060"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.",["1061"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'isNum' is defined but never used.","'style' is defined but never used.","'checked' is assigned a value but never used.","'req_no' is assigned a value but never used.","'setReqno' is assigned a value but never used.","'famount' is assigned a value but never used.","'filedata' is assigned a value but never used.","'uploadIMG' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getWallets' and 'total_inr'. Either include them or remove the dependency array.",["1062"],"'getBTXXSellH' is assigned a value but never used.",["1063"],"no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"1064","text":"1065"},{"range":"1066","text":"1065"},"'user_logout' is defined but never used.","'dispatch' is assigned a value but never used.","'Helmet' is defined but never used.","'helmet' is defined but never used.","'b' is assigned a value but never used.","Assignments to the 'b' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression",["1067"],"'backKyc' is assigned a value but never used.","'comp_btn' is assigned a value but never used.",["1068"],"React Hook React.useEffect has missing dependencies: 'user.params' and 'user.user_id'. Either include them or remove the dependency array.",["1069"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'isCpass' is defined but never used.","'useState' is defined but never used.",["1070"],["1071"],"'Footer' is defined but never used.","React Hook useEffect has missing dependencies: 'coins', 'isLoggedIn', and 'props?.match?.params?.id'. Either include them or remove the dependency array.",["1072"],["1073"],"'renderer' is assigned a value but never used.","'btxxWallet' is assigned a value but never used.","'amount' is assigned a value but never used.","'setAmount' is assigned a value but never used.","'coin' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'webData.direct_btxx_buy' and 'webData.direct_btxx_sel'. Either include them or remove the dependency array.",["1074"],"React Hook useEffect has a missing dependency: 'getWallets'. Either include it or remove the dependency array.",["1075"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'type_of_kyc' is assigned a value but never used.","'setDisableSend' is assigned a value but never used.",["1076"],["1077"],"'$' is defined but never used.","'showPass' is assigned a value but never used.","'setShowPass' is assigned a value but never used.","'showCPass' is assigned a value but never used.","'setShowCPass' is assigned a value but never used.","'N_getHarvest' is defined but never used.","React Hook useEffect has missing dependencies: 'startStaking', 'user.params', and 'user.user_id'. Either include them or remove the dependency array.",["1078"],"'Header' is defined but never used.","'JSONPrettyMon' is assigned a value but never used.","'a11yProps' is defined but never used.","'GiHamburgerMenu' is defined but never used.","'swtchTheme' is defined but never used.","'autoMergeLevel1' is defined but never used.",{"range":"1079","text":"1065"},"'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setNewsType' needs the current value of 'data'.",["1080"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1081"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'coin'. Either include it or remove the dependency array.",["1082"],"'setLoading' is assigned a value but never used.","'useDispatch' is defined but never used.","React Hook useEffect has missing dependencies: 'symbol' and 'time'. Either include them or remove the dependency array.",["1083"],"'getOrderBook' is defined but never used.","'getTradeHist' is defined but never used.","'getUserBalance' is defined but never used.","'BUY_MARKET_PRICE' is defined but never used.","'SELL_MARKET_PRICE' is defined but never used.","'SET_ORDER_BOOK' is defined but never used.","'applyMiddleware' is defined but never used.","'borderBottom' is defined but never used.","'padding' is defined but never used.","'wallet_balance' is assigned a value but never used.","'total_inr' is assigned a value but never used.","'token' is assigned a value but never used.","'current_coin' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setCurrentBuySellTokenBalance'. Either include it or remove the dependency array.",["1084"],["1085"],"Array.prototype.find() expects a value to be returned at the end of arrow function.","expectedAtEnd","Assignments to the 'time' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has missing dependencies: 'dispatch', 'getCurrentBuySellTokenBalance', 'user.params', and 'user.user_id'. Either include them or remove the dependency array.",["1086"],"'wallet_coin' is assigned a value but never used.","'symbol' is assigned a value but never used.","'setSymbol' is assigned a value but never used.","'banner_child' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'last_banner_close' and 'webData'. Either include them or remove the dependency array.",["1087"],"no-global-assign","no-unsafe-negation",{"desc":"1088","fix":"1089"},{"desc":"1090","fix":"1091"},{"desc":"1092","fix":"1093"},{"desc":"1092","fix":"1094"},{"desc":"1092","fix":"1095"},{"desc":"1092","fix":"1096"},{"desc":"1097","fix":"1098"},{"desc":"1092","fix":"1099"},[34250,34250]," rel=\"noreferrer\"",[74648,74648],{"desc":"1092","fix":"1100"},{"desc":"1090","fix":"1101"},{"desc":"1092","fix":"1102"},{"desc":"1092","fix":"1103"},{"desc":"1092","fix":"1104"},{"desc":"1105","fix":"1106"},{"desc":"1090","fix":"1107"},{"desc":"1108","fix":"1109"},{"desc":"1110","fix":"1111"},{"desc":"1090","fix":"1112"},{"desc":"1092","fix":"1113"},{"desc":"1114","fix":"1115"},[3207,3207],{"desc":"1116","fix":"1117"},{"desc":"1118","fix":"1119"},{"desc":"1120","fix":"1121"},{"desc":"1122","fix":"1123"},{"desc":"1124","fix":"1125"},{"desc":"1118","fix":"1126"},{"desc":"1127","fix":"1128"},{"desc":"1129","fix":"1130"},"Update the dependencies array to be: [dispatch, isLoggedIn, token]",{"range":"1131","text":"1132"},"Update the dependencies array to be: [props.history, user.params, user.user_id]",{"range":"1133","text":"1134"},"Update the dependencies array to be: [user.params, user.user_id]",{"range":"1135","text":"1136"},{"range":"1137","text":"1136"},{"range":"1138","text":"1136"},{"range":"1139","text":"1136"},"Update the dependencies array to be: [coins, getWallets, total_inr]",{"range":"1140","text":"1141"},{"range":"1142","text":"1136"},{"range":"1143","text":"1136"},{"range":"1144","text":"1134"},{"range":"1145","text":"1136"},{"range":"1146","text":"1136"},{"range":"1147","text":"1136"},"Update the dependencies array to be: [coins_loading, pending_order_loading, close_order_loading, coins.length, props?.match?.params?.id, coins, isLoggedIn]",{"range":"1148","text":"1149"},{"range":"1150","text":"1134"},"Update the dependencies array to be: [selectedAction, webData.direct_btxx_buy, webData.direct_btxx_sel]",{"range":"1151","text":"1152"},"Update the dependencies array to be: [getWallets]",{"range":"1153","text":"1154"},{"range":"1155","text":"1134"},{"range":"1156","text":"1136"},"Update the dependencies array to be: [startStaking, user.params, user.user_id]",{"range":"1157","text":"1158"},"Update the dependencies array to be: [data, index]",{"range":"1159","text":"1160"},"Update the dependencies array to be: [dispatch]",{"range":"1161","text":"1162"},"Update the dependencies array to be: [coin]",{"range":"1163","text":"1164"},"Update the dependencies array to be: [symbol, time]",{"range":"1165","text":"1166"},"Update the dependencies array to be: [coin, setCurrentBuySellTokenBalance, wallet_details]",{"range":"1167","text":"1168"},{"range":"1169","text":"1162"},"Update the dependencies array to be: [dispatch, getCurrentBuySellTokenBalance, user.params, user.user_id]",{"range":"1170","text":"1171"},"Update the dependencies array to be: [last_banner_close, webData]",{"range":"1172","text":"1173"},[4864,4871],"[dispatch, isLoggedIn, token]",[1781,1783],"[props.history, user.params, user.user_id]",[1201,1203],"[user.params, user.user_id]",[870,872],[1601,1619],[2023,2025],[6955,6962],"[coins, getWallets, total_inr]",[7797,7799],[628,630],[4232,4234],[719,721],[1268,1270],[1081,1083],[1298,1392],"[coins_loading, pending_order_loading, close_order_loading, coins.length, props?.match?.params?.id, coins, isLoggedIn]",[1427,1429],[4258,4274],"[selectedAction, webData.direct_btxx_buy, webData.direct_btxx_sel]",[4321,4323],"[getWallets]",[2492,2494],[898,900],[2596,2598],"[startStaking, user.params, user.user_id]",[1703,1710],"[data, index]",[2567,2569],"[dispatch]",[2857,2861],"[coin]",[1098,1100],"[symbol, time]",[4849,4871],"[coin, setCurrentBuySellTokenBalance, wallet_details]",[6311,6313],[7270,7272],"[dispatch, getCurrentBuySellTokenBalance, user.params, user.user_id]",[1225,1227],"[last_banner_close, webData]"]